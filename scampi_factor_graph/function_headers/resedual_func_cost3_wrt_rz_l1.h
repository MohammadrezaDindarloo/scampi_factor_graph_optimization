// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: resedual_func_cost3_wrt_rz_l1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> ResedualFuncCost3WrtRzL1(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 988

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (324)
  const Scalar _tmp0 = std::pow(rz, Scalar(2));
  const Scalar _tmp1 = _tmp0 + std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2));
  const Scalar _tmp2 = std::sqrt(_tmp1);
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = std::cos(_tmp3);
  const Scalar _tmp5 = _tmp4 * rot_init_y;
  const Scalar _tmp6 = std::sin(_tmp3);
  const Scalar _tmp7 = _tmp6 / _tmp2;
  const Scalar _tmp8 = _tmp7 * rot_init_w;
  const Scalar _tmp9 = _tmp7 * rot_init_z;
  const Scalar _tmp10 = _tmp7 * rot_init_x;
  const Scalar _tmp11 = _tmp10 * rz;
  const Scalar _tmp12 = -_tmp11 + _tmp5 + _tmp8 * ry + _tmp9 * rx;
  const Scalar _tmp13 = _tmp4 * rot_init_x;
  const Scalar _tmp14 = _tmp7 * rot_init_y;
  const Scalar _tmp15 = _tmp14 * rz;
  const Scalar _tmp16 = _tmp13 + _tmp15 + _tmp8 * rx - _tmp9 * ry;
  const Scalar _tmp17 = 2 * _tmp16;
  const Scalar _tmp18 = _tmp12 * _tmp17;
  const Scalar _tmp19 = _tmp4 * rot_init_z;
  const Scalar _tmp20 = _tmp8 * rz;
  const Scalar _tmp21 = _tmp10 * ry - _tmp14 * rx + _tmp19 + _tmp20;
  const Scalar _tmp22 = _tmp4 * rot_init_w;
  const Scalar _tmp23 = _tmp9 * rz;
  const Scalar _tmp24 = -_tmp10 * rx - _tmp14 * ry + _tmp22 - _tmp23;
  const Scalar _tmp25 = 2 * _tmp24;
  const Scalar _tmp26 = _tmp21 * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp18 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = -2 * std::pow(_tmp21, Scalar(2));
  const Scalar _tmp30 = 1 - 2 * std::pow(_tmp12, Scalar(2));
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp30;
  const Scalar _tmp32 = _tmp17 * _tmp21;
  const Scalar _tmp33 = _tmp12 * _tmp25;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp32 - Scalar(0.010999999999999999) * _tmp33;
  const Scalar _tmp35 = -_tmp31 + _tmp34;
  const Scalar _tmp36 = _tmp28 + _tmp35;
  const Scalar _tmp37 = _tmp36 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = -2 * std::pow(_tmp16, Scalar(2));
  const Scalar _tmp41 = Scalar(0.20999999999999999) * _tmp29 +
                        Scalar(0.20999999999999999) * _tmp40 + Scalar(0.20999999999999999);
  const Scalar _tmp42 = 2 * _tmp12 * _tmp21;
  const Scalar _tmp43 = _tmp16 * _tmp25;
  const Scalar _tmp44 =
      -Scalar(0.010999999999999999) * _tmp42 + Scalar(0.010999999999999999) * _tmp43;
  const Scalar _tmp45 = -_tmp41 + _tmp44;
  const Scalar _tmp46 = _tmp39 + _tmp45;
  const Scalar _tmp47 = _tmp46 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp48 = std::pow(_tmp37, Scalar(2)) + std::pow(_tmp47, Scalar(2));
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp50 = _tmp46 * _tmp49;
  const Scalar _tmp51 = _tmp36 * _tmp49;
  const Scalar _tmp52 = fh1 * (-_tmp37 * _tmp50 + _tmp47 * _tmp51);
  const Scalar _tmp53 = _tmp41 + _tmp44;
  const Scalar _tmp54 = _tmp38 + _tmp53;
  const Scalar _tmp55 = _tmp54 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp56 = _tmp31 + _tmp34;
  const Scalar _tmp57 = _tmp27 + _tmp56;
  const Scalar _tmp58 = _tmp57 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp59 = std::pow(_tmp55, Scalar(2)) + std::pow(_tmp58, Scalar(2));
  const Scalar _tmp60 = std::pow(_tmp59, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp58 * _tmp60;
  const Scalar _tmp62 = _tmp28 + _tmp56;
  const Scalar _tmp63 = _tmp62 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp64 = _tmp38 + _tmp45;
  const Scalar _tmp65 = _tmp64 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp66 = std::pow(_tmp63, Scalar(2)) + std::pow(_tmp65, Scalar(2));
  const Scalar _tmp67 = std::pow(_tmp66, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp65 * _tmp67;
  const Scalar _tmp69 = _tmp39 + _tmp53;
  const Scalar _tmp70 = _tmp69 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp71 = _tmp27 + _tmp35;
  const Scalar _tmp72 = _tmp71 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = _tmp70 * _tmp73;
  const Scalar _tmp75 = _tmp63 * _tmp67;
  const Scalar _tmp76 = -_tmp68 + _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp55 * _tmp60;
  const Scalar _tmp78 = _tmp61 * _tmp74 - _tmp77;
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 = std::pow(_tmp72, Scalar(2));
  const Scalar _tmp82 = std::pow(_tmp70, Scalar(2)) + _tmp81;
  const Scalar _tmp83 = std::sqrt(_tmp82);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = _tmp71 * _tmp84;
  const Scalar _tmp86 = _tmp69 * _tmp84;
  const Scalar _tmp87 = _tmp70 * _tmp85 - _tmp72 * _tmp86;
  const Scalar _tmp88 = _tmp73 * _tmp83;
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = _tmp54 * _tmp61 - _tmp57 * _tmp77 + _tmp61 * _tmp89;
  const Scalar _tmp91 = -_tmp62 * _tmp68 + _tmp64 * _tmp75 + _tmp75 * _tmp89 - _tmp80 * _tmp90;
  const Scalar _tmp92 = Scalar(1.0) / (_tmp91);
  const Scalar _tmp93 = Scalar(1.0) * _tmp92;
  const Scalar _tmp94 = _tmp80 * _tmp93;
  const Scalar _tmp95 = -_tmp61 * _tmp94 + _tmp75 * _tmp93;
  const Scalar _tmp96 = _tmp88 * _tmp95;
  const Scalar _tmp97 = Scalar(0.20999999999999999) * _tmp42 + Scalar(0.20999999999999999) * _tmp43;
  const Scalar _tmp98 =
      -Scalar(0.010999999999999999) * _tmp30 - Scalar(0.010999999999999999) * _tmp40;
  const Scalar _tmp99 = Scalar(0.20999999999999999) * _tmp32 - Scalar(0.20999999999999999) * _tmp33;
  const Scalar _tmp100 = _tmp98 + _tmp99;
  const Scalar _tmp101 = _tmp100 - _tmp97;
  const Scalar _tmp102 = _tmp97 + _tmp98 - _tmp99;
  const Scalar _tmp103 = _tmp102 * _tmp75;
  const Scalar _tmp104 = _tmp102 * _tmp61;
  const Scalar _tmp105 = _tmp100 + _tmp97;
  const Scalar _tmp106 = -_tmp104 * _tmp74 + _tmp105 * _tmp77;
  const Scalar _tmp107 = _tmp101 * _tmp68 - _tmp103 * _tmp74 - _tmp106 * _tmp80;
  const Scalar _tmp108 = Scalar(1.0) * _tmp71;
  const Scalar _tmp109 = _tmp108 - _tmp57;
  const Scalar _tmp110 = Scalar(1.0) * _tmp69;
  const Scalar _tmp111 = -_tmp110 + _tmp54;
  const Scalar _tmp112 = Scalar(1.0) / (_tmp111);
  const Scalar _tmp113 = _tmp109 * _tmp112;
  const Scalar _tmp114 = _tmp104 - _tmp105 * _tmp61;
  const Scalar _tmp115 = _tmp114 * _tmp79;
  const Scalar _tmp116 = -_tmp101 * _tmp75 + _tmp103 - _tmp107 * _tmp113 - _tmp115 * _tmp76;
  const Scalar _tmp117 = Scalar(1.0) / (_tmp116);
  const Scalar _tmp118 = _tmp108 + _tmp110 * _tmp113;
  const Scalar _tmp119 = 0;
  const Scalar _tmp120 = _tmp117 * _tmp119;
  const Scalar _tmp121 = _tmp61 * _tmp79;
  const Scalar _tmp122 = _tmp117 * _tmp76;
  const Scalar _tmp123 = _tmp119 * _tmp122;
  const Scalar _tmp124 = _tmp120 * _tmp75 - _tmp121 * _tmp123;
  const Scalar _tmp125 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp126 = _tmp125 * _tmp88;
  const Scalar _tmp127 = Scalar(1.0) * _tmp79;
  const Scalar _tmp128 = _tmp106 * _tmp127;
  const Scalar _tmp129 = _tmp113 * _tmp128 - Scalar(1.0) * _tmp115;
  const Scalar _tmp130 = _tmp117 * _tmp91;
  const Scalar _tmp131 = -_tmp127 * _tmp90 - _tmp129 * _tmp130;
  const Scalar _tmp132 = _tmp131 * _tmp92;
  const Scalar _tmp133 = _tmp116 * _tmp132 + _tmp129;
  const Scalar _tmp134 = -_tmp122 * _tmp133 + Scalar(1.0);
  const Scalar _tmp135 = _tmp117 * _tmp75;
  const Scalar _tmp136 = _tmp121 * _tmp134 + _tmp133 * _tmp135;
  const Scalar _tmp137 = _tmp47 * _tmp49;
  const Scalar _tmp138 = _tmp137 * fh1;
  const Scalar _tmp139 = _tmp138 * _tmp88;
  const Scalar _tmp140 = _tmp102 * _tmp74;
  const Scalar _tmp141 = _tmp74 * _tmp79;
  const Scalar _tmp142 = _tmp106 * _tmp141 + _tmp140;
  const Scalar _tmp143 = -_tmp102 - _tmp113 * _tmp142 + _tmp115 * _tmp74;
  const Scalar _tmp144 = -_tmp130 * _tmp143 + _tmp141 * _tmp90 - _tmp89;
  const Scalar _tmp145 = _tmp116 * _tmp92;
  const Scalar _tmp146 = _tmp143 + _tmp144 * _tmp145;
  const Scalar _tmp147 = -_tmp122 * _tmp146 - _tmp74;
  const Scalar _tmp148 = _tmp121 * _tmp147 + _tmp135 * _tmp146 + Scalar(1.0);
  const Scalar _tmp149 = _tmp37 * _tmp49;
  const Scalar _tmp150 = _tmp149 * fh1;
  const Scalar _tmp151 = _tmp150 * _tmp88;
  const Scalar _tmp152 = (Scalar(1) / Scalar(2)) / _tmp1;
  const Scalar _tmp153 = _tmp0 * _tmp152;
  const Scalar _tmp154 = _tmp152 * rz;
  const Scalar _tmp155 = _tmp154 * ry;
  const Scalar _tmp156 = _tmp154 * rx;
  const Scalar _tmp157 = _tmp6 / (_tmp1 * std::sqrt(_tmp1));
  const Scalar _tmp158 = _tmp0 * _tmp157;
  const Scalar _tmp159 = _tmp157 * rz;
  const Scalar _tmp160 = _tmp159 * rx;
  const Scalar _tmp161 = _tmp159 * ry;
  const Scalar _tmp162 = -_tmp13 * _tmp156 - _tmp153 * _tmp19 - _tmp155 * _tmp5 +
                         _tmp158 * rot_init_z + _tmp160 * rot_init_x + _tmp161 * rot_init_y -
                         Scalar(1) / Scalar(2) * _tmp20 - _tmp9;
  const Scalar _tmp163 = Scalar(0.41999999999999998) * _tmp162;
  const Scalar _tmp164 = _tmp163 * _tmp21;
  const Scalar _tmp165 = _tmp13 * _tmp155 + _tmp153 * _tmp22 - _tmp156 * _tmp5 -
                         _tmp158 * rot_init_w + _tmp160 * rot_init_y - _tmp161 * rot_init_x -
                         Scalar(1) / Scalar(2) * _tmp23 + _tmp8;
  const Scalar _tmp166 = _tmp165 * _tmp24;
  const Scalar _tmp167 = Scalar(0.41999999999999998) * _tmp166;
  const Scalar _tmp168 = -_tmp164 - _tmp167;
  const Scalar _tmp169 = Scalar(0.83999999999999997) * _tmp21;
  const Scalar _tmp170 = _tmp165 * _tmp169;
  const Scalar _tmp171 = -Scalar(1) / Scalar(2) * _tmp11 + _tmp14 + _tmp153 * _tmp5 -
                         _tmp155 * _tmp19 + _tmp156 * _tmp22 - _tmp158 * rot_init_y -
                         _tmp160 * rot_init_w + _tmp161 * rot_init_z;
  const Scalar _tmp172 = Scalar(0.41999999999999998) * _tmp12;
  const Scalar _tmp173 = _tmp171 * _tmp172;
  const Scalar _tmp174 = -_tmp10 - _tmp13 * _tmp153 - Scalar(1) / Scalar(2) * _tmp15 +
                         _tmp155 * _tmp22 + _tmp156 * _tmp19 + _tmp158 * rot_init_x -
                         _tmp160 * rot_init_z - _tmp161 * rot_init_w;
  const Scalar _tmp175 = Scalar(0.41999999999999998) * _tmp16;
  const Scalar _tmp176 = _tmp174 * _tmp175;
  const Scalar _tmp177 = _tmp173 + _tmp176;
  const Scalar _tmp178 = _tmp170 + _tmp177;
  const Scalar _tmp179 = Scalar(0.83999999999999997) * _tmp174;
  const Scalar _tmp180 = _tmp12 * _tmp179;
  const Scalar _tmp181 = Scalar(0.021999999999999999) * _tmp162;
  const Scalar _tmp182 = Scalar(0.021999999999999999) * _tmp21;
  const Scalar _tmp183 = Scalar(0.021999999999999999) * _tmp165;
  const Scalar _tmp184 = Scalar(0.021999999999999999) * _tmp24;
  const Scalar _tmp185 =
      -_tmp12 * _tmp181 - _tmp16 * _tmp183 - _tmp171 * _tmp182 - _tmp174 * _tmp184;
  const Scalar _tmp186 = _tmp180 + _tmp185;
  const Scalar _tmp187 = _tmp168 + _tmp178 + _tmp186;
  const Scalar _tmp188 = Scalar(0.83999999999999997) * _tmp171;
  const Scalar _tmp189 = _tmp16 * _tmp188;
  const Scalar _tmp190 =
      -_tmp12 * _tmp183 + _tmp16 * _tmp181 + _tmp171 * _tmp184 - _tmp174 * _tmp182;
  const Scalar _tmp191 = -_tmp189 + _tmp190;
  const Scalar _tmp192 = -_tmp173 - _tmp176;
  const Scalar _tmp193 = -_tmp170;
  const Scalar _tmp194 = _tmp168 + _tmp193;
  const Scalar _tmp195 = _tmp191 + _tmp192 + _tmp194;
  const Scalar _tmp196 = _tmp187 * _tmp72 + _tmp195 * _tmp70;
  const Scalar _tmp197 = _tmp196 * _tmp73 * _tmp84;
  const Scalar _tmp198 = _tmp136 * _tmp138;
  const Scalar _tmp199 = _tmp164 + _tmp167;
  const Scalar _tmp200 = _tmp170 + _tmp192;
  const Scalar _tmp201 = _tmp186 + _tmp199 + _tmp200;
  const Scalar _tmp202 = _tmp189 + _tmp190;
  const Scalar _tmp203 = _tmp168 + _tmp200 + _tmp202;
  const Scalar _tmp204 = (Scalar(1) / Scalar(2)) * (2 * _tmp201 * _tmp37 + 2 * _tmp203 * _tmp47) /
                         (_tmp48 * std::sqrt(_tmp48));
  const Scalar _tmp205 = _tmp204 * _tmp47;
  const Scalar _tmp206 = _tmp204 * _tmp37;
  const Scalar _tmp207 = fh1 * (_tmp137 * _tmp201 - _tmp149 * _tmp203 - _tmp201 * _tmp50 +
                                _tmp203 * _tmp51 - _tmp205 * _tmp36 + _tmp206 * _tmp46);
  const Scalar _tmp208 = _tmp203 * _tmp49;
  const Scalar _tmp209 = _tmp88 * fh1;
  const Scalar _tmp210 = _tmp136 * _tmp209;
  const Scalar _tmp211 = _tmp201 * _tmp49;
  const Scalar _tmp212 = _tmp148 * _tmp209;
  const Scalar _tmp213 = _tmp148 * _tmp150;
  const Scalar _tmp214 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp215 = _tmp187 * _tmp214 * _tmp83;
  const Scalar _tmp216 = _tmp124 * _tmp125;
  const Scalar _tmp217 = _tmp52 * _tmp95;
  const Scalar _tmp218 = _tmp193 + _tmp199;
  const Scalar _tmp219 = -_tmp180 + _tmp185;
  const Scalar _tmp220 = _tmp192 + _tmp218 + _tmp219;
  const Scalar _tmp221 = _tmp178 + _tmp199 + _tmp202;
  const Scalar _tmp222 =
      (2 * _tmp220 * _tmp63 + 2 * _tmp221 * _tmp65) / (_tmp66 * std::sqrt(_tmp66));
  const Scalar _tmp223 = (Scalar(1) / Scalar(2)) * _tmp222;
  const Scalar _tmp224 = _tmp223 * _tmp63;
  const Scalar _tmp225 = _tmp177 + _tmp191 + _tmp218;
  const Scalar _tmp226 = _tmp177 + _tmp194 + _tmp219;
  const Scalar _tmp227 =
      (2 * _tmp225 * _tmp55 + 2 * _tmp226 * _tmp58) / (_tmp59 * std::sqrt(_tmp59));
  const Scalar _tmp228 = (Scalar(1) / Scalar(2)) * _tmp227;
  const Scalar _tmp229 = _tmp228 * _tmp58;
  const Scalar _tmp230 = _tmp229 * _tmp79;
  const Scalar _tmp231 = _tmp226 * _tmp60;
  const Scalar _tmp232 = _tmp231 * _tmp79;
  const Scalar _tmp233 = _tmp220 * _tmp67;
  const Scalar _tmp234 = _tmp195 * _tmp73;
  const Scalar _tmp235 = _tmp187 * _tmp70;
  const Scalar _tmp236 = _tmp214 * _tmp235;
  const Scalar _tmp237 = _tmp221 * _tmp67;
  const Scalar _tmp238 = _tmp223 * _tmp65;
  const Scalar _tmp239 = -_tmp224 * _tmp74 + _tmp233 * _tmp74 + _tmp234 * _tmp75 -
                         _tmp236 * _tmp75 - _tmp237 + _tmp238;
  const Scalar _tmp240 = _tmp117 * _tmp239;
  const Scalar _tmp241 = _tmp119 * _tmp240;
  const Scalar _tmp242 = _tmp228 * _tmp55;
  const Scalar _tmp243 = _tmp225 * _tmp60;
  const Scalar _tmp244 = (-_tmp229 * _tmp74 + _tmp231 * _tmp74 + _tmp234 * _tmp61 -
                          _tmp236 * _tmp61 + _tmp242 - _tmp243) /
                         std::pow(_tmp78, Scalar(2));
  const Scalar _tmp245 = _tmp244 * _tmp61;
  const Scalar _tmp246 = _tmp102 * _tmp233;
  const Scalar _tmp247 = _tmp162 * _tmp172;
  const Scalar _tmp248 = Scalar(0.41999999999999998) * _tmp21;
  const Scalar _tmp249 = _tmp171 * _tmp248;
  const Scalar _tmp250 = _tmp165 * _tmp175;
  const Scalar _tmp251 = Scalar(0.41999999999999998) * _tmp24;
  const Scalar _tmp252 = _tmp174 * _tmp251;
  const Scalar _tmp253 = _tmp16 * _tmp163;
  const Scalar _tmp254 = _tmp174 * _tmp248;
  const Scalar _tmp255 = _tmp165 * _tmp172;
  const Scalar _tmp256 = _tmp171 * _tmp251;
  const Scalar _tmp257 = Scalar(0.043999999999999997) * _tmp16 * _tmp171;
  const Scalar _tmp258 = _tmp12 * _tmp174;
  const Scalar _tmp259 = Scalar(0.043999999999999997) * _tmp258;
  const Scalar _tmp260 = _tmp257 + _tmp259;
  const Scalar _tmp261 = _tmp253 + _tmp254 + _tmp255 + _tmp256 + _tmp260;
  const Scalar _tmp262 = _tmp247 - _tmp249 - _tmp250 + _tmp252 + _tmp261;
  const Scalar _tmp263 = _tmp262 * _tmp74;
  const Scalar _tmp264 = _tmp102 * _tmp234;
  const Scalar _tmp265 = _tmp102 * _tmp231;
  const Scalar _tmp266 = -_tmp247 + _tmp249 + _tmp250 - _tmp252;
  const Scalar _tmp267 = _tmp261 + _tmp266;
  const Scalar _tmp268 = _tmp104 * _tmp236 - _tmp105 * _tmp242 + _tmp105 * _tmp243 +
                         _tmp140 * _tmp229 - _tmp263 * _tmp61 - _tmp264 * _tmp61 -
                         _tmp265 * _tmp74 + _tmp267 * _tmp77;
  const Scalar _tmp269 = _tmp244 * _tmp76;
  const Scalar _tmp270 = _tmp262 * _tmp75;
  const Scalar _tmp271 = _tmp239 * _tmp79;
  const Scalar _tmp272 = -_tmp253 - _tmp254 - _tmp255 - _tmp256 + _tmp266;
  const Scalar _tmp273 = _tmp260 + _tmp272;
  const Scalar _tmp274 = _tmp112 * (Scalar(1.6799999999999999) * _tmp165 * _tmp21 +
                                    Scalar(1.6799999999999999) * _tmp258);
  const Scalar _tmp275 = -_tmp102 * _tmp229 + _tmp105 * _tmp229 - _tmp105 * _tmp231 +
                         _tmp262 * _tmp61 + _tmp265 - _tmp267 * _tmp61;
  const Scalar _tmp276 = _tmp109 *
                         (_tmp12 * _tmp188 + _tmp16 * _tmp179 + _tmp162 * _tmp169 +
                          Scalar(0.83999999999999997) * _tmp166) /
                         std::pow(_tmp111, Scalar(2));
  const Scalar _tmp277 = _tmp114 * _tmp244;
  const Scalar _tmp278 =
      _tmp101 * _tmp224 - _tmp101 * _tmp233 - _tmp102 * _tmp224 - _tmp107 * _tmp274 +
      _tmp107 * _tmp276 -
      _tmp113 * (_tmp101 * _tmp237 - _tmp101 * _tmp238 - _tmp103 * _tmp234 + _tmp103 * _tmp236 +
                 _tmp106 * _tmp269 - _tmp106 * _tmp271 + _tmp140 * _tmp224 - _tmp246 * _tmp74 -
                 _tmp268 * _tmp80 - _tmp270 * _tmp74 + _tmp273 * _tmp68) -
      _tmp115 * _tmp239 + _tmp246 + _tmp270 - _tmp273 * _tmp75 - _tmp275 * _tmp80 +
      _tmp277 * _tmp76;
  const Scalar _tmp279 = _tmp278 / std::pow(_tmp116, Scalar(2));
  const Scalar _tmp280 = _tmp119 * _tmp279;
  const Scalar _tmp281 = _tmp61 * _tmp80;
  const Scalar _tmp282 = _tmp279 * _tmp76;
  const Scalar _tmp283 = _tmp196 / (_tmp82 * std::sqrt(_tmp82));
  const Scalar _tmp284 =
      _tmp88 * (-_tmp187 * _tmp86 - _tmp195 * _tmp72 * _tmp84 + _tmp195 * _tmp85 +
                _tmp235 * _tmp84 + _tmp283 * _tmp69 * _tmp72 - _tmp283 * _tmp70 * _tmp71);
  const Scalar _tmp285 = _tmp215 * _tmp87;
  const Scalar _tmp286 = _tmp197 * _tmp87;
  const Scalar _tmp287 = -_tmp226 * _tmp77 - _tmp229 * _tmp54 - _tmp229 * _tmp89 +
                         _tmp231 * _tmp54 + _tmp231 * _tmp89 + _tmp242 * _tmp57 - _tmp243 * _tmp57 +
                         _tmp243 * _tmp58 + _tmp284 * _tmp61 - _tmp285 * _tmp61 + _tmp286 * _tmp61;
  const Scalar _tmp288 = -_tmp220 * _tmp68 - _tmp224 * _tmp64 - _tmp224 * _tmp89 +
                         _tmp233 * _tmp64 + _tmp233 * _tmp89 - _tmp237 * _tmp62 + _tmp237 * _tmp63 +
                         _tmp238 * _tmp62 + _tmp269 * _tmp90 - _tmp271 * _tmp90 + _tmp284 * _tmp75 -
                         _tmp285 * _tmp75 + _tmp286 * _tmp75 - _tmp287 * _tmp80;
  const Scalar _tmp289 = _tmp288 / std::pow(_tmp91, Scalar(2));
  const Scalar _tmp290 = _tmp116 * _tmp289;
  const Scalar _tmp291 = _tmp106 * _tmp244;
  const Scalar _tmp292 = _tmp236 * _tmp79;
  const Scalar _tmp293 = _tmp234 * _tmp79;
  const Scalar _tmp294 = -_tmp113 * (-_tmp102 * _tmp236 - _tmp106 * _tmp292 + _tmp106 * _tmp293 +
                                     _tmp141 * _tmp268 + _tmp263 + _tmp264 - _tmp291 * _tmp74) +
                         _tmp115 * _tmp234 - _tmp115 * _tmp236 + _tmp141 * _tmp275 -
                         _tmp142 * _tmp274 + _tmp142 * _tmp276 - _tmp257 - _tmp259 + _tmp272 -
                         _tmp277 * _tmp74;
  const Scalar _tmp295 = _tmp117 * _tmp288;
  const Scalar _tmp296 = _tmp244 * _tmp90;
  const Scalar _tmp297 = _tmp279 * _tmp91;
  const Scalar _tmp298 = _tmp144 * _tmp278 * _tmp92 - _tmp144 * _tmp290 +
                         _tmp145 * (-_tmp130 * _tmp294 + _tmp141 * _tmp287 - _tmp143 * _tmp295 +
                                    _tmp143 * _tmp297 - _tmp284 + _tmp285 - _tmp286 -
                                    _tmp292 * _tmp90 + _tmp293 * _tmp90 - _tmp296 * _tmp74) +
                         _tmp294;
  const Scalar _tmp299 =
      -_tmp122 * _tmp298 - _tmp146 * _tmp240 + _tmp146 * _tmp282 - _tmp234 + _tmp236;
  const Scalar _tmp300 = _tmp117 * _tmp233;
  const Scalar _tmp301 = _tmp117 * _tmp224;
  const Scalar _tmp302 = _tmp279 * _tmp75;
  const Scalar _tmp303 = _tmp127 * _tmp239 * _tmp92;
  const Scalar _tmp304 = Scalar(1.0) * _tmp289;
  const Scalar _tmp305 = Scalar(0.5) * _tmp92;
  const Scalar _tmp306 = _tmp113 * _tmp127 * _tmp268 - Scalar(1.0) * _tmp113 * _tmp291 -
                         _tmp127 * _tmp275 + _tmp128 * _tmp274 - _tmp128 * _tmp276 +
                         Scalar(1.0) * _tmp277;
  const Scalar _tmp307 = -_tmp131 * _tmp290 + _tmp132 * _tmp278 +
                         _tmp145 * (-_tmp127 * _tmp287 - _tmp129 * _tmp295 + _tmp129 * _tmp297 -
                                    _tmp130 * _tmp306 + Scalar(1.0) * _tmp296) +
                         _tmp306;
  const Scalar _tmp308 = -_tmp122 * _tmp307 - _tmp133 * _tmp240 + _tmp133 * _tmp282;
  const Scalar _tmp309 = _tmp125 * _tmp79;
  const Scalar _tmp310 = _tmp79 * fh1;
  const Scalar _tmp311 = _tmp149 * _tmp310;
  const Scalar _tmp312 = _tmp52 * _tmp93;
  const Scalar _tmp313 = _tmp137 * _tmp310;
  const Scalar _tmp314 = _tmp125 * _tmp280;
  const Scalar _tmp315 = _tmp147 * _tmp310;
  const Scalar _tmp316 = _tmp304 * _tmp52;
  const Scalar _tmp317 = _tmp134 * _tmp310;
  const Scalar _tmp318 = _tmp207 * _tmp93;
  const Scalar _tmp319 = _tmp117 * fh1;
  const Scalar _tmp320 = _tmp149 * _tmp319;
  const Scalar _tmp321 = _tmp137 * _tmp319;
  const Scalar _tmp322 = _tmp146 * _tmp319;
  const Scalar _tmp323 = _tmp133 * _tmp319;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -(-_tmp126 * (-_tmp120 * _tmp224 + _tmp120 * _tmp233 - _tmp121 * _tmp241 + _tmp123 * _tmp230 -
                    _tmp123 * _tmp232 + _tmp123 * _tmp245 + _tmp280 * _tmp281 - _tmp280 * _tmp75) -
        _tmp139 * (_tmp121 * _tmp308 + _tmp133 * _tmp300 - _tmp133 * _tmp301 - _tmp133 * _tmp302 -
                   _tmp134 * _tmp230 + _tmp134 * _tmp232 - _tmp134 * _tmp245 + _tmp135 * _tmp307) -
        _tmp151 * (_tmp121 * _tmp299 + _tmp135 * _tmp298 + _tmp146 * _tmp300 - _tmp146 * _tmp301 -
                   _tmp146 * _tmp302 - _tmp147 * _tmp230 + _tmp147 * _tmp232 - _tmp147 * _tmp245) -
        _tmp197 * _tmp198 - _tmp197 * _tmp213 - _tmp197 * _tmp216 - _tmp197 * _tmp217 +
        _tmp198 * _tmp215 + _tmp205 * _tmp210 + _tmp206 * _tmp212 - _tmp207 * _tmp96 -
        _tmp208 * _tmp210 - _tmp211 * _tmp212 + _tmp213 * _tmp215 + _tmp215 * _tmp216 +
        _tmp215 * _tmp217 -
        _tmp52 * _tmp88 *
            (-_tmp222 * _tmp305 * _tmp63 + _tmp227 * _tmp305 * _tmp58 * _tmp80 - _tmp231 * _tmp94 +
             _tmp233 * _tmp93 + _tmp269 * _tmp61 * _tmp93 + _tmp281 * _tmp304 - _tmp303 * _tmp61 -
             _tmp304 * _tmp75)) *
      std::exp(_tmp124 * _tmp126 + _tmp136 * _tmp139 + _tmp148 * _tmp151 + _tmp52 * _tmp96);
  _res(2, 0) =
      -(_tmp123 * _tmp125 * _tmp244 - _tmp134 * _tmp138 * _tmp244 - _tmp147 * _tmp150 * _tmp244 -
        _tmp205 * _tmp317 - _tmp206 * _tmp315 + _tmp208 * _tmp317 + _tmp211 * _tmp315 -
        _tmp241 * _tmp309 + _tmp269 * _tmp312 + _tmp299 * _tmp311 - _tmp303 * _tmp52 +
        _tmp308 * _tmp313 + _tmp314 * _tmp80 + _tmp316 * _tmp80 - _tmp318 * _tmp80) *
      std::exp(_tmp123 * _tmp309 - _tmp134 * _tmp313 - _tmp147 * _tmp311 + _tmp312 * _tmp80);
  _res(3, 0) = -(-_tmp133 * _tmp138 * _tmp279 - _tmp146 * _tmp150 * _tmp279 - _tmp205 * _tmp323 -
                 _tmp206 * _tmp322 + _tmp208 * _tmp323 + _tmp211 * _tmp322 + _tmp298 * _tmp320 +
                 _tmp307 * _tmp321 - _tmp314 - _tmp316 + _tmp318) *
               std::exp(-_tmp120 * _tmp125 - _tmp133 * _tmp321 - _tmp146 * _tmp320 - _tmp312);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
