// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost1
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     tx: Scalar
 *     ty: Scalar
 *     tz: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     lc0: Scalar
 *     lc1: Scalar
 *     lc2: Scalar
 *     lc3: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost1(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar tx, const Scalar ty, const Scalar tz, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w, const Scalar lc0,
    const Scalar lc1, const Scalar lc2, const Scalar lc3, const Scalar epsilon) {
  // Total ops: 516

  // Unused inputs
  (void)lc0;
  (void)lc1;
  (void)lc2;
  (void)lc3;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (167)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp3 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp4 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp5 = std::cos(_tmp4);
  const Scalar _tmp6 = std::sin(_tmp4) / _tmp3;
  const Scalar _tmp7 = _tmp6 * ry;
  const Scalar _tmp8 = _tmp6 * rx;
  const Scalar _tmp9 = _tmp6 * rot_init_w;
  const Scalar _tmp10 = _tmp5 * rot_init_z + _tmp7 * rot_init_x - _tmp8 * rot_init_y + _tmp9 * rz;
  const Scalar _tmp11 = -2 * std::pow(_tmp10, Scalar(2));
  const Scalar _tmp12 = _tmp6 * rz;
  const Scalar _tmp13 = _tmp12 * rot_init_y + _tmp5 * rot_init_x - _tmp7 * rot_init_z + _tmp9 * rx;
  const Scalar _tmp14 = 1 - 2 * std::pow(_tmp13, Scalar(2));
  const Scalar _tmp15 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp14;
  const Scalar _tmp16 = -_tmp15;
  const Scalar _tmp17 = -_tmp12 * rot_init_x + _tmp5 * rot_init_y + _tmp8 * rot_init_z + _tmp9 * ry;
  const Scalar _tmp18 = 2 * _tmp10;
  const Scalar _tmp19 = _tmp17 * _tmp18;
  const Scalar _tmp20 =
      -_tmp12 * rot_init_z + _tmp5 * rot_init_w - _tmp7 * rot_init_y - _tmp8 * rot_init_x;
  const Scalar _tmp21 = 2 * _tmp20;
  const Scalar _tmp22 = _tmp13 * _tmp21;
  const Scalar _tmp23 = _tmp19 - _tmp22;
  const Scalar _tmp24 = -Scalar(0.010999999999999999) * _tmp23;
  const Scalar _tmp25 = 2 * _tmp13 * _tmp17;
  const Scalar _tmp26 = _tmp18 * _tmp20;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = _tmp24 - _tmp27;
  const Scalar _tmp29 = _tmp16 + _tmp28;
  const Scalar _tmp30 = _tmp29 + ty;
  const Scalar _tmp31 = -2 * std::pow(_tmp17, Scalar(2));
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp11 +
                        Scalar(0.20999999999999999) * _tmp31 + Scalar(0.20999999999999999);
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = Scalar(0.20999999999999999) * _tmp25 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp35 = _tmp13 * _tmp18;
  const Scalar _tmp36 = _tmp17 * _tmp21;
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = -Scalar(0.010999999999999999) * _tmp37;
  const Scalar _tmp39 = -_tmp34 + _tmp38;
  const Scalar _tmp40 = _tmp33 + _tmp39;
  const Scalar _tmp41 = _tmp40 + tx;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp19 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 =
      -Scalar(0.010999999999999999) * _tmp14 - Scalar(0.010999999999999999) * _tmp31;
  const Scalar _tmp45 = Scalar(0.20999999999999999) * _tmp35 - Scalar(0.20999999999999999) * _tmp36;
  const Scalar _tmp46 = _tmp44 - _tmp45;
  const Scalar _tmp47 = _tmp43 + _tmp46;
  const Scalar _tmp48 = _tmp24 + _tmp27;
  const Scalar _tmp49 = _tmp16 + _tmp48;
  const Scalar _tmp50 = _tmp49 + ty;
  const Scalar _tmp51 = _tmp50 + Scalar(8.3888750099999996);
  const Scalar _tmp52 = _tmp32 + _tmp39;
  const Scalar _tmp53 = _tmp52 + tx;
  const Scalar _tmp54 = _tmp53 + Scalar(-2.5202214700000001);
  const Scalar _tmp55 =
      std::sqrt(Scalar(std::pow(_tmp51, Scalar(2)) + std::pow(_tmp54, Scalar(2))));
  const Scalar _tmp56 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp54);
  const Scalar _tmp58 = _tmp55 * _tmp57;
  const Scalar _tmp59 = _tmp58 * (-_tmp49 * _tmp54 * _tmp56 + _tmp51 * _tmp52 * _tmp56);
  const Scalar _tmp60 = _tmp15 + _tmp48;
  const Scalar _tmp61 = _tmp34 + _tmp38;
  const Scalar _tmp62 = _tmp32 + _tmp61;
  const Scalar _tmp63 = _tmp62 + tx;
  const Scalar _tmp64 = _tmp63 + Scalar(-2.71799795);
  const Scalar _tmp65 = _tmp60 + ty;
  const Scalar _tmp66 = _tmp65 + Scalar(-4.7752063900000001);
  const Scalar _tmp67 = std::pow(Scalar(std::pow(_tmp64, Scalar(2)) + std::pow(_tmp66, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp68 = _tmp64 * _tmp67;
  const Scalar _tmp69 = _tmp66 * _tmp67;
  const Scalar _tmp70 = _tmp59 * _tmp68 + _tmp60 * _tmp68 - _tmp62 * _tmp69;
  const Scalar _tmp71 = _tmp51 * _tmp57;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp68 * _tmp71 - _tmp69);
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp44 + _tmp45;
  const Scalar _tmp75 = _tmp43 + _tmp74;
  const Scalar _tmp76 = _tmp68 * _tmp75;
  const Scalar _tmp77 = _tmp42 + _tmp74;
  const Scalar _tmp78 = -_tmp68 * _tmp77 + _tmp76;
  const Scalar _tmp79 = _tmp71 * _tmp75;
  const Scalar _tmp80 = _tmp69 * _tmp77 - _tmp71 * _tmp76;
  const Scalar _tmp81 = _tmp73 * _tmp80 + _tmp79;
  const Scalar _tmp82 = Scalar(1.0) * _tmp49;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp60 + _tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp52;
  const Scalar _tmp86 = _tmp84 * (-_tmp62 + _tmp85);
  const Scalar _tmp87 = _tmp73 * _tmp78 - _tmp75 - _tmp81 * _tmp86;
  const Scalar _tmp88 = _tmp33 + _tmp61;
  const Scalar _tmp89 = _tmp88 + tx;
  const Scalar _tmp90 = _tmp89 + Scalar(1.79662371);
  const Scalar _tmp91 = _tmp15 + _tmp28;
  const Scalar _tmp92 = _tmp91 + ty;
  const Scalar _tmp93 = _tmp92 + Scalar(-4.8333311099999996);
  const Scalar _tmp94 = std::pow(Scalar(std::pow(_tmp90, Scalar(2)) + std::pow(_tmp93, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp90 * _tmp94;
  const Scalar _tmp96 = _tmp42 + _tmp46;
  const Scalar _tmp97 = _tmp93 * _tmp94;
  const Scalar _tmp98 = _tmp71 * _tmp95 - _tmp97;
  const Scalar _tmp99 = _tmp72 * _tmp98;
  const Scalar _tmp100 = -_tmp79 * _tmp95 - _tmp80 * _tmp99 + _tmp96 * _tmp97;
  const Scalar _tmp101 = -_tmp100 * _tmp86 + _tmp75 * _tmp95 - _tmp78 * _tmp99 - _tmp95 * _tmp96;
  const Scalar _tmp102 = Scalar(1.0) / (_tmp101);
  const Scalar _tmp103 = _tmp59 * _tmp95 - _tmp70 * _tmp99 - _tmp88 * _tmp97 + _tmp91 * _tmp95;
  const Scalar _tmp104 = _tmp102 * _tmp103;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp106 = _tmp101 * _tmp105;
  const Scalar _tmp107 = _tmp106 * (-_tmp104 * _tmp87 - _tmp59 + _tmp70 * _tmp73);
  const Scalar _tmp108 = _tmp107 + _tmp87;
  const Scalar _tmp109 = _tmp102 * _tmp95;
  const Scalar _tmp110 = _tmp102 * _tmp98;
  const Scalar _tmp111 = -_tmp108 * _tmp110 - _tmp71;
  const Scalar _tmp112 = _tmp68 * _tmp72;
  const Scalar _tmp113 = _tmp30 + Scalar(8.3196563700000006);
  const Scalar _tmp114 = _tmp41 + Scalar(1.9874742000000001);
  const Scalar _tmp115 =
      std::pow(Scalar(std::pow(_tmp113, Scalar(2)) + std::pow(_tmp114, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp116 = _tmp114 * _tmp115;
  const Scalar _tmp117 = _tmp116 * fh1;
  const Scalar _tmp118 = Scalar(1.0) * _tmp105;
  const Scalar _tmp119 = Scalar(1.0) * _tmp72;
  const Scalar _tmp120 = _tmp105 * _tmp119 * _tmp98;
  const Scalar _tmp121 = _tmp113 * _tmp115;
  const Scalar _tmp122 = fh1 * (-_tmp116 * _tmp29 + _tmp121 * _tmp40);
  const Scalar _tmp123 = _tmp119 * _tmp80;
  const Scalar _tmp124 = -_tmp119 * _tmp78 + _tmp123 * _tmp86;
  const Scalar _tmp125 = _tmp106 * (-_tmp104 * _tmp124 - _tmp119 * _tmp70);
  const Scalar _tmp126 = _tmp124 + _tmp125;
  const Scalar _tmp127 = -_tmp110 * _tmp126 + Scalar(1.0);
  const Scalar _tmp128 = _tmp121 * fh1;
  const Scalar _tmp129 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp130 = _tmp82 * _tmp86 + _tmp85;
  const Scalar _tmp131 = 0;
  const Scalar _tmp132 = -_tmp117 * _tmp58 * (_tmp108 * _tmp109 + _tmp111 * _tmp112 + Scalar(1.0)) -
                         _tmp122 * _tmp58 * (_tmp118 * _tmp95 - _tmp120 * _tmp68) -
                         _tmp128 * _tmp58 * (_tmp109 * _tmp126 + _tmp112 * _tmp127) -
                         _tmp129 * _tmp58 * (-_tmp131 * _tmp68 * _tmp99 + _tmp131 * _tmp95);
  const Scalar _tmp133 = Scalar(1.0) / (_tmp132);
  const Scalar _tmp134 = _tmp83 + _tmp91;
  const Scalar _tmp135 = _tmp134 * _tmp86;
  const Scalar _tmp136 = Scalar(1.0) / (-_tmp135 + _tmp85 - _tmp88);
  const Scalar _tmp137 = Scalar(1.0) * _tmp136;
  const Scalar _tmp138 = _tmp84 * (_tmp135 * _tmp137 + Scalar(1.0));
  const Scalar _tmp139 = _tmp137 * _tmp86;
  const Scalar _tmp140 = _tmp47 * fh1;
  const Scalar _tmp141 = -_tmp121 * _tmp140 - Scalar(3.29616) * _tmp23 - _tmp29 * fv1;
  const Scalar _tmp142 = _tmp116 * _tmp140 + Scalar(3.29616) * _tmp37 + _tmp40 * fv1;
  const Scalar _tmp143 = _tmp134 * _tmp84;
  const Scalar _tmp144 = _tmp134 * _tmp136;
  const Scalar _tmp145 = _tmp100 * _tmp102;
  const Scalar _tmp146 = -_tmp123 + _tmp125 * _tmp144 - _tmp126 * _tmp145;
  const Scalar _tmp147 = Scalar(1.0) * _tmp84;
  const Scalar _tmp148 = Scalar(1.0) * fh1;
  const Scalar _tmp149 = _tmp107 * _tmp144 - _tmp108 * _tmp145 + _tmp81;
  const Scalar _tmp150 = _tmp130 * _tmp136;
  const Scalar _tmp151 = _tmp84 * (-_tmp100 * _tmp131 - _tmp134 * _tmp150 + _tmp83);
  const Scalar _tmp152 = _tmp106 * _tmp137;
  const Scalar _tmp153 = -_tmp100 * _tmp118 + _tmp134 * _tmp152;
  const Scalar _tmp154 =
      std::asinh(_tmp133 * (_tmp116 * _tmp148 * (_tmp107 * _tmp137 - _tmp147 * _tmp149) +
                            _tmp121 * _tmp148 * (_tmp125 * _tmp137 - _tmp146 * _tmp147) +
                            Scalar(1.0) * _tmp122 * (-_tmp147 * _tmp153 + _tmp152) +
                            Scalar(1.0) * _tmp129 *
                                (-_tmp130 * _tmp137 - Scalar(1.0) * _tmp151 + Scalar(1.0)) +
                            Scalar(1.0) * _tmp141 * (-Scalar(1.0) * _tmp138 + _tmp139) +
                            Scalar(1.0) * _tmp142 * (_tmp137 * _tmp143 - _tmp137)));
  const Scalar _tmp155 = Scalar(9.6622558468725703) * _tmp132;
  const Scalar _tmp156 = _tmp72 * fh1;
  const Scalar _tmp157 = _tmp129 * _tmp131;
  const Scalar _tmp158 = _tmp111 * _tmp116 * _tmp156 - _tmp120 * _tmp122 +
                         _tmp121 * _tmp127 * _tmp156 - _tmp157 * _tmp99;
  const Scalar _tmp159 = Scalar(1.0) / (_tmp158);
  const Scalar _tmp160 = _tmp137 * _tmp142;
  const Scalar _tmp161 =
      std::asinh(_tmp159 * (_tmp117 * _tmp149 * _tmp84 + _tmp122 * _tmp153 * _tmp84 +
                            _tmp128 * _tmp146 * _tmp84 + _tmp129 * _tmp151 + _tmp138 * _tmp141 -
                            _tmp143 * _tmp160));
  const Scalar _tmp162 = Scalar(9.6622558468725703) * _tmp158;
  const Scalar _tmp163 =
      _tmp102 * _tmp108 * _tmp117 + _tmp102 * _tmp126 * _tmp128 + _tmp118 * _tmp122 + _tmp157;
  const Scalar _tmp164 = Scalar(1.0) / (_tmp163);
  const Scalar _tmp165 = std::asinh(_tmp164 * (-_tmp107 * _tmp117 * _tmp136 - _tmp122 * _tmp152 -
                                               _tmp125 * _tmp128 * _tmp136 + _tmp129 * _tmp150 -
                                               _tmp139 * _tmp141 + _tmp160));
  const Scalar _tmp166 = Scalar(9.6622558468725703) * _tmp163;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp2 *
          (Scalar(0.87679799772039002) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp2 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp30 - 1), Scalar(2)) +
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp41 - 1),
                                     Scalar(2))))))) +
      _tmp47 + tz;
  _res(1, 0) =
      -_tmp155 *
          (Scalar(0.87653584775870996) * _tmp133 + std::cosh(Scalar(1.0) * _tmp154) -
           std::cosh(
               Scalar(0.1034955) * _tmp133 *
               (-_tmp154 * _tmp155 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp53), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp50 - 1),
                                 Scalar(2))))))) +
      _tmp75 + tz;
  _res(2, 0) =
      -_tmp162 *
          (Scalar(0.86565325453551001) * _tmp159 + std::cosh(Scalar(1.0) * _tmp161) -
           std::cosh(
               Scalar(0.1034955) * _tmp159 *
               (-_tmp161 * _tmp162 -
                Scalar(4.7752063900000001) *
                    std::sqrt(Scalar(
                        Scalar(0.32397683292140877) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp63), Scalar(2)) +
                        std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp65), Scalar(2))))))) +
      _tmp77 + tz;
  _res(3, 0) =
      -_tmp166 *
          (Scalar(0.86625939559540499) * _tmp164 + std::cosh(Scalar(1.0) * _tmp165) -
           std::cosh(
               Scalar(0.1034955) * _tmp164 *
               (-_tmp165 * _tmp166 -
                Scalar(4.8333311099999996) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp92), Scalar(2)) +
                        Scalar(0.13817235445745474) *
                            std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp89 - 1),
                                     Scalar(2))))))) +
      _tmp96 + tz;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
