// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl13(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 518

  // Unused inputs
  (void)epsilon;

  // Input arrays

  // Intermediate terms (162)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp3 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp4 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp5 = std::cos(_tmp4);
  const Scalar _tmp6 = std::sin(_tmp4) / _tmp3;
  const Scalar _tmp7 = _tmp6 * ry;
  const Scalar _tmp8 = _tmp6 * rot_init_w;
  const Scalar _tmp9 = _tmp6 * rot_init_y;
  const Scalar _tmp10 = _tmp5 * rot_init_x - _tmp7 * rot_init_z + _tmp8 * rx + _tmp9 * rz;
  const Scalar _tmp11 = -2 * std::pow(_tmp10, Scalar(2));
  const Scalar _tmp12 = _tmp5 * rot_init_z + _tmp7 * rot_init_x + _tmp8 * rz - _tmp9 * rx;
  const Scalar _tmp13 = -2 * std::pow(_tmp12, Scalar(2));
  const Scalar _tmp14 = Scalar(0.20999999999999999) * _tmp11 +
                        Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999);
  const Scalar _tmp15 = _tmp6 * rot_init_z;
  const Scalar _tmp16 = _tmp6 * rot_init_x;
  const Scalar _tmp17 = _tmp15 * rx - _tmp16 * rz + _tmp5 * rot_init_y + _tmp8 * ry;
  const Scalar _tmp18 = 2 * _tmp12 * _tmp17;
  const Scalar _tmp19 =
      -2 * _tmp15 * rz - 2 * _tmp16 * rx + 2 * _tmp5 * rot_init_w - 2 * _tmp9 * ry;
  const Scalar _tmp20 = _tmp10 * _tmp19;
  const Scalar _tmp21 = _tmp18 - _tmp20;
  const Scalar _tmp22 = -Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = 2 * _tmp10;
  const Scalar _tmp24 = _tmp17 * _tmp23;
  const Scalar _tmp25 = _tmp12 * _tmp19;
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp24 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = _tmp22 + _tmp26;
  const Scalar _tmp28 = _tmp14 + _tmp27;
  const Scalar _tmp29 = _tmp28 + p_init1;
  const Scalar _tmp30 = 1 - 2 * std::pow(_tmp17, Scalar(2));
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp30;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp24 - Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp33 = _tmp12 * _tmp23;
  const Scalar _tmp34 = _tmp17 * _tmp19;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = -Scalar(0.010999999999999999) * _tmp35;
  const Scalar _tmp37 = _tmp32 + _tmp36;
  const Scalar _tmp38 = _tmp31 + _tmp37;
  const Scalar _tmp39 = _tmp38 + p_init0;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp20;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp11 - Scalar(0.010999999999999999) * _tmp30;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp33 - Scalar(0.20999999999999999) * _tmp34;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp40 + _tmp43;
  const Scalar _tmp45 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp46 = -_tmp32 + _tmp36;
  const Scalar _tmp47 = _tmp31 + _tmp46;
  const Scalar _tmp48 = _tmp47 + p_init0;
  const Scalar _tmp49 = _tmp48 + Scalar(-2.5202214700000001);
  const Scalar _tmp50 = -_tmp14;
  const Scalar _tmp51 = _tmp27 + _tmp50;
  const Scalar _tmp52 = _tmp51 + p_init1;
  const Scalar _tmp53 = _tmp52 + Scalar(8.3888750099999996);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp49, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp49 * _tmp54;
  const Scalar _tmp56 = -_tmp40;
  const Scalar _tmp57 = _tmp43 + _tmp56;
  const Scalar _tmp58 = _tmp53 * _tmp54;
  const Scalar _tmp59 = _tmp22 - _tmp26;
  const Scalar _tmp60 = _tmp50 + _tmp59;
  const Scalar _tmp61 = _tmp60 + p_init1;
  const Scalar _tmp62 = _tmp61 + Scalar(8.3196563700000006);
  const Scalar _tmp63 = -_tmp31;
  const Scalar _tmp64 = _tmp46 + _tmp63;
  const Scalar _tmp65 = _tmp64 + p_init0;
  const Scalar _tmp66 = _tmp65 + Scalar(1.9874742000000001);
  const Scalar _tmp67 = Scalar(1.0) / (_tmp66);
  const Scalar _tmp68 = _tmp62 * _tmp67;
  const Scalar _tmp69 = _tmp41 - _tmp42;
  const Scalar _tmp70 = _tmp56 + _tmp69;
  const Scalar _tmp71 = _tmp55 * _tmp70;
  const Scalar _tmp72 = _tmp14 + _tmp59;
  const Scalar _tmp73 = _tmp72 + p_init1;
  const Scalar _tmp74 = _tmp73 + Scalar(-4.8333311099999996);
  const Scalar _tmp75 = _tmp37 + _tmp63;
  const Scalar _tmp76 = _tmp75 + p_init0;
  const Scalar _tmp77 = _tmp76 + Scalar(1.79662371);
  const Scalar _tmp78 = std::pow(Scalar(std::pow(_tmp74, Scalar(2)) + std::pow(_tmp77, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp79 = _tmp77 * _tmp78;
  const Scalar _tmp80 = _tmp70 * _tmp79;
  const Scalar _tmp81 = _tmp40 + _tmp69;
  const Scalar _tmp82 = _tmp74 * _tmp78;
  const Scalar _tmp83 = -_tmp68 * _tmp80 + _tmp81 * _tmp82;
  const Scalar _tmp84 = _tmp55 * _tmp68 - _tmp58;
  const Scalar _tmp85 = Scalar(1.0) / (_tmp68 * _tmp79 - _tmp82);
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = _tmp57 * _tmp58 - _tmp68 * _tmp71 - _tmp83 * _tmp86;
  const Scalar _tmp88 = Scalar(1.0) * _tmp60;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = Scalar(1.0) / (_tmp72 + _tmp89);
  const Scalar _tmp91 = Scalar(1.0) * _tmp64;
  const Scalar _tmp92 = -_tmp75 + _tmp91;
  const Scalar _tmp93 = _tmp90 * _tmp92;
  const Scalar _tmp94 = -_tmp79 * _tmp81 + _tmp80;
  const Scalar _tmp95 = -_tmp55 * _tmp57 + _tmp71 - _tmp86 * _tmp94 - _tmp87 * _tmp93;
  const Scalar _tmp96 = Scalar(1.0) / (_tmp95);
  const Scalar _tmp97 = _tmp88 * _tmp93 + _tmp91;
  const Scalar _tmp98 = 0;
  const Scalar _tmp99 =
      std::sqrt(Scalar(std::pow(_tmp62, Scalar(2)) + std::pow(_tmp66, Scalar(2))));
  const Scalar _tmp100 = _tmp67 * _tmp99;
  const Scalar _tmp101 = Scalar(1.0) / (_tmp99);
  const Scalar _tmp102 = _tmp100 * (-_tmp101 * _tmp60 * _tmp66 + _tmp101 * _tmp62 * _tmp64);
  const Scalar _tmp103 = _tmp68 * _tmp85;
  const Scalar _tmp104 = _tmp103 * _tmp83 + _tmp68 * _tmp70;
  const Scalar _tmp105 = _tmp103 * _tmp94 - _tmp104 * _tmp93 - _tmp70;
  const Scalar _tmp106 = _tmp102 * _tmp79 + _tmp72 * _tmp79 - _tmp75 * _tmp82;
  const Scalar _tmp107 = _tmp102 * _tmp55 - _tmp106 * _tmp86 - _tmp47 * _tmp58 + _tmp51 * _tmp55;
  const Scalar _tmp108 = _tmp107 * _tmp96;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp110 = _tmp109 * _tmp95;
  const Scalar _tmp111 = _tmp110 * (-_tmp102 + _tmp103 * _tmp106 - _tmp105 * _tmp108);
  const Scalar _tmp112 = _tmp96 * (_tmp105 + _tmp111);
  const Scalar _tmp113 = -_tmp112 * _tmp84 - _tmp68;
  const Scalar _tmp114 = _tmp79 * _tmp85;
  const Scalar _tmp115 = _tmp39 + Scalar(-2.71799795);
  const Scalar _tmp116 = _tmp29 + Scalar(-4.7752063900000001);
  const Scalar _tmp117 =
      std::pow(Scalar(std::pow(_tmp115, Scalar(2)) + std::pow(_tmp116, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp118 = _tmp115 * _tmp117;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(1.0) * _tmp85;
  const Scalar _tmp121 = Scalar(1.0) * _tmp90;
  const Scalar _tmp122 = -_tmp120 * _tmp94 + _tmp121 * _tmp83 * _tmp85 * _tmp92;
  const Scalar _tmp123 = _tmp110 * (-_tmp106 * _tmp120 - _tmp108 * _tmp122);
  const Scalar _tmp124 = _tmp96 * (_tmp122 + _tmp123);
  const Scalar _tmp125 = -_tmp124 * _tmp84 + Scalar(1.0);
  const Scalar _tmp126 = _tmp116 * _tmp117;
  const Scalar _tmp127 = _tmp126 * fh1;
  const Scalar _tmp128 = _tmp109 * _tmp120 * _tmp84;
  const Scalar _tmp129 = Scalar(1.0) * _tmp109;
  const Scalar _tmp130 = fh1 * (-_tmp118 * _tmp28 + _tmp126 * _tmp38);
  const Scalar _tmp131 = -_tmp100 * _tmp119 * (_tmp112 * _tmp55 + _tmp113 * _tmp114 + Scalar(1.0)) -
                         _tmp100 * _tmp127 * (_tmp114 * _tmp125 + _tmp124 * _tmp55) -
                         _tmp100 * _tmp130 * (-_tmp128 * _tmp79 + _tmp129 * _tmp55) -
                         _tmp100 * _tmp45 * (_tmp55 * _tmp98 - _tmp79 * _tmp86 * _tmp98);
  const Scalar _tmp132 = Scalar(1.0) / (_tmp131);
  const Scalar _tmp133 = _tmp51 + _tmp89;
  const Scalar _tmp134 = _tmp133 * _tmp93;
  const Scalar _tmp135 = Scalar(1.0) / (-_tmp134 - _tmp47 + _tmp91);
  const Scalar _tmp136 = Scalar(1.0) * _tmp135;
  const Scalar _tmp137 = _tmp133 * _tmp135;
  const Scalar _tmp138 = -_tmp120 * _tmp83 + _tmp123 * _tmp137 - _tmp124 * _tmp87;
  const Scalar _tmp139 = _tmp136 * _tmp93;
  const Scalar _tmp140 = _tmp134 * _tmp136 + Scalar(1.0);
  const Scalar _tmp141 = _tmp44 * fh1;
  const Scalar _tmp142 = -_tmp126 * _tmp141 - Scalar(3.29616) * _tmp21 - _tmp28 * fv1;
  const Scalar _tmp143 = _tmp133 * _tmp136;
  const Scalar _tmp144 = _tmp110 * _tmp143 - _tmp129 * _tmp87;
  const Scalar _tmp145 = _tmp110 * _tmp136;
  const Scalar _tmp146 = _tmp118 * _tmp141 + Scalar(3.29616) * _tmp35 + _tmp38 * fv1;
  const Scalar _tmp147 = _tmp135 * _tmp97;
  const Scalar _tmp148 = _tmp90 * (-_tmp133 * _tmp147 - _tmp87 * _tmp98 + _tmp89);
  const Scalar _tmp149 = _tmp104 + _tmp111 * _tmp137 - _tmp112 * _tmp87;
  const Scalar _tmp150 = std::asinh(
      _tmp132 * (Scalar(1.0) * _tmp119 * (_tmp111 * _tmp136 - _tmp121 * _tmp149) +
                 Scalar(1.0) * _tmp127 * (-_tmp121 * _tmp138 + _tmp123 * _tmp136) +
                 Scalar(1.0) * _tmp130 * (-_tmp121 * _tmp144 + _tmp145) +
                 Scalar(1.0) * _tmp142 * (-_tmp121 * _tmp140 + _tmp139) +
                 Scalar(1.0) * _tmp146 * (-_tmp136 + _tmp143 * _tmp90) +
                 Scalar(1.0) * _tmp45 * (-_tmp136 * _tmp97 - Scalar(1.0) * _tmp148 + Scalar(1.0))));
  const Scalar _tmp151 = Scalar(9.6622558468725703) * _tmp131;
  const Scalar _tmp152 = _tmp45 * _tmp98;
  const Scalar _tmp153 = _tmp113 * _tmp119 * _tmp85 + _tmp125 * _tmp127 * _tmp85 -
                         _tmp128 * _tmp130 - _tmp152 * _tmp86;
  const Scalar _tmp154 = Scalar(1.0) / (_tmp153);
  const Scalar _tmp155 = _tmp136 * _tmp146;
  const Scalar _tmp156 =
      std::asinh(_tmp154 * (_tmp119 * _tmp149 * _tmp90 + _tmp127 * _tmp138 * _tmp90 +
                            _tmp130 * _tmp144 * _tmp90 - _tmp133 * _tmp155 * _tmp90 +
                            _tmp140 * _tmp142 * _tmp90 + _tmp148 * _tmp45));
  const Scalar _tmp157 = Scalar(9.6622558468725703) * _tmp153;
  const Scalar _tmp158 = _tmp112 * _tmp119 + _tmp124 * _tmp127 + _tmp129 * _tmp130 + _tmp152;
  const Scalar _tmp159 = Scalar(1.0) / (_tmp158);
  const Scalar _tmp160 =
      std::asinh(_tmp159 * (-_tmp111 * _tmp119 * _tmp135 - _tmp123 * _tmp127 * _tmp135 -
                            _tmp130 * _tmp145 - _tmp139 * _tmp142 + _tmp147 * _tmp45 + _tmp155));
  const Scalar _tmp161 = Scalar(9.6622558468725703) * _tmp158;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp2 * (Scalar(0.86565325453551001) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
                std::cosh(
                    Scalar(0.1034955) * _tmp0 *
                    (-_tmp1 * _tmp2 -
                     Scalar(4.7752063900000001) *
                         std::sqrt(Scalar(
                             std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp29), Scalar(2)) +
                             Scalar(0.32397683292140877) *
                                 std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp39),
                                          Scalar(2))))))) +
      _tmp44 + p_init2;
  _res(1, 0) =
      -_tmp151 *
          (Scalar(0.87679799772039002) * _tmp132 + std::cosh(Scalar(1.0) * _tmp150) -
           std::cosh(
               Scalar(0.1034955) * _tmp132 *
               (-_tmp150 * _tmp151 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp61 - 1), Scalar(2)) +
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp65 - 1),
                                     Scalar(2))))))) +
      _tmp70 + p_init2;
  _res(2, 0) =
      -_tmp157 *
          (Scalar(0.86625939559540499) * _tmp154 + std::cosh(Scalar(1.0) * _tmp156) -
           std::cosh(
               Scalar(0.1034955) * _tmp154 *
               (-_tmp156 * _tmp157 -
                Scalar(4.8333311099999996) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp73), Scalar(2)) +
                        Scalar(0.13817235445745474) *
                            std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp76 - 1),
                                     Scalar(2))))))) +
      _tmp81 + p_init2;
  _res(3, 0) =
      -_tmp161 *
          (Scalar(0.87653584775870996) * _tmp159 + std::cosh(Scalar(1.0) * _tmp160) -
           std::cosh(
               Scalar(0.1034955) * _tmp159 *
               (-_tmp160 * _tmp161 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp48), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp52 - 1),
                                 Scalar(2))))))) +
      _tmp57 + p_init2;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
