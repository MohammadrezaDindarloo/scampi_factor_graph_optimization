// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost1_Nl9
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost1Nl9(const Scalar fh1, const Scalar fv1,
                                                   const Scalar rx, const Scalar ry,
                                                   const Scalar rz, const Scalar p_init0,
                                                   const Scalar p_init1, const Scalar p_init2,
                                                   const Scalar rot_init_x, const Scalar rot_init_y,
                                                   const Scalar rot_init_z, const Scalar rot_init_w,
                                                   const Scalar epsilon) {
  // Total ops: 517

  // Unused inputs
  (void)epsilon;

  // Input arrays

  // Intermediate terms (164)
  const Scalar _tmp0 = Scalar(1.0) / (fh1);
  const Scalar _tmp1 = std::asinh(_tmp0 * fv1);
  const Scalar _tmp2 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = std::cos(_tmp3);
  const Scalar _tmp5 = std::sin(_tmp3) / _tmp2;
  const Scalar _tmp6 = _tmp5 * ry;
  const Scalar _tmp7 = _tmp5 * rx;
  const Scalar _tmp8 = _tmp5 * rz;
  const Scalar _tmp9 =
      _tmp4 * rot_init_x - _tmp6 * rot_init_z + _tmp7 * rot_init_w + _tmp8 * rot_init_y;
  const Scalar _tmp10 = -2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp11 =
      _tmp4 * rot_init_z + _tmp6 * rot_init_x - _tmp7 * rot_init_y + _tmp8 * rot_init_w;
  const Scalar _tmp12 = -2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp10 +
                        Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999);
  const Scalar _tmp14 = -_tmp13;
  const Scalar _tmp15 =
      _tmp4 * rot_init_y + _tmp6 * rot_init_w + _tmp7 * rot_init_z - _tmp8 * rot_init_x;
  const Scalar _tmp16 = 2 * _tmp11 * _tmp15;
  const Scalar _tmp17 = 2 * _tmp4 * rot_init_w - 2 * _tmp6 * rot_init_y - 2 * _tmp7 * rot_init_x -
                        2 * _tmp8 * rot_init_z;
  const Scalar _tmp18 = _tmp17 * _tmp9;
  const Scalar _tmp19 = _tmp16 - _tmp18;
  const Scalar _tmp20 = -Scalar(0.010999999999999999) * _tmp19;
  const Scalar _tmp21 = 2 * _tmp9;
  const Scalar _tmp22 = _tmp15 * _tmp21;
  const Scalar _tmp23 = _tmp11 * _tmp17;
  const Scalar _tmp24 = Scalar(0.20999999999999999) * _tmp22 + Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp25 = _tmp20 + _tmp24;
  const Scalar _tmp26 = _tmp14 + _tmp25;
  const Scalar _tmp27 = _tmp26 + p_init1;
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp22 - Scalar(0.20999999999999999) * _tmp23;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp11 * _tmp21;
  const Scalar _tmp31 = _tmp15 * _tmp17;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = -Scalar(0.010999999999999999) * _tmp32;
  const Scalar _tmp34 = 1 - 2 * std::pow(_tmp15, Scalar(2));
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp34;
  const Scalar _tmp36 = _tmp33 + _tmp35;
  const Scalar _tmp37 = _tmp29 + _tmp36;
  const Scalar _tmp38 = _tmp37 + p_init0;
  const Scalar _tmp39 = Scalar(9.6622558468725703) * fh1;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp30 - Scalar(0.20999999999999999) * _tmp31;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp10 - Scalar(0.010999999999999999) * _tmp34;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp16 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp43 = _tmp41 - _tmp42;
  const Scalar _tmp44 = _tmp40 + _tmp43;
  const Scalar _tmp45 = _tmp13 + _tmp25;
  const Scalar _tmp46 = Scalar(1.0) * _tmp45;
  const Scalar _tmp47 = -_tmp46;
  const Scalar _tmp48 = _tmp20 - _tmp24;
  const Scalar _tmp49 = _tmp14 + _tmp48;
  const Scalar _tmp50 = _tmp47 + _tmp49;
  const Scalar _tmp51 = _tmp13 + _tmp48;
  const Scalar _tmp52 = Scalar(1.0) / (_tmp47 + _tmp51);
  const Scalar _tmp53 = _tmp33 - _tmp35;
  const Scalar _tmp54 = _tmp28 + _tmp53;
  const Scalar _tmp55 = _tmp28 + _tmp36;
  const Scalar _tmp56 = Scalar(1.0) * _tmp55;
  const Scalar _tmp57 = _tmp52 * (-_tmp54 + _tmp56);
  const Scalar _tmp58 = _tmp50 * _tmp57;
  const Scalar _tmp59 = _tmp29 + _tmp53;
  const Scalar _tmp60 = Scalar(1.0) / (_tmp56 - _tmp58 - _tmp59);
  const Scalar _tmp61 = Scalar(1.0) * _tmp60;
  const Scalar _tmp62 = _tmp51 + p_init1;
  const Scalar _tmp63 = _tmp62 + Scalar(-4.8333311099999996);
  const Scalar _tmp64 = _tmp54 + p_init0;
  const Scalar _tmp65 = _tmp64 + Scalar(1.79662371);
  const Scalar _tmp66 = std::pow(Scalar(std::pow(_tmp63, Scalar(2)) + std::pow(_tmp65, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp67 = _tmp65 * _tmp66;
  const Scalar _tmp68 = _tmp45 + p_init1;
  const Scalar _tmp69 = _tmp68 + Scalar(-4.7752063900000001);
  const Scalar _tmp70 = _tmp55 + p_init0;
  const Scalar _tmp71 = _tmp70 + Scalar(-2.71799795);
  const Scalar _tmp72 =
      std::sqrt(Scalar(std::pow(_tmp69, Scalar(2)) + std::pow(_tmp71, Scalar(2))));
  const Scalar _tmp73 = Scalar(1.0) / (_tmp72);
  const Scalar _tmp74 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp75 = _tmp72 * _tmp74;
  const Scalar _tmp76 = _tmp75 * (-_tmp45 * _tmp71 * _tmp73 + _tmp55 * _tmp69 * _tmp73);
  const Scalar _tmp77 = _tmp63 * _tmp66;
  const Scalar _tmp78 = _tmp51 * _tmp67 - _tmp54 * _tmp77 + _tmp67 * _tmp76;
  const Scalar _tmp79 = _tmp69 * _tmp74;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp67 * _tmp79 - _tmp77);
  const Scalar _tmp81 = Scalar(1.0) * _tmp80;
  const Scalar _tmp82 = -_tmp40;
  const Scalar _tmp83 = _tmp41 + _tmp42;
  const Scalar _tmp84 = _tmp82 + _tmp83;
  const Scalar _tmp85 = _tmp40 + _tmp83;
  const Scalar _tmp86 = _tmp67 * _tmp85;
  const Scalar _tmp87 = _tmp77 * _tmp84 - _tmp79 * _tmp86;
  const Scalar _tmp88 = _tmp81 * _tmp87;
  const Scalar _tmp89 = -_tmp67 * _tmp84 + _tmp86;
  const Scalar _tmp90 = _tmp57 * _tmp88 - _tmp81 * _tmp89;
  const Scalar _tmp91 = _tmp49 + p_init1;
  const Scalar _tmp92 = _tmp91 + Scalar(8.3196563700000006);
  const Scalar _tmp93 = _tmp59 + p_init0;
  const Scalar _tmp94 = _tmp93 + Scalar(1.9874742000000001);
  const Scalar _tmp95 = std::pow(Scalar(std::pow(_tmp92, Scalar(2)) + std::pow(_tmp94, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp96 = _tmp92 * _tmp95;
  const Scalar _tmp97 = _tmp94 * _tmp95;
  const Scalar _tmp98 = _tmp79 * _tmp97 - _tmp96;
  const Scalar _tmp99 = _tmp80 * _tmp98;
  const Scalar _tmp100 = _tmp85 * _tmp97;
  const Scalar _tmp101 = _tmp43 + _tmp82;
  const Scalar _tmp102 = -_tmp100 * _tmp79 + _tmp101 * _tmp96 - _tmp87 * _tmp99;
  const Scalar _tmp103 = _tmp100 - _tmp101 * _tmp97 - _tmp102 * _tmp57 - _tmp89 * _tmp99;
  const Scalar _tmp104 = Scalar(1.0) / (_tmp103);
  const Scalar _tmp105 = _tmp49 * _tmp97 - _tmp59 * _tmp96 + _tmp76 * _tmp97 - _tmp78 * _tmp99;
  const Scalar _tmp106 = _tmp104 * _tmp105;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp105);
  const Scalar _tmp108 = _tmp103 * _tmp107;
  const Scalar _tmp109 = _tmp108 * (-_tmp106 * _tmp90 - _tmp78 * _tmp81);
  const Scalar _tmp110 = _tmp50 * _tmp60;
  const Scalar _tmp111 = _tmp109 + _tmp90;
  const Scalar _tmp112 = _tmp102 * _tmp104;
  const Scalar _tmp113 = _tmp109 * _tmp110 - _tmp111 * _tmp112 - _tmp88;
  const Scalar _tmp114 = Scalar(1.0) * _tmp52;
  const Scalar _tmp115 = _tmp38 + Scalar(-2.5202214700000001);
  const Scalar _tmp116 = _tmp27 + Scalar(8.3888750099999996);
  const Scalar _tmp117 =
      std::pow(Scalar(std::pow(_tmp115, Scalar(2)) + std::pow(_tmp116, Scalar(2))),
               Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp118 = _tmp116 * _tmp117;
  const Scalar _tmp119 = _tmp118 * fh1;
  const Scalar _tmp120 = Scalar(1.0) * _tmp107;
  const Scalar _tmp121 = _tmp108 * _tmp61;
  const Scalar _tmp122 = -_tmp102 * _tmp120 + _tmp121 * _tmp50;
  const Scalar _tmp123 = _tmp115 * _tmp117;
  const Scalar _tmp124 = fh1 * (_tmp118 * _tmp37 - _tmp123 * _tmp26);
  const Scalar _tmp125 = _tmp58 * _tmp61 + Scalar(1.0);
  const Scalar _tmp126 = _tmp57 * _tmp61;
  const Scalar _tmp127 = _tmp44 * fh1;
  const Scalar _tmp128 = -_tmp118 * _tmp127 - Scalar(3.29616) * _tmp19 - _tmp26 * fv1;
  const Scalar _tmp129 = _tmp46 * _tmp57 + _tmp56;
  const Scalar _tmp130 = 0;
  const Scalar _tmp131 = _tmp104 * _tmp130;
  const Scalar _tmp132 = _tmp129 * _tmp60;
  const Scalar _tmp133 = -_tmp102 * _tmp131 - _tmp132 * _tmp50 + _tmp47;
  const Scalar _tmp134 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp135 = _tmp79 * _tmp80;
  const Scalar _tmp136 = _tmp135 * _tmp87 + _tmp79 * _tmp85;
  const Scalar _tmp137 = _tmp135 * _tmp89 - _tmp136 * _tmp57 - _tmp85;
  const Scalar _tmp138 = _tmp108 * (-_tmp106 * _tmp137 + _tmp135 * _tmp78 - _tmp76);
  const Scalar _tmp139 = _tmp137 + _tmp138;
  const Scalar _tmp140 = _tmp110 * _tmp138 - _tmp112 * _tmp139 + _tmp136;
  const Scalar _tmp141 = _tmp123 * fh1;
  const Scalar _tmp142 = _tmp50 * _tmp52;
  const Scalar _tmp143 = _tmp123 * _tmp127 + Scalar(3.29616) * _tmp32 + _tmp37 * fv1;
  const Scalar _tmp144 = _tmp104 * _tmp97;
  const Scalar _tmp145 = _tmp104 * _tmp98;
  const Scalar _tmp146 = -_tmp139 * _tmp145 - _tmp79;
  const Scalar _tmp147 = _tmp67 * _tmp80;
  const Scalar _tmp148 = -_tmp111 * _tmp145 + Scalar(1.0);
  const Scalar _tmp149 = _tmp130 * _tmp145;
  const Scalar _tmp150 = -_tmp119 * _tmp75 * (_tmp111 * _tmp144 + _tmp147 * _tmp148) -
                         _tmp124 * _tmp75 * (-_tmp120 * _tmp67 * _tmp99 + _tmp120 * _tmp97) -
                         _tmp134 * _tmp75 * (_tmp131 * _tmp97 - _tmp147 * _tmp149) -
                         _tmp141 * _tmp75 * (_tmp139 * _tmp144 + _tmp146 * _tmp147 + Scalar(1.0));
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = std::asinh(
      _tmp151 * (Scalar(1.0) * _tmp119 * (_tmp109 * _tmp61 - _tmp113 * _tmp114) +
                 Scalar(1.0) * _tmp124 * (-_tmp114 * _tmp122 + _tmp121) +
                 Scalar(1.0) * _tmp128 * (-_tmp114 * _tmp125 + _tmp126) +
                 Scalar(1.0) * _tmp134 * (-_tmp114 * _tmp133 - _tmp129 * _tmp61 + Scalar(1.0)) +
                 Scalar(1.0) * _tmp141 * (-_tmp114 * _tmp140 + _tmp138 * _tmp61) +
                 Scalar(1.0) * _tmp143 * (_tmp142 * _tmp61 - _tmp61)));
  const Scalar _tmp153 = Scalar(9.6622558468725703) * _tmp150;
  const Scalar _tmp154 = _tmp120 * _tmp124;
  const Scalar _tmp155 = _tmp119 * _tmp148 * _tmp80 - _tmp134 * _tmp149 * _tmp80 +
                         _tmp141 * _tmp146 * _tmp80 - _tmp154 * _tmp99;
  const Scalar _tmp156 = Scalar(1.0) / (_tmp155);
  const Scalar _tmp157 = _tmp143 * _tmp61;
  const Scalar _tmp158 =
      std::asinh(_tmp156 * (_tmp113 * _tmp119 * _tmp52 + _tmp122 * _tmp124 * _tmp52 +
                            _tmp125 * _tmp128 * _tmp52 + _tmp133 * _tmp134 * _tmp52 +
                            _tmp140 * _tmp141 * _tmp52 - _tmp142 * _tmp157));
  const Scalar _tmp159 = Scalar(9.6622558468725703) * _tmp155;
  const Scalar _tmp160 =
      _tmp104 * _tmp111 * _tmp119 + _tmp104 * _tmp139 * _tmp141 + _tmp131 * _tmp134 + _tmp154;
  const Scalar _tmp161 = Scalar(1.0) / (_tmp160);
  const Scalar _tmp162 =
      std::asinh(_tmp161 * (-_tmp109 * _tmp119 * _tmp60 - _tmp121 * _tmp124 - _tmp126 * _tmp128 +
                            _tmp132 * _tmp134 - _tmp138 * _tmp141 * _tmp60 + _tmp157));
  const Scalar _tmp163 = Scalar(9.6622558468725703) * _tmp160;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) =
      -_tmp39 *
          (Scalar(0.87653584775870996) * _tmp0 + std::cosh(Scalar(1.0) * _tmp1) -
           std::cosh(
               Scalar(0.1034955) * _tmp0 *
               (-_tmp1 * _tmp39 -
                Scalar(8.3888750099999996) *
                    std::sqrt(Scalar(
                        Scalar(0.090254729040973036) *
                            std::pow(Scalar(1 - Scalar(0.39679052492160538) * _tmp38), Scalar(2)) +
                        std::pow(Scalar(-Scalar(0.11920549523123722) * _tmp27 - 1),
                                 Scalar(2))))))) +
      _tmp44 + p_init2;
  _res(1, 0) =
      -_tmp153 *
          (Scalar(0.86565325453551001) * _tmp151 + std::cosh(Scalar(1.0) * _tmp152) -
           std::cosh(
               Scalar(0.1034955) * _tmp151 *
               (-_tmp152 * _tmp153 -
                Scalar(4.7752063900000001) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20941503221602112) * _tmp68), Scalar(2)) +
                        Scalar(0.32397683292140877) *
                            std::pow(Scalar(1 - Scalar(0.36791786395571047) * _tmp70),
                                     Scalar(2))))))) +
      _tmp85 + p_init2;
  _res(2, 0) =
      -_tmp159 *
          (Scalar(0.86625939559540499) * _tmp156 + std::cosh(Scalar(1.0) * _tmp158) -
           std::cosh(
               Scalar(0.1034955) * _tmp156 *
               (-_tmp158 * _tmp159 -
                Scalar(4.8333311099999996) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(1 - Scalar(0.20689664689659551) * _tmp62), Scalar(2)) +
                        Scalar(0.13817235445745474) *
                            std::pow(Scalar(-Scalar(0.55659957866191134) * _tmp64 - 1),
                                     Scalar(2))))))) +
      _tmp84 + p_init2;
  _res(3, 0) =
      _tmp101 -
      _tmp163 *
          (Scalar(0.87679799772039002) * _tmp161 + std::cosh(Scalar(1.0) * _tmp162) -
           std::cosh(
               Scalar(0.1034955) * _tmp161 *
               (-_tmp162 * _tmp163 -
                Scalar(8.3196563700000006) *
                    std::sqrt(Scalar(
                        std::pow(Scalar(-Scalar(0.12019727204189803) * _tmp91 - 1), Scalar(2)) +
                        Scalar(0.057067943376852184) *
                            std::pow(Scalar(-Scalar(0.50315118556004401) * _tmp93 - 1),
                                     Scalar(2))))))) +
      p_init2;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
