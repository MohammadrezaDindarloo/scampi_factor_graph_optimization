// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_rx_Nl17
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtRxNl17(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 1005

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (328)
  const Scalar _tmp0 = std::pow(rx, Scalar(2));
  const Scalar _tmp1 = _tmp0 + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2));
  const Scalar _tmp2 = std::sqrt(_tmp1);
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = std::cos(_tmp3);
  const Scalar _tmp5 = _tmp4 * rot_init_x;
  const Scalar _tmp6 = std::sin(_tmp3);
  const Scalar _tmp7 = _tmp6 / _tmp2;
  const Scalar _tmp8 = _tmp7 * rot_init_z;
  const Scalar _tmp9 = _tmp7 * rot_init_w;
  const Scalar _tmp10 = _tmp9 * rx;
  const Scalar _tmp11 = _tmp7 * rot_init_y;
  const Scalar _tmp12 = _tmp10 + _tmp11 * rz + _tmp5 - _tmp8 * ry;
  const Scalar _tmp13 = _tmp4 * rot_init_y;
  const Scalar _tmp14 = _tmp8 * rx;
  const Scalar _tmp15 = _tmp7 * rot_init_x;
  const Scalar _tmp16 = _tmp13 + _tmp14 - _tmp15 * rz + _tmp9 * ry;
  const Scalar _tmp17 = 2 * _tmp16;
  const Scalar _tmp18 = _tmp12 * _tmp17;
  const Scalar _tmp19 = _tmp4 * rot_init_z;
  const Scalar _tmp20 = _tmp11 * rx;
  const Scalar _tmp21 = _tmp15 * ry + _tmp19 - _tmp20 + _tmp9 * rz;
  const Scalar _tmp22 = _tmp4 * rot_init_w;
  const Scalar _tmp23 = _tmp15 * rx;
  const Scalar _tmp24 = -_tmp11 * ry + _tmp22 - _tmp23 - _tmp8 * rz;
  const Scalar _tmp25 = 2 * _tmp24;
  const Scalar _tmp26 = _tmp21 * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp18 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = -2 * std::pow(_tmp16, Scalar(2));
  const Scalar _tmp30 = -2 * std::pow(_tmp21, Scalar(2));
  const Scalar _tmp31 = Scalar(0.20999999999999999) * _tmp29 +
                        Scalar(0.20999999999999999) * _tmp30 + Scalar(0.20999999999999999);
  const Scalar _tmp32 = 2 * _tmp12 * _tmp21;
  const Scalar _tmp33 = _tmp16 * _tmp25;
  const Scalar _tmp34 =
      -Scalar(0.010999999999999999) * _tmp32 - Scalar(0.010999999999999999) * _tmp33;
  const Scalar _tmp35 = _tmp31 + _tmp34;
  const Scalar _tmp36 = _tmp28 + _tmp35;
  const Scalar _tmp37 = _tmp36 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp39 = _tmp17 * _tmp21;
  const Scalar _tmp40 = _tmp12 * _tmp25;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp39 + Scalar(0.010999999999999999) * _tmp40;
  const Scalar _tmp42 = 1 - 2 * std::pow(_tmp12, Scalar(2));
  const Scalar _tmp43 = Scalar(0.20999999999999999) * _tmp30 + Scalar(0.20999999999999999) * _tmp42;
  const Scalar _tmp44 = _tmp41 - _tmp43;
  const Scalar _tmp45 = _tmp38 + _tmp44;
  const Scalar _tmp46 = _tmp45 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp47 = std::pow(_tmp37, Scalar(2)) + std::pow(_tmp46, Scalar(2));
  const Scalar _tmp48 = std::pow(_tmp47, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp49 = _tmp37 * _tmp48;
  const Scalar _tmp50 = -_tmp38;
  const Scalar _tmp51 = _tmp41 + _tmp43;
  const Scalar _tmp52 = _tmp50 + _tmp51;
  const Scalar _tmp53 = _tmp52 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp54 = -_tmp31 + _tmp34;
  const Scalar _tmp55 = _tmp27 + _tmp54;
  const Scalar _tmp56 = _tmp55 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp57 = Scalar(1.0) / (_tmp56);
  const Scalar _tmp58 = _tmp53 * _tmp57;
  const Scalar _tmp59 = _tmp44 + _tmp50;
  const Scalar _tmp60 = _tmp59 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp61 = _tmp28 + _tmp54;
  const Scalar _tmp62 = _tmp61 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp63 = std::pow(_tmp60, Scalar(2)) + std::pow(_tmp62, Scalar(2));
  const Scalar _tmp64 = std::pow(_tmp63, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp65 = _tmp62 * _tmp64;
  const Scalar _tmp66 = _tmp60 * _tmp64;
  const Scalar _tmp67 = _tmp58 * _tmp65 - _tmp66;
  const Scalar _tmp68 = std::pow(_tmp56, Scalar(2));
  const Scalar _tmp69 = std::pow(_tmp53, Scalar(2)) + _tmp68;
  const Scalar _tmp70 = std::sqrt(_tmp69);
  const Scalar _tmp71 = Scalar(1.0) / (_tmp70);
  const Scalar _tmp72 = _tmp55 * _tmp71;
  const Scalar _tmp73 = _tmp52 * _tmp71;
  const Scalar _tmp74 = _tmp53 * _tmp72 - _tmp56 * _tmp73;
  const Scalar _tmp75 = _tmp57 * _tmp70;
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp46 * _tmp48;
  const Scalar _tmp78 = -_tmp36 * _tmp77 + _tmp45 * _tmp49 + _tmp49 * _tmp76;
  const Scalar _tmp79 = _tmp49 * _tmp58 - _tmp77;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = _tmp67 * _tmp80;
  const Scalar _tmp82 = _tmp59 * _tmp65 - _tmp61 * _tmp66 + _tmp65 * _tmp76 - _tmp78 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = Scalar(1.0) * _tmp80;
  const Scalar _tmp85 = _tmp83 * _tmp84;
  const Scalar _tmp86 = _tmp67 * _tmp85;
  const Scalar _tmp87 = Scalar(1.0) * _tmp83;
  const Scalar _tmp88 = -_tmp49 * _tmp86 + _tmp65 * _tmp87;
  const Scalar _tmp89 = _tmp38 + _tmp51;
  const Scalar _tmp90 = _tmp89 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp91 = _tmp27 + _tmp35;
  const Scalar _tmp92 = _tmp91 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp93 = std::pow(_tmp90, Scalar(2)) + std::pow(_tmp92, Scalar(2));
  const Scalar _tmp94 = std::pow(_tmp93, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp95 = _tmp91 * _tmp94;
  const Scalar _tmp96 = _tmp89 * _tmp94;
  const Scalar _tmp97 = fh1 * (_tmp90 * _tmp95 - _tmp92 * _tmp96);
  const Scalar _tmp98 = _tmp75 * _tmp97;
  const Scalar _tmp99 = _tmp90 * _tmp94;
  const Scalar _tmp100 =
      Scalar(0.20999999999999999) * _tmp32 - Scalar(0.20999999999999999) * _tmp33;
  const Scalar _tmp101 =
      -Scalar(0.010999999999999999) * _tmp29 - Scalar(0.010999999999999999) * _tmp42;
  const Scalar _tmp102 =
      Scalar(0.20999999999999999) * _tmp39 + Scalar(0.20999999999999999) * _tmp40;
  const Scalar _tmp103 = _tmp101 - _tmp102;
  const Scalar _tmp104 = _tmp100 + _tmp103;
  const Scalar _tmp105 = -_tmp100;
  const Scalar _tmp106 = _tmp101 + _tmp102 + _tmp105;
  const Scalar _tmp107 = _tmp106 * _tmp49;
  const Scalar _tmp108 = -_tmp104 * _tmp49 + _tmp107;
  const Scalar _tmp109 = _tmp104 * _tmp77 - _tmp107 * _tmp58;
  const Scalar _tmp110 = _tmp106 * _tmp65;
  const Scalar _tmp111 = _tmp103 + _tmp105;
  const Scalar _tmp112 = -_tmp109 * _tmp81 - _tmp110 * _tmp58 + _tmp111 * _tmp66;
  const Scalar _tmp113 = Scalar(1.0) * _tmp52;
  const Scalar _tmp114 = -_tmp113 + _tmp45;
  const Scalar _tmp115 = Scalar(1.0) / (_tmp114);
  const Scalar _tmp116 = Scalar(1.0) * _tmp55;
  const Scalar _tmp117 = _tmp116 - _tmp36;
  const Scalar _tmp118 = _tmp115 * _tmp117;
  const Scalar _tmp119 = -_tmp108 * _tmp81 + _tmp110 - _tmp111 * _tmp65 - _tmp112 * _tmp118;
  const Scalar _tmp120 = Scalar(1.0) / (_tmp119);
  const Scalar _tmp121 = _tmp109 * _tmp84;
  const Scalar _tmp122 = -_tmp108 * _tmp84 + _tmp118 * _tmp121;
  const Scalar _tmp123 = _tmp120 * _tmp122;
  const Scalar _tmp124 = -_tmp123 * _tmp82 - _tmp78 * _tmp84;
  const Scalar _tmp125 = _tmp119 * _tmp83;
  const Scalar _tmp126 = _tmp122 + _tmp124 * _tmp125;
  const Scalar _tmp127 = _tmp120 * _tmp65;
  const Scalar _tmp128 = _tmp120 * _tmp67;
  const Scalar _tmp129 = -_tmp126 * _tmp128 + Scalar(1.0);
  const Scalar _tmp130 = _tmp49 * _tmp80;
  const Scalar _tmp131 = _tmp126 * _tmp127 + _tmp129 * _tmp130;
  const Scalar _tmp132 = _tmp75 * fh1;
  const Scalar _tmp133 = _tmp131 * _tmp132;
  const Scalar _tmp134 = _tmp113 * _tmp118 + _tmp116;
  const Scalar _tmp135 = 0;
  const Scalar _tmp136 = _tmp120 * _tmp135;
  const Scalar _tmp137 = _tmp136 * _tmp81;
  const Scalar _tmp138 = _tmp136 * _tmp65 - _tmp137 * _tmp49;
  const Scalar _tmp139 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp140 = _tmp139 * _tmp75;
  const Scalar _tmp141 = _tmp58 * _tmp80;
  const Scalar _tmp142 = _tmp106 * _tmp58;
  const Scalar _tmp143 = _tmp109 * _tmp141 + _tmp142;
  const Scalar _tmp144 = -_tmp106 + _tmp108 * _tmp141 - _tmp118 * _tmp143;
  const Scalar _tmp145 = _tmp120 * _tmp144;
  const Scalar _tmp146 = _tmp141 * _tmp78 - _tmp145 * _tmp82 - _tmp76;
  const Scalar _tmp147 = _tmp125 * _tmp146 + _tmp144;
  const Scalar _tmp148 = -_tmp128 * _tmp147 - _tmp58;
  const Scalar _tmp149 = _tmp127 * _tmp147 + _tmp130 * _tmp148 + Scalar(1.0);
  const Scalar _tmp150 = _tmp92 * _tmp94;
  const Scalar _tmp151 = _tmp150 * fh1;
  const Scalar _tmp152 = _tmp151 * _tmp75;
  const Scalar _tmp153 = (Scalar(1) / Scalar(2)) / _tmp1;
  const Scalar _tmp154 = _tmp0 * _tmp153;
  const Scalar _tmp155 = _tmp153 * rx;
  const Scalar _tmp156 = _tmp155 * rz;
  const Scalar _tmp157 = _tmp155 * ry;
  const Scalar _tmp158 = _tmp6 / (_tmp1 * std::sqrt(_tmp1));
  const Scalar _tmp159 = _tmp0 * _tmp158;
  const Scalar _tmp160 = _tmp158 * rx;
  const Scalar _tmp161 = _tmp160 * ry;
  const Scalar _tmp162 = _tmp160 * rz;
  const Scalar _tmp163 = _tmp154 * _tmp19 - _tmp156 * _tmp5 + _tmp157 * _tmp22 -
                         _tmp159 * rot_init_z - _tmp161 * rot_init_w + _tmp162 * rot_init_x -
                         Scalar(1) / Scalar(2) * _tmp20 + _tmp8;
  const Scalar _tmp164 = Scalar(0.83999999999999997) * _tmp163;
  const Scalar _tmp165 = _tmp16 * _tmp164;
  const Scalar _tmp166 = -_tmp11 - _tmp13 * _tmp154 - Scalar(1) / Scalar(2) * _tmp14 +
                         _tmp156 * _tmp22 + _tmp157 * _tmp5 + _tmp159 * rot_init_y -
                         _tmp161 * rot_init_x - _tmp162 * rot_init_w;
  const Scalar _tmp167 = Scalar(0.83999999999999997) * _tmp21;
  const Scalar _tmp168 = _tmp166 * _tmp167;
  const Scalar _tmp169 = Scalar(0.41999999999999998) * _tmp163;
  const Scalar _tmp170 = _tmp12 * _tmp169;
  const Scalar _tmp171 = _tmp13 * _tmp156 + _tmp154 * _tmp22 - _tmp157 * _tmp19 -
                         _tmp159 * rot_init_w + _tmp161 * rot_init_z - _tmp162 * rot_init_y -
                         Scalar(1) / Scalar(2) * _tmp23 + _tmp9;
  const Scalar _tmp172 = Scalar(0.41999999999999998) * _tmp171;
  const Scalar _tmp173 = _tmp16 * _tmp172;
  const Scalar _tmp174 = _tmp170 + _tmp173;
  const Scalar _tmp175 = _tmp168 + _tmp174;
  const Scalar _tmp176 = -Scalar(1) / Scalar(2) * _tmp10 - _tmp13 * _tmp157 - _tmp15 -
                         _tmp154 * _tmp5 - _tmp156 * _tmp19 + _tmp159 * rot_init_x +
                         _tmp161 * rot_init_y + _tmp162 * rot_init_z;
  const Scalar _tmp177 = Scalar(0.41999999999999998) * _tmp176;
  const Scalar _tmp178 = _tmp177 * _tmp21;
  const Scalar _tmp179 = Scalar(0.41999999999999998) * _tmp166;
  const Scalar _tmp180 = _tmp179 * _tmp24;
  const Scalar _tmp181 = -_tmp178 - _tmp180;
  const Scalar _tmp182 = Scalar(0.021999999999999999) * _tmp176;
  const Scalar _tmp183 = Scalar(0.021999999999999999) * _tmp166;
  const Scalar _tmp184 = Scalar(0.021999999999999999) * _tmp21;
  const Scalar _tmp185 = Scalar(0.021999999999999999) * _tmp24;
  const Scalar _tmp186 =
      -_tmp12 * _tmp183 - _tmp16 * _tmp182 - _tmp163 * _tmp185 - _tmp171 * _tmp184;
  const Scalar _tmp187 = _tmp181 + _tmp186;
  const Scalar _tmp188 = _tmp165 + _tmp175 + _tmp187;
  const Scalar _tmp189 = -_tmp168;
  const Scalar _tmp190 = -_tmp170 - _tmp173;
  const Scalar _tmp191 = _tmp189 + _tmp190;
  const Scalar _tmp192 = Scalar(0.83999999999999997) * _tmp171;
  const Scalar _tmp193 = _tmp12 * _tmp192;
  const Scalar _tmp194 =
      _tmp12 * _tmp182 - _tmp16 * _tmp183 - _tmp163 * _tmp184 + _tmp171 * _tmp185;
  const Scalar _tmp195 = -_tmp193 + _tmp194;
  const Scalar _tmp196 = _tmp181 + _tmp191 + _tmp195;
  const Scalar _tmp197 = _tmp188 * _tmp56 + _tmp196 * _tmp53;
  const Scalar _tmp198 = _tmp197 * _tmp57 * _tmp71;
  const Scalar _tmp199 = _tmp149 * _tmp151;
  const Scalar _tmp200 = -_tmp165;
  const Scalar _tmp201 = _tmp174 + _tmp189;
  const Scalar _tmp202 = _tmp187 + _tmp200 + _tmp201;
  const Scalar _tmp203 = _tmp178 + _tmp180;
  const Scalar _tmp204 = _tmp195 + _tmp201 + _tmp203;
  const Scalar _tmp205 = (Scalar(1) / Scalar(2)) * (2 * _tmp202 * _tmp92 + 2 * _tmp204 * _tmp90) /
                         (_tmp93 * std::sqrt(_tmp93));
  const Scalar _tmp206 = _tmp205 * _tmp90;
  const Scalar _tmp207 = _tmp202 * _tmp94;
  const Scalar _tmp208 = _tmp132 * _tmp149;
  const Scalar _tmp209 = Scalar(1.0) / (_tmp68);
  const Scalar _tmp210 = _tmp188 * _tmp209 * _tmp70;
  const Scalar _tmp211 = _tmp88 * _tmp97;
  const Scalar _tmp212 = _tmp205 * _tmp92;
  const Scalar _tmp213 = fh1 * (-_tmp150 * _tmp204 - _tmp202 * _tmp96 + _tmp202 * _tmp99 +
                                _tmp204 * _tmp95 - _tmp206 * _tmp91 + _tmp212 * _tmp89);
  const Scalar _tmp214 = _tmp138 * _tmp139;
  const Scalar _tmp215 = _tmp186 + _tmp203;
  const Scalar _tmp216 = _tmp191 + _tmp200 + _tmp215;
  const Scalar _tmp217 = _tmp193 + _tmp194;
  const Scalar _tmp218 = _tmp175 + _tmp203 + _tmp217;
  const Scalar _tmp219 =
      (2 * _tmp216 * _tmp37 + 2 * _tmp218 * _tmp46) / (_tmp47 * std::sqrt(_tmp47));
  const Scalar _tmp220 = (Scalar(1) / Scalar(2)) * _tmp219;
  const Scalar _tmp221 = _tmp220 * _tmp37;
  const Scalar _tmp222 = _tmp221 * _tmp80;
  const Scalar _tmp223 = _tmp216 * _tmp48;
  const Scalar _tmp224 = _tmp223 * _tmp80;
  const Scalar _tmp225 = _tmp168 + _tmp190;
  const Scalar _tmp226 = _tmp165 + _tmp215 + _tmp225;
  const Scalar _tmp227 = _tmp181 + _tmp217 + _tmp225;
  const Scalar _tmp228 =
      (2 * _tmp226 * _tmp62 + 2 * _tmp227 * _tmp60) / (_tmp63 * std::sqrt(_tmp63));
  const Scalar _tmp229 = (Scalar(1) / Scalar(2)) * _tmp228;
  const Scalar _tmp230 = _tmp229 * _tmp62;
  const Scalar _tmp231 = _tmp120 * _tmp230;
  const Scalar _tmp232 = _tmp227 * _tmp64;
  const Scalar _tmp233 = _tmp226 * _tmp64;
  const Scalar _tmp234 = _tmp229 * _tmp60;
  const Scalar _tmp235 = _tmp188 * _tmp53;
  const Scalar _tmp236 = _tmp209 * _tmp235;
  const Scalar _tmp237 = _tmp196 * _tmp57;
  const Scalar _tmp238 = -_tmp230 * _tmp58 - _tmp232 + _tmp233 * _tmp58 + _tmp234 -
                         _tmp236 * _tmp65 + _tmp237 * _tmp65;
  const Scalar _tmp239 = _tmp238 * _tmp80;
  const Scalar _tmp240 = _tmp12 * _tmp177;
  const Scalar _tmp241 = -_tmp240;
  const Scalar _tmp242 = _tmp16 * _tmp179;
  const Scalar _tmp243 = -_tmp242;
  const Scalar _tmp244 = _tmp169 * _tmp21;
  const Scalar _tmp245 = -_tmp244;
  const Scalar _tmp246 = _tmp172 * _tmp24;
  const Scalar _tmp247 = -_tmp246;
  const Scalar _tmp248 = _tmp16 * _tmp163;
  const Scalar _tmp249 = Scalar(0.043999999999999997) * _tmp248;
  const Scalar _tmp250 = _tmp12 * _tmp171;
  const Scalar _tmp251 = Scalar(0.043999999999999997) * _tmp250;
  const Scalar _tmp252 = _tmp249 + _tmp251;
  const Scalar _tmp253 = _tmp241 + _tmp243 + _tmp245 + _tmp247 + _tmp252;
  const Scalar _tmp254 = _tmp16 * _tmp177;
  const Scalar _tmp255 = _tmp12 * _tmp179;
  const Scalar _tmp256 = _tmp172 * _tmp21;
  const Scalar _tmp257 = _tmp169 * _tmp24;
  const Scalar _tmp258 = -_tmp254 + _tmp255 + _tmp256 - _tmp257;
  const Scalar _tmp259 = _tmp253 + _tmp258;
  const Scalar _tmp260 = _tmp254 - _tmp255 - _tmp256 + _tmp257;
  const Scalar _tmp261 = _tmp240 + _tmp242 + _tmp244 + _tmp246 + _tmp252 + _tmp260;
  const Scalar _tmp262 = _tmp261 * _tmp49;
  const Scalar _tmp263 = _tmp106 * _tmp223;
  const Scalar _tmp264 = _tmp104 * _tmp221 - _tmp104 * _tmp223 - _tmp106 * _tmp221 -
                         _tmp259 * _tmp49 + _tmp262 + _tmp263;
  const Scalar _tmp265 = _tmp106 * _tmp233;
  const Scalar _tmp266 = _tmp253 + _tmp260;
  const Scalar _tmp267 = _tmp261 * _tmp65;
  const Scalar _tmp268 = _tmp167 * _tmp176;
  const Scalar _tmp269 = Scalar(0.83999999999999997) * _tmp166 * _tmp24;
  const Scalar _tmp270 =
      _tmp12 * _tmp164 + _tmp16 * _tmp192 + Scalar(1.6799999999999999) * _tmp166 * _tmp21;
  const Scalar _tmp271 = _tmp117 *
                         (Scalar(1.6799999999999999) * _tmp250 + _tmp268 + _tmp269 + _tmp270) /
                         std::pow(_tmp114, Scalar(2));
  const Scalar _tmp272 = _tmp220 * _tmp46;
  const Scalar _tmp273 = _tmp218 * _tmp48;
  const Scalar _tmp274 = (-_tmp221 * _tmp58 + _tmp223 * _tmp58 - _tmp236 * _tmp49 +
                          _tmp237 * _tmp49 + _tmp272 - _tmp273) /
                         std::pow(_tmp79, Scalar(2));
  const Scalar _tmp275 = _tmp109 * _tmp274;
  const Scalar _tmp276 = -_tmp104 * _tmp272 + _tmp104 * _tmp273 + _tmp107 * _tmp236 -
                         _tmp107 * _tmp237 + _tmp142 * _tmp221 + _tmp259 * _tmp77 -
                         _tmp262 * _tmp58 - _tmp263 * _tmp58;
  const Scalar _tmp277 =
      _tmp115 * (Scalar(1.6799999999999999) * _tmp248 - _tmp268 - _tmp269 + _tmp270);
  const Scalar _tmp278 = _tmp108 * _tmp274;
  const Scalar _tmp279 =
      -_tmp106 * _tmp230 - _tmp108 * _tmp239 + _tmp111 * _tmp230 - _tmp111 * _tmp233 +
      _tmp112 * _tmp271 - _tmp112 * _tmp277 -
      _tmp118 * (-_tmp109 * _tmp239 + _tmp110 * _tmp236 - _tmp110 * _tmp237 + _tmp111 * _tmp232 -
                 _tmp111 * _tmp234 + _tmp142 * _tmp230 - _tmp265 * _tmp58 + _tmp266 * _tmp66 -
                 _tmp267 * _tmp58 + _tmp275 * _tmp67 - _tmp276 * _tmp81) -
      _tmp264 * _tmp81 + _tmp265 - _tmp266 * _tmp65 + _tmp267 + _tmp278 * _tmp67;
  const Scalar _tmp280 = _tmp279 * _tmp83;
  const Scalar _tmp281 = _tmp198 * _tmp74;
  const Scalar _tmp282 = _tmp197 / (_tmp69 * std::sqrt(_tmp69));
  const Scalar _tmp283 =
      _tmp75 * (-_tmp188 * _tmp73 - _tmp196 * _tmp56 * _tmp71 + _tmp196 * _tmp72 +
                _tmp235 * _tmp71 + _tmp282 * _tmp52 * _tmp56 - _tmp282 * _tmp53 * _tmp55);
  const Scalar _tmp284 = _tmp210 * _tmp74;
  const Scalar _tmp285 = -_tmp216 * _tmp77 - _tmp221 * _tmp45 - _tmp221 * _tmp76 +
                         _tmp223 * _tmp45 + _tmp223 * _tmp76 + _tmp272 * _tmp36 - _tmp273 * _tmp36 +
                         _tmp273 * _tmp37 + _tmp281 * _tmp49 + _tmp283 * _tmp49 - _tmp284 * _tmp49;
  const Scalar _tmp286 = _tmp274 * _tmp78;
  const Scalar _tmp287 = -_tmp226 * _tmp66 - _tmp230 * _tmp59 - _tmp230 * _tmp76 -
                         _tmp232 * _tmp61 + _tmp232 * _tmp62 + _tmp233 * _tmp59 + _tmp233 * _tmp76 +
                         _tmp234 * _tmp61 - _tmp239 * _tmp78 + _tmp281 * _tmp65 + _tmp283 * _tmp65 -
                         _tmp284 * _tmp65 - _tmp285 * _tmp81 + _tmp286 * _tmp67;
  const Scalar _tmp288 = _tmp287 / std::pow(_tmp82, Scalar(2));
  const Scalar _tmp289 = _tmp119 * _tmp288;
  const Scalar _tmp290 = _tmp279 / std::pow(_tmp119, Scalar(2));
  const Scalar _tmp291 = _tmp290 * _tmp82;
  const Scalar _tmp292 = _tmp237 * _tmp80;
  const Scalar _tmp293 = _tmp236 * _tmp80;
  const Scalar _tmp294 =
      _tmp108 * _tmp292 - _tmp108 * _tmp293 -
      _tmp118 * (-_tmp106 * _tmp236 + _tmp106 * _tmp237 + _tmp109 * _tmp292 - _tmp109 * _tmp293 +
                 _tmp141 * _tmp276 + _tmp261 * _tmp58 - _tmp275 * _tmp58) +
      _tmp141 * _tmp264 + _tmp143 * _tmp271 - _tmp143 * _tmp277 + _tmp241 + _tmp243 + _tmp245 +
      _tmp247 - _tmp249 - _tmp251 + _tmp258 - _tmp278 * _tmp58;
  const Scalar _tmp295 = _tmp120 * _tmp82;
  const Scalar _tmp296 = _tmp125 * (_tmp141 * _tmp285 + _tmp144 * _tmp291 - _tmp145 * _tmp287 -
                                    _tmp281 - _tmp283 + _tmp284 - _tmp286 * _tmp58 +
                                    _tmp292 * _tmp78 - _tmp293 * _tmp78 - _tmp294 * _tmp295) +
                         _tmp146 * _tmp280 - _tmp146 * _tmp289 + _tmp294;
  const Scalar _tmp297 = _tmp120 * _tmp238;
  const Scalar _tmp298 = _tmp290 * _tmp67;
  const Scalar _tmp299 =
      -_tmp128 * _tmp296 - _tmp147 * _tmp297 + _tmp147 * _tmp298 + _tmp236 - _tmp237;
  const Scalar _tmp300 = _tmp120 * _tmp233;
  const Scalar _tmp301 = _tmp290 * _tmp65;
  const Scalar _tmp302 = _tmp274 * _tmp49;
  const Scalar _tmp303 = -Scalar(1.0) * _tmp118 * _tmp275 + _tmp118 * _tmp276 * _tmp84 -
                         _tmp121 * _tmp271 + _tmp121 * _tmp277 - _tmp264 * _tmp84 +
                         Scalar(1.0) * _tmp278;
  const Scalar _tmp304 = _tmp124 * _tmp280 - _tmp124 * _tmp289 +
                         _tmp125 * (_tmp122 * _tmp291 - _tmp123 * _tmp287 - _tmp285 * _tmp84 +
                                    Scalar(1.0) * _tmp286 - _tmp295 * _tmp303) +
                         _tmp303;
  const Scalar _tmp305 = -_tmp126 * _tmp297 + _tmp126 * _tmp298 - _tmp128 * _tmp304;
  const Scalar _tmp306 = _tmp99 * fh1;
  const Scalar _tmp307 = _tmp131 * _tmp306;
  const Scalar _tmp308 = Scalar(0.5) * _tmp83;
  const Scalar _tmp309 = _tmp288 * _tmp67 * _tmp84;
  const Scalar _tmp310 = Scalar(1.0) * _tmp288;
  const Scalar _tmp311 = _tmp135 * _tmp290;
  const Scalar _tmp312 = _tmp135 * _tmp297;
  const Scalar _tmp313 = _tmp128 * _tmp135;
  const Scalar _tmp314 = _tmp204 * _tmp94;
  const Scalar _tmp315 = _tmp136 * _tmp139;
  const Scalar _tmp316 = _tmp85 * _tmp97;
  const Scalar _tmp317 = _tmp80 * fh1;
  const Scalar _tmp318 = _tmp150 * _tmp317;
  const Scalar _tmp319 = _tmp317 * _tmp99;
  const Scalar _tmp320 = _tmp129 * _tmp317;
  const Scalar _tmp321 = _tmp148 * _tmp317;
  const Scalar _tmp322 = _tmp139 * _tmp311;
  const Scalar _tmp323 = _tmp87 * _tmp97;
  const Scalar _tmp324 = _tmp120 * fh1;
  const Scalar _tmp325 = _tmp150 * _tmp324;
  const Scalar _tmp326 = _tmp126 * _tmp324;
  const Scalar _tmp327 = _tmp147 * _tmp324;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -(-_tmp132 * _tmp99 *
            (-_tmp126 * _tmp231 + _tmp126 * _tmp300 - _tmp126 * _tmp301 + _tmp127 * _tmp304 -
             _tmp129 * _tmp222 + _tmp129 * _tmp224 - _tmp129 * _tmp302 + _tmp130 * _tmp305) +
        _tmp133 * _tmp206 - _tmp133 * _tmp314 -
        _tmp140 *
            (-_tmp130 * _tmp312 - _tmp136 * _tmp230 + _tmp136 * _tmp233 + _tmp137 * _tmp221 -
             _tmp137 * _tmp223 + _tmp302 * _tmp313 + _tmp311 * _tmp49 * _tmp81 - _tmp311 * _tmp65) -
        _tmp152 * (_tmp127 * _tmp296 + _tmp130 * _tmp299 - _tmp147 * _tmp231 + _tmp147 * _tmp300 -
                   _tmp147 * _tmp301 - _tmp148 * _tmp222 + _tmp148 * _tmp224 - _tmp148 * _tmp302) -
        _tmp198 * _tmp199 - _tmp198 * _tmp211 - _tmp198 * _tmp214 - _tmp198 * _tmp307 +
        _tmp199 * _tmp210 - _tmp207 * _tmp208 + _tmp208 * _tmp212 + _tmp210 * _tmp211 +
        _tmp210 * _tmp214 + _tmp210 * _tmp307 - _tmp213 * _tmp75 * _tmp88 -
        _tmp98 * (_tmp219 * _tmp308 * _tmp37 * _tmp81 - _tmp223 * _tmp86 -
                  _tmp228 * _tmp308 * _tmp62 + _tmp233 * _tmp87 - _tmp238 * _tmp49 * _tmp85 +
                  _tmp302 * _tmp67 * _tmp87 + _tmp309 * _tmp49 - _tmp310 * _tmp65)) *
      std::exp(_tmp133 * _tmp99 + _tmp138 * _tmp140 + _tmp149 * _tmp152 + _tmp88 * _tmp98);
  _res(2, 0) =
      -(-_tmp129 * _tmp274 * _tmp306 + _tmp139 * _tmp274 * _tmp313 - _tmp139 * _tmp312 * _tmp80 -
        _tmp148 * _tmp151 * _tmp274 - _tmp206 * _tmp320 + _tmp207 * _tmp321 - _tmp212 * _tmp321 -
        _tmp213 * _tmp86 - _tmp238 * _tmp316 + _tmp274 * _tmp323 * _tmp67 + _tmp299 * _tmp318 +
        _tmp305 * _tmp319 + _tmp309 * _tmp97 + _tmp314 * _tmp320 + _tmp322 * _tmp81) *
      std::exp(-_tmp129 * _tmp319 - _tmp148 * _tmp318 + _tmp315 * _tmp81 + _tmp316 * _tmp67);
  _res(3, 0) = -(-_tmp126 * _tmp290 * _tmp306 - _tmp147 * _tmp151 * _tmp290 - _tmp206 * _tmp326 +
                 _tmp207 * _tmp327 - _tmp212 * _tmp327 + _tmp213 * _tmp87 + _tmp296 * _tmp325 +
                 _tmp304 * _tmp324 * _tmp99 - _tmp310 * _tmp97 + _tmp314 * _tmp326 - _tmp322) *
               std::exp(-_tmp147 * _tmp325 - _tmp315 - _tmp323 - _tmp326 * _tmp99);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
