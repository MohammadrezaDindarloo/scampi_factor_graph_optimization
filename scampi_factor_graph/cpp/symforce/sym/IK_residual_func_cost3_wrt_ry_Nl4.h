// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_ry_Nl4
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtRyNl4(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 1000

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (327)
  const Scalar _tmp0 = std::pow(ry, Scalar(2));
  const Scalar _tmp1 = _tmp0 + std::pow(rx, Scalar(2)) + std::pow(rz, Scalar(2));
  const Scalar _tmp2 = std::sqrt(_tmp1);
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = std::cos(_tmp3);
  const Scalar _tmp5 = _tmp4 * rot_init_z;
  const Scalar _tmp6 = std::sin(_tmp3);
  const Scalar _tmp7 = _tmp6 / _tmp2;
  const Scalar _tmp8 = _tmp7 * rot_init_x;
  const Scalar _tmp9 = _tmp8 * ry;
  const Scalar _tmp10 = _tmp7 * rot_init_y;
  const Scalar _tmp11 = _tmp7 * rot_init_w;
  const Scalar _tmp12 = -_tmp10 * rx + _tmp11 * rz + _tmp5 + _tmp9;
  const Scalar _tmp13 = -2 * std::pow(_tmp12, Scalar(2));
  const Scalar _tmp14 = _tmp4 * rot_init_x;
  const Scalar _tmp15 = _tmp7 * rot_init_z;
  const Scalar _tmp16 = _tmp15 * ry;
  const Scalar _tmp17 = _tmp10 * rz + _tmp11 * rx + _tmp14 - _tmp16;
  const Scalar _tmp18 = 1 - 2 * std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = Scalar(0.20999999999999999) * _tmp13 + Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp4 * rot_init_y;
  const Scalar _tmp21 = _tmp11 * ry;
  const Scalar _tmp22 = _tmp15 * rx + _tmp20 + _tmp21 - _tmp8 * rz;
  const Scalar _tmp23 = 2 * _tmp12 * _tmp22;
  const Scalar _tmp24 = _tmp4 * rot_init_w;
  const Scalar _tmp25 = _tmp10 * ry;
  const Scalar _tmp26 = -_tmp15 * rz + _tmp24 - _tmp25 - _tmp8 * rx;
  const Scalar _tmp27 = 2 * _tmp26;
  const Scalar _tmp28 = _tmp17 * _tmp27;
  const Scalar _tmp29 =
      -Scalar(0.010999999999999999) * _tmp23 + Scalar(0.010999999999999999) * _tmp28;
  const Scalar _tmp30 = 2 * _tmp17;
  const Scalar _tmp31 = _tmp22 * _tmp30;
  const Scalar _tmp32 = _tmp12 * _tmp27;
  const Scalar _tmp33 = Scalar(0.20999999999999999) * _tmp31 + Scalar(0.20999999999999999) * _tmp32;
  const Scalar _tmp34 = _tmp29 + _tmp33;
  const Scalar _tmp35 = _tmp19 + _tmp34;
  const Scalar _tmp36 = _tmp35 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp37 = -2 * std::pow(_tmp22, Scalar(2));
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp13 +
                        Scalar(0.20999999999999999) * _tmp37 + Scalar(0.20999999999999999);
  const Scalar _tmp39 = _tmp12 * _tmp30;
  const Scalar _tmp40 = _tmp22 * _tmp27;
  const Scalar _tmp41 =
      -Scalar(0.010999999999999999) * _tmp39 - Scalar(0.010999999999999999) * _tmp40;
  const Scalar _tmp42 = Scalar(0.20999999999999999) * _tmp31 - Scalar(0.20999999999999999) * _tmp32;
  const Scalar _tmp43 = _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp38 + _tmp43;
  const Scalar _tmp45 = _tmp44 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp46 = std::pow(_tmp36, Scalar(2)) + std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp45 * _tmp47;
  const Scalar _tmp49 = _tmp36 * _tmp47;
  const Scalar _tmp50 = _tmp29 - _tmp33;
  const Scalar _tmp51 = _tmp19 + _tmp50;
  const Scalar _tmp52 = _tmp51 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp53 = -_tmp38;
  const Scalar _tmp54 = _tmp43 + _tmp53;
  const Scalar _tmp55 = _tmp54 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp57 = std::pow(_tmp52, Scalar(2)) + _tmp56;
  const Scalar _tmp58 = std::sqrt(_tmp57);
  const Scalar _tmp59 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp60 = _tmp54 * _tmp59;
  const Scalar _tmp61 = _tmp55 * _tmp59;
  const Scalar _tmp62 = -_tmp51 * _tmp61 + _tmp52 * _tmp60;
  const Scalar _tmp63 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp64 = _tmp58 * _tmp63;
  const Scalar _tmp65 = _tmp62 * _tmp64;
  const Scalar _tmp66 = _tmp41 - _tmp42;
  const Scalar _tmp67 = _tmp38 + _tmp66;
  const Scalar _tmp68 = _tmp67 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp69 = -_tmp19;
  const Scalar _tmp70 = _tmp34 + _tmp69;
  const Scalar _tmp71 = _tmp70 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp72 = std::pow(_tmp68, Scalar(2)) + std::pow(_tmp71, Scalar(2));
  const Scalar _tmp73 = std::pow(_tmp72, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp74 = _tmp68 * _tmp73;
  const Scalar _tmp75 = _tmp70 * _tmp73;
  const Scalar _tmp76 = _tmp71 * _tmp73;
  const Scalar _tmp77 = _tmp65 * _tmp74 - _tmp67 * _tmp76 + _tmp68 * _tmp75;
  const Scalar _tmp78 = _tmp52 * _tmp63;
  const Scalar _tmp79 = _tmp74 * _tmp78 - _tmp76;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp79);
  const Scalar _tmp81 = _tmp48 * _tmp78 - _tmp49;
  const Scalar _tmp82 = _tmp80 * _tmp81;
  const Scalar _tmp83 = _tmp35 * _tmp48 - _tmp44 * _tmp49 + _tmp48 * _tmp65 - _tmp77 * _tmp82;
  const Scalar _tmp84 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp85 = Scalar(1.0) * _tmp84;
  const Scalar _tmp86 = Scalar(1.0) * _tmp80;
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp81 * _tmp87;
  const Scalar _tmp89 = _tmp48 * _tmp85 - _tmp74 * _tmp88;
  const Scalar _tmp90 = _tmp53 + _tmp66;
  const Scalar _tmp91 = _tmp90 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp92 = _tmp50 + _tmp69;
  const Scalar _tmp93 = _tmp92 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp94 = std::pow(_tmp91, Scalar(2)) + std::pow(_tmp93, Scalar(2));
  const Scalar _tmp95 = std::pow(_tmp94, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp96 = _tmp92 * _tmp95;
  const Scalar _tmp97 = _tmp93 * _tmp95;
  const Scalar _tmp98 = fh1 * (_tmp90 * _tmp97 - _tmp91 * _tmp96);
  const Scalar _tmp99 = _tmp64 * _tmp98;
  const Scalar _tmp100 = Scalar(1.0) * _tmp54;
  const Scalar _tmp101 = Scalar(1.0) * _tmp51;
  const Scalar _tmp102 = -_tmp101 + _tmp70;
  const Scalar _tmp103 = Scalar(1.0) / (_tmp102);
  const Scalar _tmp104 = _tmp100 - _tmp67;
  const Scalar _tmp105 = _tmp103 * _tmp104;
  const Scalar _tmp106 = _tmp100 + _tmp101 * _tmp105;
  const Scalar _tmp107 = 0;
  const Scalar _tmp108 =
      Scalar(0.20999999999999999) * _tmp39 - Scalar(0.20999999999999999) * _tmp40;
  const Scalar _tmp109 =
      -Scalar(0.010999999999999999) * _tmp18 - Scalar(0.010999999999999999) * _tmp37;
  const Scalar _tmp110 =
      Scalar(0.20999999999999999) * _tmp23 + Scalar(0.20999999999999999) * _tmp28;
  const Scalar _tmp111 = _tmp109 + _tmp110;
  const Scalar _tmp112 = -_tmp108 + _tmp111;
  const Scalar _tmp113 = _tmp112 * _tmp48;
  const Scalar _tmp114 = _tmp108 + _tmp109 - _tmp110;
  const Scalar _tmp115 = _tmp112 * _tmp74;
  const Scalar _tmp116 = _tmp114 * _tmp76 - _tmp115 * _tmp78;
  const Scalar _tmp117 = _tmp108 + _tmp111;
  const Scalar _tmp118 = -_tmp113 * _tmp78 - _tmp116 * _tmp82 + _tmp117 * _tmp49;
  const Scalar _tmp119 = -_tmp114 * _tmp74 + _tmp115;
  const Scalar _tmp120 = -_tmp105 * _tmp118 + _tmp113 - _tmp117 * _tmp48 - _tmp119 * _tmp82;
  const Scalar _tmp121 = Scalar(1.0) / (_tmp120);
  const Scalar _tmp122 = _tmp121 * _tmp48;
  const Scalar _tmp123 = _tmp74 * _tmp80;
  const Scalar _tmp124 = _tmp121 * _tmp81;
  const Scalar _tmp125 = _tmp107 * _tmp124;
  const Scalar _tmp126 = _tmp107 * _tmp122 - _tmp123 * _tmp125;
  const Scalar _tmp127 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp128 = _tmp127 * _tmp64;
  const Scalar _tmp129 = _tmp77 * _tmp80;
  const Scalar _tmp130 = _tmp78 * _tmp80;
  const Scalar _tmp131 = _tmp112 * _tmp78;
  const Scalar _tmp132 = _tmp116 * _tmp80;
  const Scalar _tmp133 = _tmp131 + _tmp132 * _tmp78;
  const Scalar _tmp134 = -_tmp105 * _tmp133 - _tmp112 + _tmp119 * _tmp130;
  const Scalar _tmp135 = _tmp121 * _tmp83;
  const Scalar _tmp136 = _tmp129 * _tmp78 - _tmp134 * _tmp135 - _tmp65;
  const Scalar _tmp137 = _tmp120 * _tmp84;
  const Scalar _tmp138 = _tmp134 + _tmp136 * _tmp137;
  const Scalar _tmp139 = -_tmp124 * _tmp138 - _tmp78;
  const Scalar _tmp140 = _tmp122 * _tmp138 + _tmp123 * _tmp139 + Scalar(1.0);
  const Scalar _tmp141 = _tmp91 * _tmp95;
  const Scalar _tmp142 = _tmp64 * fh1;
  const Scalar _tmp143 = _tmp141 * _tmp142;
  const Scalar _tmp144 = _tmp105 * _tmp86;
  const Scalar _tmp145 = _tmp116 * _tmp144 - _tmp119 * _tmp86;
  const Scalar _tmp146 = -_tmp135 * _tmp145 - _tmp77 * _tmp86;
  const Scalar _tmp147 = _tmp137 * _tmp146 + _tmp145;
  const Scalar _tmp148 = -_tmp124 * _tmp147 + Scalar(1.0);
  const Scalar _tmp149 = _tmp122 * _tmp147 + _tmp123 * _tmp148;
  const Scalar _tmp150 = _tmp142 * _tmp97;
  const Scalar _tmp151 = (Scalar(1) / Scalar(2)) / _tmp1;
  const Scalar _tmp152 = _tmp0 * _tmp151;
  const Scalar _tmp153 = _tmp151 * ry;
  const Scalar _tmp154 = _tmp153 * rz;
  const Scalar _tmp155 = _tmp153 * rx;
  const Scalar _tmp156 = _tmp6 / (_tmp1 * std::sqrt(_tmp1));
  const Scalar _tmp157 = _tmp0 * _tmp156;
  const Scalar _tmp158 = _tmp156 * ry;
  const Scalar _tmp159 = _tmp158 * rx;
  const Scalar _tmp160 = _tmp158 * rz;
  const Scalar _tmp161 = _tmp11 - _tmp14 * _tmp154 + _tmp152 * _tmp24 + _tmp155 * _tmp5 -
                         _tmp157 * rot_init_w - _tmp159 * rot_init_z + _tmp160 * rot_init_x -
                         Scalar(1) / Scalar(2) * _tmp25;
  const Scalar _tmp162 = Scalar(0.83999999999999997) * _tmp161;
  const Scalar _tmp163 = _tmp162 * _tmp22;
  const Scalar _tmp164 = Scalar(0.021999999999999999) * _tmp161;
  const Scalar _tmp165 = -_tmp10 - _tmp14 * _tmp155 - _tmp152 * _tmp20 - _tmp154 * _tmp5 +
                         _tmp157 * rot_init_y + _tmp159 * rot_init_x + _tmp160 * rot_init_z -
                         Scalar(1) / Scalar(2) * _tmp21;
  const Scalar _tmp166 = Scalar(0.021999999999999999) * _tmp165;
  const Scalar _tmp167 = _tmp14 * _tmp152 + _tmp154 * _tmp24 - _tmp155 * _tmp20 -
                         _tmp157 * rot_init_x + _tmp159 * rot_init_y -
                         Scalar(1) / Scalar(2) * _tmp16 - _tmp160 * rot_init_w + _tmp8;
  const Scalar _tmp168 = Scalar(0.021999999999999999) * _tmp167;
  const Scalar _tmp169 = -_tmp15 - _tmp152 * _tmp5 + _tmp154 * _tmp20 + _tmp155 * _tmp24 +
                         _tmp157 * rot_init_z - _tmp159 * rot_init_w - _tmp160 * rot_init_y -
                         Scalar(1) / Scalar(2) * _tmp9;
  const Scalar _tmp170 = Scalar(0.021999999999999999) * _tmp169;
  const Scalar _tmp171 = -_tmp12 * _tmp170 - _tmp164 * _tmp26 - _tmp166 * _tmp22 - _tmp168 * _tmp17;
  const Scalar _tmp172 = _tmp163 + _tmp171;
  const Scalar _tmp173 = Scalar(0.41999999999999998) * _tmp161;
  const Scalar _tmp174 = _tmp17 * _tmp173;
  const Scalar _tmp175 = Scalar(0.41999999999999998) * _tmp169;
  const Scalar _tmp176 = _tmp175 * _tmp22;
  const Scalar _tmp177 = -_tmp174 - _tmp176;
  const Scalar _tmp178 = Scalar(0.83999999999999997) * _tmp167;
  const Scalar _tmp179 = _tmp12 * _tmp178;
  const Scalar _tmp180 = Scalar(0.41999999999999998) * _tmp167;
  const Scalar _tmp181 = _tmp180 * _tmp26;
  const Scalar _tmp182 = Scalar(0.41999999999999998) * _tmp165;
  const Scalar _tmp183 = _tmp12 * _tmp182;
  const Scalar _tmp184 = _tmp181 + _tmp183;
  const Scalar _tmp185 = _tmp179 + _tmp184;
  const Scalar _tmp186 = _tmp172 + _tmp177 + _tmp185;
  const Scalar _tmp187 = _tmp169 * _tmp17;
  const Scalar _tmp188 = Scalar(0.83999999999999997) * _tmp187;
  const Scalar _tmp189 = -_tmp181 - _tmp183;
  const Scalar _tmp190 = _tmp179 + _tmp189;
  const Scalar _tmp191 = -_tmp12 * _tmp164 + _tmp166 * _tmp17 - _tmp168 * _tmp22 + _tmp170 * _tmp26;
  const Scalar _tmp192 = _tmp177 + _tmp191;
  const Scalar _tmp193 = _tmp188 + _tmp190 + _tmp192;
  const Scalar _tmp194 = (Scalar(1) / Scalar(2)) * (2 * _tmp186 * _tmp91 + 2 * _tmp193 * _tmp93) /
                         (_tmp94 * std::sqrt(_tmp94));
  const Scalar _tmp195 = _tmp194 * _tmp91;
  const Scalar _tmp196 = _tmp194 * _tmp93;
  const Scalar _tmp197 = _tmp193 * _tmp95;
  const Scalar _tmp198 = fh1 * (-_tmp186 * _tmp96 + _tmp186 * _tmp97 + _tmp195 * _tmp92 -
                                _tmp196 * _tmp90 + _tmp197 * _tmp90 - _tmp197 * _tmp91);
  const Scalar _tmp199 = _tmp174 + _tmp176;
  const Scalar _tmp200 = _tmp172 + _tmp190 + _tmp199;
  const Scalar _tmp201 = -_tmp188;
  const Scalar _tmp202 = -_tmp179;
  const Scalar _tmp203 = _tmp189 + _tmp202;
  const Scalar _tmp204 = _tmp192 + _tmp201 + _tmp203;
  const Scalar _tmp205 = _tmp200 * _tmp55 + _tmp204 * _tmp52;
  const Scalar _tmp206 = _tmp205 * _tmp59 * _tmp63;
  const Scalar _tmp207 = _tmp206 * _tmp62;
  const Scalar _tmp208 = _tmp200 / _tmp56;
  const Scalar _tmp209 = _tmp208 * _tmp58;
  const Scalar _tmp210 = _tmp209 * _tmp62;
  const Scalar _tmp211 = _tmp184 + _tmp202;
  const Scalar _tmp212 = _tmp191 + _tmp199;
  const Scalar _tmp213 = _tmp201 + _tmp211 + _tmp212;
  const Scalar _tmp214 = -_tmp163 + _tmp171;
  const Scalar _tmp215 = _tmp199 + _tmp203 + _tmp214;
  const Scalar _tmp216 =
      (2 * _tmp213 * _tmp36 + 2 * _tmp215 * _tmp45) / (_tmp46 * std::sqrt(_tmp46));
  const Scalar _tmp217 = (Scalar(1) / Scalar(2)) * _tmp216;
  const Scalar _tmp218 = _tmp217 * _tmp45;
  const Scalar _tmp219 = _tmp215 * _tmp47;
  const Scalar _tmp220 = _tmp185 + _tmp188 + _tmp212;
  const Scalar _tmp221 = _tmp177 + _tmp211 + _tmp214;
  const Scalar _tmp222 =
      (2 * _tmp220 * _tmp71 + 2 * _tmp221 * _tmp68) / (_tmp72 * std::sqrt(_tmp72));
  const Scalar _tmp223 = (Scalar(1) / Scalar(2)) * _tmp222;
  const Scalar _tmp224 = _tmp223 * _tmp71;
  const Scalar _tmp225 = _tmp221 * _tmp73;
  const Scalar _tmp226 = _tmp208 * _tmp52;
  const Scalar _tmp227 = _tmp204 * _tmp63;
  const Scalar _tmp228 = _tmp223 * _tmp68;
  const Scalar _tmp229 = _tmp220 * _tmp73;
  const Scalar _tmp230 = (_tmp224 + _tmp225 * _tmp78 - _tmp226 * _tmp74 + _tmp227 * _tmp74 -
                          _tmp228 * _tmp78 - _tmp229) /
                         std::pow(_tmp79, Scalar(2));
  const Scalar _tmp231 = _tmp230 * _tmp81;
  const Scalar _tmp232 = _tmp213 * _tmp47;
  const Scalar _tmp233 = _tmp200 * _tmp59;
  const Scalar _tmp234 = _tmp205 / (_tmp57 * std::sqrt(_tmp57));
  const Scalar _tmp235 =
      _tmp64 * (_tmp204 * _tmp60 - _tmp204 * _tmp61 - _tmp233 * _tmp51 + _tmp233 * _tmp52 +
                _tmp234 * _tmp51 * _tmp55 - _tmp234 * _tmp52 * _tmp54);
  const Scalar _tmp236 = _tmp207 * _tmp74 - _tmp210 * _tmp74 + _tmp221 * _tmp75 - _tmp221 * _tmp76 +
                         _tmp224 * _tmp67 + _tmp225 * _tmp65 - _tmp228 * _tmp65 - _tmp228 * _tmp70 -
                         _tmp229 * _tmp67 + _tmp229 * _tmp68 + _tmp235 * _tmp74;
  const Scalar _tmp237 = _tmp217 * _tmp36;
  const Scalar _tmp238 = -_tmp218 * _tmp78 + _tmp219 * _tmp78 - _tmp226 * _tmp48 +
                         _tmp227 * _tmp48 - _tmp232 + _tmp237;
  const Scalar _tmp239 = _tmp238 * _tmp80;
  const Scalar _tmp240 = _tmp207 * _tmp48 - _tmp210 * _tmp48 - _tmp215 * _tmp49 - _tmp218 * _tmp35 -
                         _tmp218 * _tmp65 + _tmp219 * _tmp35 + _tmp219 * _tmp65 + _tmp231 * _tmp77 -
                         _tmp232 * _tmp44 + _tmp232 * _tmp45 + _tmp235 * _tmp48 - _tmp236 * _tmp82 +
                         _tmp237 * _tmp44 - _tmp239 * _tmp77;
  const Scalar _tmp241 = _tmp240 / std::pow(_tmp83, Scalar(2));
  const Scalar _tmp242 = _tmp241 * _tmp81 * _tmp86;
  const Scalar _tmp243 = _tmp238 * _tmp87;
  const Scalar _tmp244 = Scalar(0.5) * _tmp84;
  const Scalar _tmp245 = Scalar(1.0) * _tmp241;
  const Scalar _tmp246 = _tmp149 * _tmp97;
  const Scalar _tmp247 = _tmp206 * fh1;
  const Scalar _tmp248 = _tmp89 * _tmp98;
  const Scalar _tmp249 = _tmp228 * _tmp80;
  const Scalar _tmp250 = _tmp121 * _tmp238;
  const Scalar _tmp251 = _tmp178 * _tmp26;
  const Scalar _tmp252 = Scalar(0.83999999999999997) * _tmp12 * _tmp165;
  const Scalar _tmp253 = Scalar(1.6799999999999999) * _tmp12 * _tmp167 + _tmp162 * _tmp17 +
                         Scalar(0.83999999999999997) * _tmp169 * _tmp22;
  const Scalar _tmp254 = _tmp104 *
                         (Scalar(1.6799999999999999) * _tmp187 + _tmp251 + _tmp252 + _tmp253) /
                         std::pow(_tmp102, Scalar(2));
  const Scalar _tmp255 = _tmp173 * _tmp26;
  const Scalar _tmp256 = -_tmp255;
  const Scalar _tmp257 = _tmp182 * _tmp22;
  const Scalar _tmp258 = -_tmp257;
  const Scalar _tmp259 = _tmp17 * _tmp180;
  const Scalar _tmp260 = _tmp12 * _tmp175;
  const Scalar _tmp261 = _tmp161 * _tmp22;
  const Scalar _tmp262 = Scalar(0.043999999999999997) * _tmp261;
  const Scalar _tmp263 = Scalar(0.043999999999999997) * _tmp187;
  const Scalar _tmp264 = _tmp262 + _tmp263;
  const Scalar _tmp265 = _tmp256 + _tmp258 + _tmp259 + _tmp260 + _tmp264;
  const Scalar _tmp266 = _tmp175 * _tmp26;
  const Scalar _tmp267 = _tmp17 * _tmp182;
  const Scalar _tmp268 = _tmp180 * _tmp22;
  const Scalar _tmp269 = _tmp12 * _tmp173;
  const Scalar _tmp270 = _tmp266 + _tmp267 + _tmp268 + _tmp269;
  const Scalar _tmp271 = _tmp265 + _tmp270;
  const Scalar _tmp272 = _tmp255 + _tmp257 - _tmp259 - _tmp260 + _tmp264 + _tmp270;
  const Scalar _tmp273 = _tmp272 * _tmp48;
  const Scalar _tmp274 = _tmp112 * _tmp219;
  const Scalar _tmp275 = _tmp112 * _tmp225;
  const Scalar _tmp276 = -_tmp266 - _tmp267 - _tmp268 - _tmp269;
  const Scalar _tmp277 = _tmp265 + _tmp276;
  const Scalar _tmp278 = _tmp272 * _tmp74;
  const Scalar _tmp279 = -_tmp112 * _tmp228 - _tmp114 * _tmp225 + _tmp114 * _tmp228 + _tmp275 -
                         _tmp277 * _tmp74 + _tmp278;
  const Scalar _tmp280 = _tmp112 * _tmp227;
  const Scalar _tmp281 = -_tmp114 * _tmp224 + _tmp114 * _tmp229 + _tmp115 * _tmp226 +
                         _tmp131 * _tmp228 - _tmp275 * _tmp78 + _tmp277 * _tmp76 -
                         _tmp278 * _tmp78 - _tmp280 * _tmp74;
  const Scalar _tmp282 =
      _tmp103 * (-_tmp251 - _tmp252 + _tmp253 + Scalar(1.6799999999999999) * _tmp261);
  const Scalar _tmp283 =
      -_tmp105 * (_tmp113 * _tmp226 + _tmp116 * _tmp231 - _tmp116 * _tmp239 + _tmp117 * _tmp232 -
                  _tmp117 * _tmp237 + _tmp131 * _tmp218 + _tmp271 * _tmp49 - _tmp273 * _tmp78 -
                  _tmp274 * _tmp78 - _tmp280 * _tmp48 - _tmp281 * _tmp82) -
      _tmp112 * _tmp218 + _tmp117 * _tmp218 - _tmp117 * _tmp219 + _tmp118 * _tmp254 -
      _tmp118 * _tmp282 + _tmp119 * _tmp231 - _tmp119 * _tmp239 - _tmp271 * _tmp48 + _tmp273 +
      _tmp274 - _tmp279 * _tmp82;
  const Scalar _tmp284 = _tmp283 / std::pow(_tmp120, Scalar(2));
  const Scalar _tmp285 = _tmp284 * _tmp81;
  const Scalar _tmp286 = _tmp283 * _tmp84;
  const Scalar _tmp287 = _tmp120 * _tmp241;
  const Scalar _tmp288 = Scalar(1.0) * _tmp230;
  const Scalar _tmp289 = _tmp121 * _tmp240;
  const Scalar _tmp290 = _tmp284 * _tmp83;
  const Scalar _tmp291 = _tmp116 * _tmp86;
  const Scalar _tmp292 = -_tmp105 * _tmp116 * _tmp288 + _tmp119 * _tmp288 + _tmp144 * _tmp281 -
                         _tmp254 * _tmp291 - _tmp279 * _tmp86 + _tmp282 * _tmp291;
  const Scalar _tmp293 = _tmp137 * (-_tmp135 * _tmp292 - _tmp145 * _tmp289 + _tmp145 * _tmp290 -
                                    _tmp236 * _tmp86 + _tmp288 * _tmp77) +
                         _tmp146 * _tmp286 - _tmp146 * _tmp287 + _tmp292;
  const Scalar _tmp294 = -_tmp124 * _tmp293 - _tmp147 * _tmp250 + _tmp147 * _tmp285;
  const Scalar _tmp295 = _tmp121 * _tmp218;
  const Scalar _tmp296 = _tmp225 * _tmp80;
  const Scalar _tmp297 = _tmp230 * _tmp74;
  const Scalar _tmp298 = _tmp284 * _tmp48;
  const Scalar _tmp299 = _tmp121 * _tmp219;
  const Scalar _tmp300 = _tmp140 * _tmp141;
  const Scalar _tmp301 = _tmp126 * _tmp127;
  const Scalar _tmp302 = _tmp209 * fh1;
  const Scalar _tmp303 = _tmp142 * _tmp149;
  const Scalar _tmp304 = _tmp107 * _tmp121;
  const Scalar _tmp305 = _tmp186 * _tmp95;
  const Scalar _tmp306 = _tmp140 * _tmp142;
  const Scalar _tmp307 = _tmp230 * _tmp78;
  const Scalar _tmp308 = _tmp119 * _tmp80;
  const Scalar _tmp309 =
      -_tmp105 * (-_tmp112 * _tmp226 - _tmp116 * _tmp307 + _tmp130 * _tmp281 - _tmp132 * _tmp226 +
                  _tmp132 * _tmp227 + _tmp272 * _tmp78 + _tmp280) -
      _tmp119 * _tmp307 + _tmp130 * _tmp279 + _tmp133 * _tmp254 - _tmp133 * _tmp282 -
      _tmp226 * _tmp308 + _tmp227 * _tmp308 + _tmp256 + _tmp258 + _tmp259 + _tmp260 - _tmp262 -
      _tmp263 + _tmp276;
  const Scalar _tmp310 = _tmp136 * _tmp286 - _tmp136 * _tmp287 +
                         _tmp137 * (-_tmp129 * _tmp226 + _tmp129 * _tmp227 + _tmp130 * _tmp236 -
                                    _tmp134 * _tmp289 + _tmp134 * _tmp290 - _tmp135 * _tmp309 -
                                    _tmp207 + _tmp210 - _tmp235 - _tmp307 * _tmp77) +
                         _tmp309;
  const Scalar _tmp311 =
      -_tmp124 * _tmp310 - _tmp138 * _tmp250 + _tmp138 * _tmp285 + _tmp226 - _tmp227;
  const Scalar _tmp312 = _tmp107 * _tmp127;
  const Scalar _tmp313 = _tmp124 * _tmp312;
  const Scalar _tmp314 = _tmp80 * fh1;
  const Scalar _tmp315 = _tmp148 * _tmp314;
  const Scalar _tmp316 = _tmp141 * _tmp314;
  const Scalar _tmp317 = _tmp85 * _tmp98;
  const Scalar _tmp318 = _tmp139 * _tmp314;
  const Scalar _tmp319 = _tmp121 * _tmp312;
  const Scalar _tmp320 = _tmp230 * fh1;
  const Scalar _tmp321 = _tmp284 * _tmp312;
  const Scalar _tmp322 = _tmp121 * fh1;
  const Scalar _tmp323 = _tmp141 * _tmp322;
  const Scalar _tmp324 = _tmp147 * _tmp322;
  const Scalar _tmp325 = _tmp138 * _tmp322;
  const Scalar _tmp326 = _tmp284 * fh1;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -(-_tmp128 * (_tmp107 * _tmp284 * _tmp74 * _tmp82 - _tmp107 * _tmp298 + _tmp107 * _tmp299 +
                    _tmp125 * _tmp249 - _tmp125 * _tmp296 + _tmp125 * _tmp297 - _tmp218 * _tmp304 -
                    _tmp239 * _tmp304 * _tmp74) -
        _tmp143 * (_tmp122 * _tmp310 + _tmp123 * _tmp311 - _tmp138 * _tmp295 - _tmp138 * _tmp298 +
                   _tmp138 * _tmp299 - _tmp139 * _tmp249 + _tmp139 * _tmp296 - _tmp139 * _tmp297) -
        _tmp150 * (_tmp122 * _tmp293 + _tmp123 * _tmp294 - _tmp147 * _tmp295 - _tmp147 * _tmp298 +
                   _tmp147 * _tmp299 - _tmp148 * _tmp249 + _tmp148 * _tmp296 - _tmp148 * _tmp297) +
        _tmp195 * _tmp306 + _tmp196 * _tmp303 - _tmp197 * _tmp303 - _tmp198 * _tmp64 * _tmp89 -
        _tmp206 * _tmp248 - _tmp206 * _tmp301 + _tmp209 * _tmp248 + _tmp209 * _tmp301 -
        _tmp246 * _tmp247 + _tmp246 * _tmp302 - _tmp247 * _tmp300 + _tmp300 * _tmp302 -
        _tmp305 * _tmp306 -
        _tmp99 *
            (-_tmp216 * _tmp244 * _tmp45 + _tmp219 * _tmp85 + _tmp222 * _tmp244 * _tmp68 * _tmp82 -
             _tmp225 * _tmp88 + _tmp231 * _tmp74 * _tmp85 + _tmp242 * _tmp74 - _tmp243 * _tmp74 -
             _tmp245 * _tmp48)) *
      std::exp(_tmp126 * _tmp128 + _tmp140 * _tmp143 + _tmp149 * _tmp150 + _tmp89 * _tmp99);
  _res(2, 0) =
      -(-_tmp139 * _tmp141 * _tmp320 - _tmp148 * _tmp320 * _tmp97 - _tmp195 * _tmp318 -
        _tmp196 * _tmp315 + _tmp197 * _tmp315 - _tmp198 * _tmp88 + _tmp230 * _tmp313 +
        _tmp231 * _tmp317 - _tmp239 * _tmp319 + _tmp242 * _tmp98 - _tmp243 * _tmp98 +
        _tmp294 * _tmp314 * _tmp97 + _tmp305 * _tmp318 + _tmp311 * _tmp316 + _tmp321 * _tmp82) *
      std::exp(-_tmp139 * _tmp316 + _tmp313 * _tmp80 - _tmp315 * _tmp97 + _tmp88 * _tmp98);
  _res(3, 0) = -(-_tmp138 * _tmp141 * _tmp326 - _tmp147 * _tmp326 * _tmp97 - _tmp195 * _tmp325 -
                 _tmp196 * _tmp324 + _tmp197 * _tmp324 + _tmp198 * _tmp85 - _tmp245 * _tmp98 +
                 _tmp293 * _tmp322 * _tmp97 + _tmp305 * _tmp325 + _tmp310 * _tmp323 - _tmp321) *
               std::exp(-_tmp138 * _tmp323 - _tmp317 - _tmp319 - _tmp324 * _tmp97);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
