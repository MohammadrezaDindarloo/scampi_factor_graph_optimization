// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: FK_residual_func_cost3_wrt_ty
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     tx: Scalar
 *     ty: Scalar
 *     tz: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     lc0: Scalar
 *     lc1: Scalar
 *     lc2: Scalar
 *     lc3: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> FkResidualFuncCost3WrtTy(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar tx, const Scalar ty, const Scalar tz, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w, const Scalar lc0,
    const Scalar lc1, const Scalar lc2, const Scalar lc3, const Scalar epsilon) {
  // Total ops: 630

  // Unused inputs
  (void)tz;
  (void)lc0;
  (void)lc1;
  (void)lc2;
  (void)lc3;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (199)
  const Scalar _tmp0 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp1 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp2 = std::cos(_tmp1);
  const Scalar _tmp3 = std::sin(_tmp1) / _tmp0;
  const Scalar _tmp4 = _tmp3 * ry;
  const Scalar _tmp5 = _tmp3 * rot_init_y;
  const Scalar _tmp6 = _tmp3 * rz;
  const Scalar _tmp7 = _tmp2 * rot_init_z + _tmp4 * rot_init_x - _tmp5 * rx + _tmp6 * rot_init_w;
  const Scalar _tmp8 = _tmp3 * rx;
  const Scalar _tmp9 =
      _tmp2 * rot_init_y + _tmp4 * rot_init_w - _tmp6 * rot_init_x + _tmp8 * rot_init_z;
  const Scalar _tmp10 = 2 * _tmp9;
  const Scalar _tmp11 = _tmp10 * _tmp7;
  const Scalar _tmp12 =
      _tmp2 * rot_init_w - _tmp4 * rot_init_y - _tmp6 * rot_init_z - _tmp8 * rot_init_x;
  const Scalar _tmp13 = _tmp2 * rot_init_x - _tmp4 * rot_init_z + _tmp5 * rz + _tmp8 * rot_init_w;
  const Scalar _tmp14 = 2 * _tmp13;
  const Scalar _tmp15 = _tmp12 * _tmp14;
  const Scalar _tmp16 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp15;
  const Scalar _tmp17 = -2 * std::pow(_tmp13, Scalar(2));
  const Scalar _tmp18 = 1 - 2 * std::pow(_tmp9, Scalar(2));
  const Scalar _tmp19 =
      -Scalar(0.010999999999999999) * _tmp17 - Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = _tmp14 * _tmp7;
  const Scalar _tmp21 = _tmp10 * _tmp12;
  const Scalar _tmp22 = Scalar(0.20999999999999999) * _tmp20 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp23 = _tmp19 + _tmp22;
  const Scalar _tmp24 = -_tmp16 + _tmp23;
  const Scalar _tmp25 = -2 * std::pow(_tmp7, Scalar(2));
  const Scalar _tmp26 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp25;
  const Scalar _tmp27 = -_tmp26;
  const Scalar _tmp28 = _tmp10 * _tmp13;
  const Scalar _tmp29 = 2 * _tmp12 * _tmp7;
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp28 - Scalar(0.20999999999999999) * _tmp29;
  const Scalar _tmp31 =
      -Scalar(0.010999999999999999) * _tmp20 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp32 = _tmp30 + _tmp31;
  const Scalar _tmp33 = _tmp27 + _tmp32;
  const Scalar _tmp34 = _tmp33 + tx + Scalar(1.79662371);
  const Scalar _tmp35 = Scalar(0.20999999999999999) * _tmp28 + Scalar(0.20999999999999999) * _tmp29;
  const Scalar _tmp36 = -_tmp35;
  const Scalar _tmp37 =
      -Scalar(0.010999999999999999) * _tmp11 + Scalar(0.010999999999999999) * _tmp15;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp17 +
                        Scalar(0.20999999999999999) * _tmp25 + Scalar(0.20999999999999999);
  const Scalar _tmp39 = _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp36 + _tmp39;
  const Scalar _tmp41 = _tmp40 + ty + Scalar(-4.8333311099999996);
  const Scalar _tmp42 = std::pow(_tmp41, Scalar(2));
  const Scalar _tmp43 = std::pow(_tmp34, Scalar(2)) + _tmp42;
  const Scalar _tmp44 = std::pow(_tmp43, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp34 * _tmp44;
  const Scalar _tmp46 = _tmp24 * _tmp45;
  const Scalar _tmp47 = _tmp16 + _tmp19 - _tmp22;
  const Scalar _tmp48 = _tmp44 * _tmp47;
  const Scalar _tmp49 = _tmp35 + _tmp39;
  const Scalar _tmp50 = _tmp49 + ty + Scalar(-4.7752063900000001);
  const Scalar _tmp51 = _tmp16 + _tmp23;
  const Scalar _tmp52 = _tmp26 + _tmp32;
  const Scalar _tmp53 = _tmp52 + tx + Scalar(-2.71799795);
  const Scalar _tmp54 = std::pow(_tmp50, Scalar(2));
  const Scalar _tmp55 = std::pow(_tmp53, Scalar(2)) + _tmp54;
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp51 * _tmp56;
  const Scalar _tmp58 = _tmp53 * _tmp56;
  const Scalar _tmp59 = _tmp37 - _tmp38;
  const Scalar _tmp60 = _tmp35 + _tmp59;
  const Scalar _tmp61 = _tmp60 + ty + Scalar(8.3888750099999996);
  const Scalar _tmp62 = -_tmp30 + _tmp31;
  const Scalar _tmp63 = _tmp26 + _tmp62;
  const Scalar _tmp64 = _tmp63 + tx + Scalar(-2.5202214700000001);
  const Scalar _tmp65 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp66 = _tmp61 * _tmp65;
  const Scalar _tmp67 = _tmp24 * _tmp66;
  const Scalar _tmp68 = _tmp50 * _tmp57 - _tmp58 * _tmp67;
  const Scalar _tmp69 = -_tmp50 * _tmp56 + _tmp58 * _tmp66;
  const Scalar _tmp70 = Scalar(1.0) / (_tmp69);
  const Scalar _tmp71 = -_tmp41 * _tmp44 + _tmp45 * _tmp66;
  const Scalar _tmp72 = _tmp70 * _tmp71;
  const Scalar _tmp73 = Scalar(1.0) * _tmp63;
  const Scalar _tmp74 = Scalar(1.0) * _tmp60;
  const Scalar _tmp75 = (-_tmp52 + _tmp73) / (_tmp49 - _tmp74);
  const Scalar _tmp76 = _tmp24 * _tmp58 - _tmp53 * _tmp57;
  const Scalar _tmp77 = _tmp70 * _tmp76;
  const Scalar _tmp78 = -_tmp34 * _tmp48 + _tmp46 - _tmp71 * _tmp77 -
                        _tmp75 * (_tmp41 * _tmp48 - _tmp46 * _tmp66 - _tmp68 * _tmp72);
  const Scalar _tmp79 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp80 = std::pow(_tmp61, Scalar(2));
  const Scalar _tmp81 = std::pow(_tmp64, Scalar(2)) + _tmp80;
  const Scalar _tmp82 = std::sqrt(_tmp81);
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = _tmp60 * _tmp64;
  const Scalar _tmp85 = _tmp63 * _tmp83;
  const Scalar _tmp86 = _tmp61 * _tmp85 - _tmp83 * _tmp84;
  const Scalar _tmp87 = _tmp65 * _tmp82;
  const Scalar _tmp88 = _tmp86 * _tmp87;
  const Scalar _tmp89 = _tmp52 * _tmp56;
  const Scalar _tmp90 = _tmp49 * _tmp58 - _tmp50 * _tmp89 + _tmp58 * _tmp88;
  const Scalar _tmp91 = _tmp66 * _tmp70;
  const Scalar _tmp92 = -_tmp24 + _tmp66 * _tmp77 - _tmp75 * (_tmp67 + _tmp68 * _tmp91);
  const Scalar _tmp93 = _tmp33 * _tmp44;
  const Scalar _tmp94 = _tmp40 * _tmp45 - _tmp41 * _tmp93 + _tmp45 * _tmp88 - _tmp72 * _tmp90;
  const Scalar _tmp95 = _tmp79 * _tmp94;
  const Scalar _tmp96 = -_tmp88 + _tmp90 * _tmp91 - _tmp92 * _tmp95;
  const Scalar _tmp97 = Scalar(1.0) / (_tmp94);
  const Scalar _tmp98 = _tmp78 * _tmp97;
  const Scalar _tmp99 = _tmp92 + _tmp96 * _tmp98;
  const Scalar _tmp100 = _tmp79 * _tmp99;
  const Scalar _tmp101 = -_tmp100 * _tmp71 - _tmp66;
  const Scalar _tmp102 = _tmp58 * _tmp70;
  const Scalar _tmp103 = _tmp100 * _tmp45 + _tmp101 * _tmp102 + Scalar(1.0);
  const Scalar _tmp104 = _tmp27 + _tmp62;
  const Scalar _tmp105 = _tmp104 + tx + Scalar(1.9874742000000001);
  const Scalar _tmp106 = _tmp36 + _tmp59;
  const Scalar _tmp107 = _tmp106 + ty + Scalar(8.3196563700000006);
  const Scalar _tmp108 = std::pow(_tmp107, Scalar(2));
  const Scalar _tmp109 = std::pow(_tmp105, Scalar(2)) + _tmp108;
  const Scalar _tmp110 = std::pow(_tmp109, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp111 = _tmp110 * fh1;
  const Scalar _tmp112 = _tmp105 * _tmp111;
  const Scalar _tmp113 = _tmp112 * _tmp87;
  const Scalar _tmp114 = Scalar(1.0) * _tmp97;
  const Scalar _tmp115 = Scalar(1.0) * _tmp70;
  const Scalar _tmp116 = _tmp115 * _tmp97;
  const Scalar _tmp117 = _tmp116 * _tmp71;
  const Scalar _tmp118 = _tmp114 * _tmp45 - _tmp117 * _tmp58;
  const Scalar _tmp119 = _tmp104 * _tmp110;
  const Scalar _tmp120 = _tmp105 * _tmp106;
  const Scalar _tmp121 = fh1 * (_tmp107 * _tmp119 - _tmp110 * _tmp120);
  const Scalar _tmp122 = _tmp121 * _tmp87;
  const Scalar _tmp123 = _tmp115 * _tmp75;
  const Scalar _tmp124 = -_tmp115 * _tmp76 + _tmp123 * _tmp68;
  const Scalar _tmp125 = -_tmp115 * _tmp90 - _tmp124 * _tmp95;
  const Scalar _tmp126 = _tmp125 * _tmp97;
  const Scalar _tmp127 = _tmp124 + _tmp126 * _tmp78;
  const Scalar _tmp128 = _tmp127 * _tmp79;
  const Scalar _tmp129 = _tmp71 * _tmp79;
  const Scalar _tmp130 = -_tmp127 * _tmp129 + Scalar(1.0);
  const Scalar _tmp131 = _tmp102 * _tmp130 + _tmp128 * _tmp45;
  const Scalar _tmp132 = _tmp131 * _tmp87;
  const Scalar _tmp133 = _tmp111 * _tmp132;
  const Scalar _tmp134 = _tmp73 + _tmp74 * _tmp75;
  const Scalar _tmp135 = 0;
  const Scalar _tmp136 = _tmp45 * _tmp79;
  const Scalar _tmp137 = _tmp129 * _tmp135;
  const Scalar _tmp138 = -_tmp102 * _tmp137 + _tmp135 * _tmp136;
  const Scalar _tmp139 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp140 = _tmp139 * _tmp87;
  const Scalar _tmp141 = _tmp66 * _tmp83;
  const Scalar _tmp142 = std::pow(_tmp109, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp143 = _tmp107 * _tmp142;
  const Scalar _tmp144 = _tmp108 * _tmp142;
  const Scalar _tmp145 = fh1 * (-_tmp104 * _tmp144 + _tmp119 + _tmp120 * _tmp143);
  const Scalar _tmp146 = _tmp144 * fh1;
  const Scalar _tmp147 = _tmp141 * _tmp86;
  const Scalar _tmp148 = std::pow(_tmp55, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp149 = _tmp148 * _tmp50 * _tmp53;
  const Scalar _tmp150 = std::pow(_tmp81, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp151 = _tmp87 * (_tmp150 * _tmp61 * _tmp84 - _tmp150 * _tmp63 * _tmp80 + _tmp85);
  const Scalar _tmp152 = _tmp148 * _tmp54;
  const Scalar _tmp153 = _tmp147 * _tmp58 - _tmp149 * _tmp49 - _tmp149 * _tmp88 + _tmp151 * _tmp58 +
                         _tmp152 * _tmp52 - _tmp89;
  const Scalar _tmp154 = std::pow(_tmp43, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp155 = _tmp154 * _tmp34 * _tmp41;
  const Scalar _tmp156 = _tmp154 * _tmp42;
  const Scalar _tmp157 = -_tmp155 * _tmp66 + _tmp156 - _tmp44 + _tmp45 * _tmp65;
  const Scalar _tmp158 = _tmp157 * _tmp70;
  const Scalar _tmp159 =
      (-_tmp149 * _tmp66 + _tmp152 - _tmp56 + _tmp58 * _tmp65) / std::pow(_tmp69, Scalar(2));
  const Scalar _tmp160 = _tmp159 * _tmp71;
  const Scalar _tmp161 = _tmp147 * _tmp45 + _tmp151 * _tmp45 - _tmp153 * _tmp72 - _tmp155 * _tmp40 -
                         _tmp155 * _tmp88 + _tmp156 * _tmp33 - _tmp158 * _tmp90 + _tmp160 * _tmp90 -
                         _tmp93;
  const Scalar _tmp162 = _tmp161 / std::pow(_tmp94, Scalar(2));
  const Scalar _tmp163 = _tmp115 * _tmp162 * _tmp71;
  const Scalar _tmp164 = _tmp116 * _tmp157;
  const Scalar _tmp165 = Scalar(1.0) * _tmp162;
  const Scalar _tmp166 = _tmp159 * _tmp58;
  const Scalar _tmp167 = -_tmp149 * _tmp24 + _tmp149 * _tmp51;
  const Scalar _tmp168 = _tmp159 * _tmp76;
  const Scalar _tmp169 = _tmp24 * _tmp65;
  const Scalar _tmp170 = _tmp149 * _tmp67 - _tmp152 * _tmp51 - _tmp169 * _tmp58 + _tmp57;
  const Scalar _tmp171 = -_tmp155 * _tmp24 + _tmp155 * _tmp47 - _tmp157 * _tmp77 -
                         _tmp167 * _tmp72 + _tmp168 * _tmp71 -
                         _tmp75 * (_tmp155 * _tmp67 - _tmp156 * _tmp47 - _tmp158 * _tmp68 +
                                   _tmp160 * _tmp68 - _tmp169 * _tmp45 - _tmp170 * _tmp72 + _tmp48);
  const Scalar _tmp172 = _tmp171 / std::pow(_tmp78, Scalar(2));
  const Scalar _tmp173 = _tmp172 * _tmp45;
  const Scalar _tmp174 = _tmp135 * _tmp79;
  const Scalar _tmp175 = _tmp159 * _tmp90;
  const Scalar _tmp176 = _tmp172 * _tmp94;
  const Scalar _tmp177 = _tmp159 * _tmp68;
  const Scalar _tmp178 = -_tmp115 * _tmp167 + _tmp123 * _tmp170 + Scalar(1.0) * _tmp168 -
                         Scalar(1.0) * _tmp177 * _tmp75;
  const Scalar _tmp179 = _tmp161 * _tmp79;
  const Scalar _tmp180 = _tmp162 * _tmp78;
  const Scalar _tmp181 = -_tmp125 * _tmp180 + _tmp126 * _tmp171 + _tmp178 +
                         _tmp98 * (-_tmp115 * _tmp153 + _tmp124 * _tmp176 - _tmp124 * _tmp179 +
                                   Scalar(1.0) * _tmp175 - _tmp178 * _tmp95);
  const Scalar _tmp182 = _tmp172 * _tmp71;
  const Scalar _tmp183 = _tmp127 * _tmp182 - _tmp128 * _tmp157 - _tmp129 * _tmp181;
  const Scalar _tmp184 = _tmp130 * _tmp70;
  const Scalar _tmp185 = _tmp107 * _tmp111;
  const Scalar _tmp186 = _tmp105 * _tmp143 * fh1;
  const Scalar _tmp187 = _tmp65 * _tmp70;
  const Scalar _tmp188 =
      _tmp167 * _tmp91 - _tmp168 * _tmp66 + _tmp187 * _tmp76 -
      _tmp75 * (_tmp169 + _tmp170 * _tmp91 - _tmp177 * _tmp66 + _tmp187 * _tmp68);
  const Scalar _tmp189 =
      _tmp171 * _tmp96 * _tmp97 - _tmp180 * _tmp96 + _tmp188 +
      _tmp98 * (-_tmp147 - _tmp151 + _tmp153 * _tmp91 - _tmp175 * _tmp66 + _tmp176 * _tmp92 -
                _tmp179 * _tmp92 + _tmp187 * _tmp90 - _tmp188 * _tmp95);
  const Scalar _tmp190 = _tmp101 * _tmp70;
  const Scalar _tmp191 = -_tmp100 * _tmp157 - _tmp129 * _tmp189 + _tmp182 * _tmp99 - _tmp65;
  const Scalar _tmp192 = _tmp111 * _tmp184;
  const Scalar _tmp193 = _tmp135 * _tmp139;
  const Scalar _tmp194 = _tmp129 * _tmp193;
  const Scalar _tmp195 = _tmp193 * _tmp79;
  const Scalar _tmp196 = _tmp172 * _tmp193;
  const Scalar _tmp197 = _tmp114 * _tmp121;
  const Scalar _tmp198 = _tmp111 * _tmp128;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -(-_tmp103 * _tmp112 * _tmp141 + _tmp103 * _tmp186 * _tmp87 -
        _tmp113 * (-_tmp100 * _tmp155 - _tmp101 * _tmp166 + _tmp102 * _tmp191 + _tmp136 * _tmp189 -
                   _tmp149 * _tmp190 - _tmp173 * _tmp99) -
        _tmp118 * _tmp121 * _tmp141 - _tmp118 * _tmp145 * _tmp87 -
        _tmp122 * (-_tmp114 * _tmp155 + _tmp114 * _tmp160 * _tmp58 + _tmp117 * _tmp149 +
                   _tmp163 * _tmp58 - _tmp164 * _tmp58 - _tmp165 * _tmp45) -
        _tmp131 * _tmp141 * _tmp185 + _tmp132 * _tmp146 - _tmp133 - _tmp138 * _tmp139 * _tmp141 -
        _tmp140 *
            (_tmp135 * _tmp172 * _tmp58 * _tmp72 - _tmp135 * _tmp173 + _tmp137 * _tmp149 * _tmp70 +
             _tmp137 * _tmp166 - _tmp155 * _tmp174 - _tmp158 * _tmp174 * _tmp58) -
        _tmp185 * _tmp87 *
            (_tmp102 * _tmp183 - _tmp127 * _tmp173 - _tmp128 * _tmp155 - _tmp130 * _tmp166 +
             _tmp136 * _tmp181 - _tmp149 * _tmp184)) *
      std::exp(_tmp103 * _tmp113 + _tmp107 * _tmp133 + _tmp118 * _tmp122 + _tmp138 * _tmp140);
  _res(2, 0) =
      -(-_tmp101 * _tmp112 * _tmp159 + _tmp112 * _tmp191 * _tmp70 - _tmp117 * _tmp145 +
        _tmp121 * _tmp163 - _tmp121 * _tmp164 - _tmp130 * _tmp159 * _tmp185 - _tmp146 * _tmp184 -
        _tmp158 * _tmp195 + _tmp159 * _tmp194 + _tmp160 * _tmp197 + _tmp183 * _tmp185 * _tmp70 -
        _tmp186 * _tmp190 + _tmp192 + _tmp196 * _tmp72) *
      std::exp(-_tmp107 * _tmp192 - _tmp112 * _tmp190 + _tmp117 * _tmp121 + _tmp194 * _tmp70);
  _res(3, 0) = -(-_tmp100 * _tmp186 - _tmp112 * _tmp172 * _tmp99 + _tmp112 * _tmp189 * _tmp79 +
                 _tmp114 * _tmp145 - _tmp121 * _tmp165 - _tmp127 * _tmp172 * _tmp185 -
                 _tmp128 * _tmp146 + _tmp181 * _tmp185 * _tmp79 - _tmp196 + _tmp198) *
               std::exp(-_tmp100 * _tmp112 - _tmp107 * _tmp198 - _tmp195 - _tmp197);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
