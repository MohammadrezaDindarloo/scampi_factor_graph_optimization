// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl20
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl20(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 313

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (117)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp2 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp3 = std::cos(_tmp2);
  const Scalar _tmp4 = std::sin(_tmp2) / _tmp1;
  const Scalar _tmp5 = _tmp4 * rot_init_x;
  const Scalar _tmp6 = _tmp4 * rx;
  const Scalar _tmp7 = _tmp4 * rz;
  const Scalar _tmp8 = _tmp3 * rot_init_z + _tmp5 * ry - _tmp6 * rot_init_y + _tmp7 * rot_init_w;
  const Scalar _tmp9 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp10 = _tmp4 * ry;
  const Scalar _tmp11 = _tmp10 * rot_init_w + _tmp3 * rot_init_y - _tmp5 * rz + _tmp6 * rot_init_z;
  const Scalar _tmp12 = 1 - 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = Scalar(0.20999999999999999) * _tmp12 + Scalar(0.20999999999999999) * _tmp9;
  const Scalar _tmp14 =
      -_tmp10 * rot_init_z + _tmp3 * rot_init_x + _tmp6 * rot_init_w + _tmp7 * rot_init_y;
  const Scalar _tmp15 = 2 * _tmp8;
  const Scalar _tmp16 = _tmp14 * _tmp15;
  const Scalar _tmp17 = -_tmp10 * rot_init_y + _tmp3 * rot_init_w - _tmp5 * rx - _tmp7 * rot_init_z;
  const Scalar _tmp18 = 2 * _tmp11 * _tmp17;
  const Scalar _tmp19 =
      -Scalar(0.010999999999999999) * _tmp16 - Scalar(0.010999999999999999) * _tmp18;
  const Scalar _tmp20 = 2 * _tmp14;
  const Scalar _tmp21 = _tmp11 * _tmp20;
  const Scalar _tmp22 = _tmp15 * _tmp17;
  const Scalar _tmp23 = Scalar(0.20999999999999999) * _tmp21 - Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp24 = _tmp19 - _tmp23;
  const Scalar _tmp25 = _tmp13 + _tmp24;
  const Scalar _tmp26 = _tmp25 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp27 = Scalar(1.0) / (_tmp26);
  const Scalar _tmp28 = Scalar(0.20999999999999999) * _tmp21 + Scalar(0.20999999999999999) * _tmp22;
  const Scalar _tmp29 = -2 * std::pow(_tmp14, Scalar(2));
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp31 = _tmp11 * _tmp15;
  const Scalar _tmp32 = _tmp17 * _tmp20;
  const Scalar _tmp33 =
      -Scalar(0.010999999999999999) * _tmp31 + Scalar(0.010999999999999999) * _tmp32;
  const Scalar _tmp34 = -_tmp30 + _tmp33;
  const Scalar _tmp35 = _tmp28 + _tmp34;
  const Scalar _tmp36 = _tmp35 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp37 = _tmp27 * _tmp36;
  const Scalar _tmp38 = _tmp30 + _tmp33;
  const Scalar _tmp39 = _tmp28 + _tmp38;
  const Scalar _tmp40 = _tmp39 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp41 = _tmp19 + _tmp23;
  const Scalar _tmp42 = _tmp13 + _tmp41;
  const Scalar _tmp43 = _tmp42 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp44 = std::pow(Scalar(std::pow(_tmp40, Scalar(2)) + std::pow(_tmp43, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp45 = _tmp43 * _tmp44;
  const Scalar _tmp46 = _tmp40 * _tmp44;
  const Scalar _tmp47 = _tmp37 * _tmp45 - _tmp46;
  const Scalar _tmp48 = -_tmp28;
  const Scalar _tmp49 = _tmp34 + _tmp48;
  const Scalar _tmp50 = _tmp49 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp51 = -_tmp13;
  const Scalar _tmp52 = _tmp24 + _tmp51;
  const Scalar _tmp53 = _tmp52 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp54 = std::pow(Scalar(std::pow(_tmp50, Scalar(2)) + std::pow(_tmp53, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp55 = _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp50 * _tmp54;
  const Scalar _tmp57 = Scalar(1.0) / (_tmp37 * _tmp55 - _tmp56);
  const Scalar _tmp58 = Scalar(0.20999999999999999) * _tmp16 - Scalar(0.20999999999999999) * _tmp18;
  const Scalar _tmp59 =
      -Scalar(0.010999999999999999) * _tmp12 - Scalar(0.010999999999999999) * _tmp29;
  const Scalar _tmp60 = Scalar(0.20999999999999999) * _tmp31 + Scalar(0.20999999999999999) * _tmp32;
  const Scalar _tmp61 = _tmp59 - _tmp60;
  const Scalar _tmp62 = -_tmp58 + _tmp61;
  const Scalar _tmp63 = _tmp58 + _tmp61;
  const Scalar _tmp64 = _tmp55 * _tmp63;
  const Scalar _tmp65 = _tmp57 * (-_tmp55 * _tmp62 + _tmp64);
  const Scalar _tmp66 = _tmp58 + _tmp59 + _tmp60;
  const Scalar _tmp67 = _tmp37 * _tmp63;
  const Scalar _tmp68 = -_tmp37 * _tmp64 + _tmp56 * _tmp62;
  const Scalar _tmp69 = _tmp47 * _tmp57;
  const Scalar _tmp70 = Scalar(1.0) * _tmp25;
  const Scalar _tmp71 = Scalar(1.0) * _tmp35;
  const Scalar _tmp72 = (-_tmp52 + _tmp70) / (_tmp49 - _tmp71);
  const Scalar _tmp73 = _tmp45 * _tmp63 - _tmp45 * _tmp66 - _tmp47 * _tmp65 -
                        _tmp72 * (-_tmp45 * _tmp67 + _tmp46 * _tmp66 - _tmp68 * _tmp69);
  const Scalar _tmp74 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp75 = _tmp70 + _tmp71 * _tmp72;
  const Scalar _tmp76 = 0;
  const Scalar _tmp77 = _tmp55 * _tmp69;
  const Scalar _tmp78 =
      std::sqrt(Scalar(std::pow(_tmp26, Scalar(2)) + std::pow(_tmp36, Scalar(2))));
  const Scalar _tmp79 = _tmp27 * _tmp78;
  const Scalar _tmp80 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp81 = _tmp79 * (_tmp25 * _tmp36 * _tmp80 - _tmp26 * _tmp35 * _tmp80);
  const Scalar _tmp82 = _tmp57 * _tmp68;
  const Scalar _tmp83 = _tmp37 * _tmp65 - _tmp63 - _tmp72 * (_tmp37 * _tmp82 + _tmp67);
  const Scalar _tmp84 = _tmp49 * _tmp55 - _tmp52 * _tmp56 + _tmp55 * _tmp81;
  const Scalar _tmp85 = _tmp39 * _tmp45 - _tmp42 * _tmp46 + _tmp45 * _tmp81 - _tmp69 * _tmp84;
  const Scalar _tmp86 = _tmp74 * _tmp85;
  const Scalar _tmp87 = _tmp57 * _tmp84;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp85);
  const Scalar _tmp89 = _tmp73 * _tmp88;
  const Scalar _tmp90 = _tmp83 + _tmp89 * (_tmp37 * _tmp87 - _tmp81 - _tmp83 * _tmp86);
  const Scalar _tmp91 = _tmp47 * _tmp74;
  const Scalar _tmp92 = _tmp57 * (-_tmp37 - _tmp90 * _tmp91);
  const Scalar _tmp93 = _tmp74 * _tmp90;
  const Scalar _tmp94 = _tmp38 + _tmp48;
  const Scalar _tmp95 = _tmp94 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp96 = _tmp41 + _tmp51;
  const Scalar _tmp97 = _tmp96 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp98 = std::pow(Scalar(std::pow(_tmp95, Scalar(2)) + std::pow(_tmp97, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp99 = _tmp97 * _tmp98;
  const Scalar _tmp100 = _tmp79 * _tmp99 * (_tmp45 * _tmp93 + _tmp55 * _tmp92 + Scalar(1.0));
  const Scalar _tmp101 = _tmp95 * _tmp98;
  const Scalar _tmp102 = _tmp101 * _tmp96 - _tmp94 * _tmp99;
  const Scalar _tmp103 = Scalar(1.0) * _tmp88;
  const Scalar _tmp104 = _tmp102 * _tmp79 * (_tmp103 * _tmp45 - _tmp103 * _tmp77);
  const Scalar _tmp105 = -Scalar(1.0) * _tmp65 + Scalar(1.0) * _tmp72 * _tmp82;
  const Scalar _tmp106 = _tmp105 + _tmp89 * (-_tmp105 * _tmp86 - Scalar(1.0) * _tmp87);
  const Scalar _tmp107 = _tmp57 * (-_tmp106 * _tmp91 + Scalar(1.0));
  const Scalar _tmp108 = _tmp106 * _tmp74;
  const Scalar _tmp109 = _tmp101 * _tmp79 * (_tmp107 * _tmp55 + _tmp108 * _tmp45);
  const Scalar _tmp110 = _tmp0 * _tmp76;
  const Scalar _tmp111 = _tmp102 * _tmp103;
  const Scalar _tmp112 = _tmp111 * fh1;
  const Scalar _tmp113 = _tmp101 * _tmp107;
  const Scalar _tmp114 = _tmp92 * _tmp99;
  const Scalar _tmp115 = _tmp93 * _tmp99;
  const Scalar _tmp116 = _tmp101 * _tmp108;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp100 - _tmp104 - _tmp109) *
               std::exp(_tmp0 * _tmp79 * (_tmp45 * _tmp76 - _tmp76 * _tmp77) + _tmp100 * fh1 +
                        _tmp104 * fh1 + _tmp109 * fh1);
  _res(2, 0) = -(-_tmp111 * _tmp69 + _tmp113 + _tmp114) *
               std::exp(_tmp110 * _tmp69 + _tmp112 * _tmp69 - _tmp113 * fh1 - _tmp114 * fh1);
  _res(3, 0) =
      -(_tmp111 + _tmp115 + _tmp116) * std::exp(-_tmp110 - _tmp112 - _tmp115 * fh1 - _tmp116 * fh1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
