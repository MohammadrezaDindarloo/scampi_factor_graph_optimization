// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_rx_Nl6
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtRxNl6(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 1001

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (326)
  const Scalar _tmp0 = std::pow(rx, Scalar(2));
  const Scalar _tmp1 = _tmp0 + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2));
  const Scalar _tmp2 = std::sqrt(_tmp1);
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp4 = std::cos(_tmp3);
  const Scalar _tmp5 = _tmp4 * rot_init_y;
  const Scalar _tmp6 = std::sin(_tmp3);
  const Scalar _tmp7 = _tmp6 / _tmp2;
  const Scalar _tmp8 = _tmp7 * rot_init_w;
  const Scalar _tmp9 = _tmp7 * rot_init_z;
  const Scalar _tmp10 = _tmp9 * rx;
  const Scalar _tmp11 = _tmp7 * rot_init_x;
  const Scalar _tmp12 = _tmp10 - _tmp11 * rz + _tmp5 + _tmp8 * ry;
  const Scalar _tmp13 = _tmp4 * rot_init_x;
  const Scalar _tmp14 = _tmp8 * rx;
  const Scalar _tmp15 = _tmp7 * rot_init_y;
  const Scalar _tmp16 = _tmp13 + _tmp14 + _tmp15 * rz - _tmp9 * ry;
  const Scalar _tmp17 = 2 * _tmp16;
  const Scalar _tmp18 = _tmp12 * _tmp17;
  const Scalar _tmp19 = _tmp4 * rot_init_w;
  const Scalar _tmp20 = _tmp11 * rx;
  const Scalar _tmp21 = -_tmp15 * ry + _tmp19 - _tmp20 - _tmp9 * rz;
  const Scalar _tmp22 = _tmp4 * rot_init_z;
  const Scalar _tmp23 = _tmp15 * rx;
  const Scalar _tmp24 = _tmp11 * ry + _tmp22 - _tmp23 + _tmp8 * rz;
  const Scalar _tmp25 = 2 * _tmp24;
  const Scalar _tmp26 = _tmp21 * _tmp25;
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp18 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = -2 * std::pow(_tmp16, Scalar(2));
  const Scalar _tmp29 = 1 - 2 * std::pow(_tmp24, Scalar(2));
  const Scalar _tmp30 = Scalar(0.20999999999999999) * _tmp28 + Scalar(0.20999999999999999) * _tmp29;
  const Scalar _tmp31 = _tmp12 * _tmp25;
  const Scalar _tmp32 = _tmp17 * _tmp21;
  const Scalar _tmp33 =
      -Scalar(0.010999999999999999) * _tmp31 + Scalar(0.010999999999999999) * _tmp32;
  const Scalar _tmp34 = -_tmp30 + _tmp33;
  const Scalar _tmp35 = _tmp27 + _tmp34;
  const Scalar _tmp36 = _tmp35 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp37 = -2 * std::pow(_tmp12, Scalar(2));
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp37;
  const Scalar _tmp39 = Scalar(0.20999999999999999) * _tmp18 - Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp40 = _tmp17 * _tmp24;
  const Scalar _tmp41 = 2 * _tmp12 * _tmp21;
  const Scalar _tmp42 =
      -Scalar(0.010999999999999999) * _tmp40 - Scalar(0.010999999999999999) * _tmp41;
  const Scalar _tmp43 = -_tmp39 + _tmp42;
  const Scalar _tmp44 = _tmp38 + _tmp43;
  const Scalar _tmp45 = _tmp44 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp46 = std::pow(_tmp36, Scalar(2)) + std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = _tmp36 * _tmp47;
  const Scalar _tmp49 = _tmp39 + _tmp42;
  const Scalar _tmp50 = _tmp38 + _tmp49;
  const Scalar _tmp51 = _tmp30 + _tmp33;
  const Scalar _tmp52 = _tmp27 + _tmp51;
  const Scalar _tmp53 = _tmp52 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp54 = _tmp50 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp55 = std::pow(_tmp53, Scalar(2)) + std::pow(_tmp54, Scalar(2));
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp57 = _tmp53 * _tmp56;
  const Scalar _tmp58 = _tmp52 * _tmp56;
  const Scalar _tmp59 = -_tmp27;
  const Scalar _tmp60 = _tmp34 + _tmp59;
  const Scalar _tmp61 = _tmp60 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp62 = -_tmp38;
  const Scalar _tmp63 = _tmp43 + _tmp62;
  const Scalar _tmp64 = _tmp63 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp65 = std::pow(_tmp64, Scalar(2));
  const Scalar _tmp66 = std::pow(_tmp61, Scalar(2)) + _tmp65;
  const Scalar _tmp67 = std::sqrt(_tmp66);
  const Scalar _tmp68 = Scalar(1.0) / (_tmp67);
  const Scalar _tmp69 = _tmp64 * _tmp68;
  const Scalar _tmp70 = _tmp63 * _tmp68;
  const Scalar _tmp71 = -_tmp60 * _tmp69 + _tmp61 * _tmp70;
  const Scalar _tmp72 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp73 = _tmp67 * _tmp72;
  const Scalar _tmp74 = _tmp71 * _tmp73;
  const Scalar _tmp75 = _tmp54 * _tmp56;
  const Scalar _tmp76 = -_tmp50 * _tmp57 + _tmp54 * _tmp58 + _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp61 * _tmp72;
  const Scalar _tmp78 = _tmp51 + _tmp59;
  const Scalar _tmp79 = _tmp78 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp80 = _tmp49 + _tmp62;
  const Scalar _tmp81 = _tmp80 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp82 = std::pow(_tmp79, Scalar(2)) + std::pow(_tmp81, Scalar(2));
  const Scalar _tmp83 = std::pow(_tmp82, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp84 = _tmp81 * _tmp83;
  const Scalar _tmp85 = _tmp79 * _tmp83;
  const Scalar _tmp86 = _tmp77 * _tmp84 - _tmp85;
  const Scalar _tmp87 = -_tmp57 + _tmp75 * _tmp77;
  const Scalar _tmp88 = Scalar(1.0) / (_tmp87);
  const Scalar _tmp89 = _tmp86 * _tmp88;
  const Scalar _tmp90 = _tmp74 * _tmp84 - _tmp76 * _tmp89 + _tmp78 * _tmp84 - _tmp80 * _tmp85;
  const Scalar _tmp91 = Scalar(1.0) * _tmp63;
  const Scalar _tmp92 = -_tmp50 + _tmp91;
  const Scalar _tmp93 = Scalar(0.20999999999999999) * _tmp31 + Scalar(0.20999999999999999) * _tmp32;
  const Scalar _tmp94 = -Scalar(0.010999999999999999) * _tmp28 -
                        Scalar(0.010999999999999999) * _tmp37 + Scalar(-0.010999999999999999);
  const Scalar _tmp95 = Scalar(0.20999999999999999) * _tmp40 - Scalar(0.20999999999999999) * _tmp41;
  const Scalar _tmp96 = _tmp94 - _tmp95;
  const Scalar _tmp97 = -_tmp93 + _tmp96;
  const Scalar _tmp98 = _tmp84 * _tmp97;
  const Scalar _tmp99 = _tmp93 + _tmp96;
  const Scalar _tmp100 = _tmp56 * _tmp97;
  const Scalar _tmp101 = _tmp100 * _tmp54;
  const Scalar _tmp102 = _tmp93 + _tmp94 + _tmp95;
  const Scalar _tmp103 = -_tmp101 * _tmp77 + _tmp102 * _tmp57;
  const Scalar _tmp104 = -_tmp103 * _tmp89 - _tmp77 * _tmp98 + _tmp85 * _tmp99;
  const Scalar _tmp105 = Scalar(1.0) * _tmp60;
  const Scalar _tmp106 = -_tmp105 + _tmp52;
  const Scalar _tmp107 = Scalar(1.0) / (_tmp106);
  const Scalar _tmp108 = _tmp104 * _tmp107;
  const Scalar _tmp109 = _tmp83 * _tmp99;
  const Scalar _tmp110 = _tmp102 * _tmp56;
  const Scalar _tmp111 = _tmp101 - _tmp110 * _tmp54;
  const Scalar _tmp112 = -_tmp108 * _tmp92 - _tmp109 * _tmp81 - _tmp111 * _tmp89 + _tmp98;
  const Scalar _tmp113 = Scalar(1.0) / (_tmp112);
  const Scalar _tmp114 = _tmp107 * _tmp92;
  const Scalar _tmp115 = Scalar(1.0) * _tmp88;
  const Scalar _tmp116 = _tmp114 * _tmp115;
  const Scalar _tmp117 = _tmp103 * _tmp116 - _tmp111 * _tmp115;
  const Scalar _tmp118 = _tmp113 * _tmp117;
  const Scalar _tmp119 = -_tmp115 * _tmp76 - _tmp118 * _tmp90;
  const Scalar _tmp120 = Scalar(1.0) / (_tmp90);
  const Scalar _tmp121 = _tmp112 * _tmp120;
  const Scalar _tmp122 = _tmp117 + _tmp119 * _tmp121;
  const Scalar _tmp123 = _tmp113 * _tmp84;
  const Scalar _tmp124 = _tmp113 * _tmp86;
  const Scalar _tmp125 = -_tmp122 * _tmp124 + Scalar(1.0);
  const Scalar _tmp126 = _tmp125 * _tmp88;
  const Scalar _tmp127 = _tmp122 * _tmp123 + _tmp126 * _tmp75;
  const Scalar _tmp128 = _tmp73 * fh1;
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 = _tmp45 * _tmp47;
  const Scalar _tmp131 = _tmp77 * _tmp88;
  const Scalar _tmp132 = _tmp77 * _tmp97;
  const Scalar _tmp133 = _tmp103 * _tmp131 + _tmp132;
  const Scalar _tmp134 = _tmp111 * _tmp131 - _tmp114 * _tmp133 - _tmp97;
  const Scalar _tmp135 = _tmp113 * _tmp134;
  const Scalar _tmp136 = _tmp131 * _tmp76 - _tmp135 * _tmp90 - _tmp74;
  const Scalar _tmp137 = _tmp121 * _tmp136 + _tmp134;
  const Scalar _tmp138 = -_tmp124 * _tmp137 - _tmp77;
  const Scalar _tmp139 = _tmp75 * _tmp88;
  const Scalar _tmp140 = _tmp123 * _tmp137 + _tmp138 * _tmp139 + Scalar(1.0);
  const Scalar _tmp141 = _tmp128 * _tmp140;
  const Scalar _tmp142 = Scalar(1.0) * _tmp120;
  const Scalar _tmp143 = _tmp142 * _tmp89;
  const Scalar _tmp144 = _tmp142 * _tmp84 - _tmp143 * _tmp75;
  const Scalar _tmp145 = -_tmp130 * _tmp35 + _tmp44 * _tmp48;
  const Scalar _tmp146 = _tmp128 * _tmp145;
  const Scalar _tmp147 = _tmp105 * _tmp114 + _tmp91;
  const Scalar _tmp148 = 0;
  const Scalar _tmp149 = _tmp124 * _tmp148;
  const Scalar _tmp150 = _tmp123 * _tmp148 - _tmp139 * _tmp149;
  const Scalar _tmp151 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp152 = _tmp151 * _tmp73;
  const Scalar _tmp153 = (Scalar(1) / Scalar(2)) / _tmp1;
  const Scalar _tmp154 = _tmp0 * _tmp153;
  const Scalar _tmp155 = _tmp153 * rx;
  const Scalar _tmp156 = _tmp155 * rz;
  const Scalar _tmp157 = _tmp155 * ry;
  const Scalar _tmp158 = _tmp6 / (_tmp1 * std::sqrt(_tmp1));
  const Scalar _tmp159 = _tmp0 * _tmp158;
  const Scalar _tmp160 = _tmp158 * rx;
  const Scalar _tmp161 = _tmp160 * ry;
  const Scalar _tmp162 = _tmp160 * rz;
  const Scalar _tmp163 = -Scalar(1) / Scalar(2) * _tmp10 + _tmp13 * _tmp157 - _tmp15 -
                         _tmp154 * _tmp5 + _tmp156 * _tmp19 + _tmp159 * rot_init_y -
                         _tmp161 * rot_init_x - _tmp162 * rot_init_w;
  const Scalar _tmp164 = _tmp163 * _tmp24;
  const Scalar _tmp165 = Scalar(0.83999999999999997) * _tmp164;
  const Scalar _tmp166 = -_tmp13 * _tmp156 + _tmp154 * _tmp22 + _tmp157 * _tmp19 -
                         _tmp159 * rot_init_z - _tmp161 * rot_init_w + _tmp162 * rot_init_x -
                         Scalar(1) / Scalar(2) * _tmp23 + _tmp9;
  const Scalar _tmp167 = _tmp12 * _tmp166;
  const Scalar _tmp168 = Scalar(0.83999999999999997) * _tmp167;
  const Scalar _tmp169 = -_tmp11 - _tmp13 * _tmp154 - Scalar(1) / Scalar(2) * _tmp14 -
                         _tmp156 * _tmp22 - _tmp157 * _tmp5 + _tmp159 * rot_init_x +
                         _tmp161 * rot_init_y + _tmp162 * rot_init_z;
  const Scalar _tmp170 = Scalar(0.021999999999999999) * _tmp169;
  const Scalar _tmp171 = _tmp16 * _tmp163;
  const Scalar _tmp172 = _tmp154 * _tmp19 + _tmp156 * _tmp5 - _tmp157 * _tmp22 -
                         _tmp159 * rot_init_w + _tmp161 * rot_init_z - _tmp162 * rot_init_y -
                         Scalar(1) / Scalar(2) * _tmp20 + _tmp8;
  const Scalar _tmp173 = Scalar(0.021999999999999999) * _tmp24;
  const Scalar _tmp174 = Scalar(0.021999999999999999) * _tmp21;
  const Scalar _tmp175 = -_tmp12 * _tmp170 - _tmp166 * _tmp174 -
                         Scalar(0.021999999999999999) * _tmp171 - _tmp172 * _tmp173;
  const Scalar _tmp176 = _tmp165 + _tmp168 + _tmp175;
  const Scalar _tmp177 = Scalar(0.41999999999999998) * _tmp169;
  const Scalar _tmp178 = _tmp177 * _tmp24;
  const Scalar _tmp179 = Scalar(0.41999999999999998) * _tmp21;
  const Scalar _tmp180 = _tmp163 * _tmp179;
  const Scalar _tmp181 = _tmp178 + _tmp180;
  const Scalar _tmp182 = Scalar(0.41999999999999998) * _tmp166;
  const Scalar _tmp183 = _tmp16 * _tmp182;
  const Scalar _tmp184 = Scalar(0.41999999999999998) * _tmp172;
  const Scalar _tmp185 = _tmp12 * _tmp184;
  const Scalar _tmp186 = -_tmp183 - _tmp185;
  const Scalar _tmp187 = _tmp181 + _tmp186;
  const Scalar _tmp188 = _tmp176 + _tmp187;
  const Scalar _tmp189 = Scalar(0.83999999999999997) * _tmp172;
  const Scalar _tmp190 = _tmp16 * _tmp189;
  const Scalar _tmp191 = _tmp165 + _tmp190;
  const Scalar _tmp192 = -_tmp178 - _tmp180;
  const Scalar _tmp193 = _tmp12 * _tmp163;
  const Scalar _tmp194 = _tmp16 * _tmp170 - _tmp166 * _tmp173 + _tmp172 * _tmp174 -
                         Scalar(0.021999999999999999) * _tmp193;
  const Scalar _tmp195 = _tmp186 + _tmp192 + _tmp194;
  const Scalar _tmp196 = _tmp191 + _tmp195;
  const Scalar _tmp197 = _tmp188 * _tmp64 + _tmp196 * _tmp61;
  const Scalar _tmp198 = _tmp197 * _tmp68 * _tmp72;
  const Scalar _tmp199 = _tmp48 * fh1;
  const Scalar _tmp200 = _tmp127 * _tmp199;
  const Scalar _tmp201 = _tmp150 * _tmp151;
  const Scalar _tmp202 = -_tmp165;
  const Scalar _tmp203 = -_tmp168 + _tmp175;
  const Scalar _tmp204 = _tmp187 + _tmp202 + _tmp203;
  const Scalar _tmp205 = _tmp204 * _tmp47;
  const Scalar _tmp206 = Scalar(1.0) / (_tmp65);
  const Scalar _tmp207 = _tmp188 * _tmp206 * _tmp67;
  const Scalar _tmp208 = _tmp145 * fh1;
  const Scalar _tmp209 = _tmp144 * _tmp208;
  const Scalar _tmp210 = _tmp130 * fh1;
  const Scalar _tmp211 = _tmp140 * _tmp210;
  const Scalar _tmp212 = _tmp183 + _tmp185;
  const Scalar _tmp213 = _tmp181 + _tmp194;
  const Scalar _tmp214 = _tmp191 + _tmp212 + _tmp213;
  const Scalar _tmp215 = (Scalar(1) / Scalar(2)) * (2 * _tmp204 * _tmp45 + 2 * _tmp214 * _tmp36) /
                         (_tmp46 * std::sqrt(_tmp46));
  const Scalar _tmp216 = _tmp215 * _tmp45;
  const Scalar _tmp217 = _tmp214 * _tmp47;
  const Scalar _tmp218 = _tmp215 * _tmp36;
  const Scalar _tmp219 = _tmp176 + _tmp192 + _tmp212;
  const Scalar _tmp220 = -_tmp190;
  const Scalar _tmp221 = _tmp195 + _tmp202 + _tmp220;
  const Scalar _tmp222 =
      (2 * _tmp219 * _tmp81 + 2 * _tmp221 * _tmp79) / (_tmp82 * std::sqrt(_tmp82));
  const Scalar _tmp223 = (Scalar(1) / Scalar(2)) * _tmp222;
  const Scalar _tmp224 = _tmp223 * _tmp81;
  const Scalar _tmp225 = _tmp202 + _tmp212;
  const Scalar _tmp226 = _tmp213 + _tmp220 + _tmp225;
  const Scalar _tmp227 = _tmp226 * _tmp56;
  const Scalar _tmp228 = _tmp192 + _tmp203 + _tmp225;
  const Scalar _tmp229 =
      (2 * _tmp226 * _tmp53 + 2 * _tmp228 * _tmp54) / (_tmp55 * std::sqrt(_tmp55));
  const Scalar _tmp230 = (Scalar(1) / Scalar(2)) * _tmp229;
  const Scalar _tmp231 = _tmp230 * _tmp54;
  const Scalar _tmp232 = _tmp228 * _tmp56;
  const Scalar _tmp233 = _tmp230 * _tmp53;
  const Scalar _tmp234 = _tmp188 * _tmp61;
  const Scalar _tmp235 = _tmp206 * _tmp234;
  const Scalar _tmp236 = _tmp196 * _tmp72;
  const Scalar _tmp237 = (-_tmp227 - _tmp231 * _tmp77 + _tmp232 * _tmp77 + _tmp233 -
                          _tmp235 * _tmp75 + _tmp236 * _tmp75) /
                         std::pow(_tmp87, Scalar(2));
  const Scalar _tmp238 = _tmp237 * _tmp86;
  const Scalar _tmp239 = _tmp219 * _tmp83;
  const Scalar _tmp240 = _tmp239 * _tmp97;
  const Scalar _tmp241 = _tmp16 * _tmp177;
  const Scalar _tmp242 = Scalar(0.41999999999999998) * _tmp193;
  const Scalar _tmp243 = _tmp182 * _tmp24;
  const Scalar _tmp244 = _tmp172 * _tmp179;
  const Scalar _tmp245 = Scalar(0.043999999999999997) * _tmp167;
  const Scalar _tmp246 = _tmp16 * _tmp172;
  const Scalar _tmp247 = Scalar(0.043999999999999997) * _tmp246;
  const Scalar _tmp248 = _tmp245 + _tmp247;
  const Scalar _tmp249 = _tmp241 + _tmp242 + _tmp243 + _tmp244 + _tmp248;
  const Scalar _tmp250 = _tmp12 * _tmp177;
  const Scalar _tmp251 = Scalar(0.41999999999999998) * _tmp171;
  const Scalar _tmp252 = _tmp184 * _tmp24;
  const Scalar _tmp253 = _tmp166 * _tmp179;
  const Scalar _tmp254 = -_tmp250 + _tmp251 + _tmp252 - _tmp253;
  const Scalar _tmp255 = _tmp249 + _tmp254;
  const Scalar _tmp256 = _tmp250 - _tmp251 - _tmp252 + _tmp253;
  const Scalar _tmp257 = -_tmp241 - _tmp242 - _tmp243 - _tmp244 + _tmp248 + _tmp256;
  const Scalar _tmp258 = _tmp257 * _tmp77;
  const Scalar _tmp259 = _tmp100 * _tmp228;
  const Scalar _tmp260 = _tmp101 * _tmp235 - _tmp101 * _tmp236 + _tmp102 * _tmp227 -
                         _tmp102 * _tmp233 + _tmp132 * _tmp231 + _tmp255 * _tmp57 -
                         _tmp258 * _tmp75 - _tmp259 * _tmp77;
  const Scalar _tmp261 = _tmp223 * _tmp79;
  const Scalar _tmp262 = _tmp249 + _tmp256;
  const Scalar _tmp263 = _tmp221 * _tmp83;
  const Scalar _tmp264 = -_tmp224 * _tmp77 - _tmp235 * _tmp84 + _tmp236 * _tmp84 +
                         _tmp239 * _tmp77 + _tmp261 - _tmp263;
  const Scalar _tmp265 = _tmp264 * _tmp88;
  const Scalar _tmp266 = Scalar(1.6799999999999999) * _tmp164;
  const Scalar _tmp267 = Scalar(0.83999999999999997) * _tmp16 * _tmp166;
  const Scalar _tmp268 = _tmp12 * _tmp189;
  const Scalar _tmp269 = Scalar(0.83999999999999997) * _tmp163 * _tmp21 +
                         Scalar(0.83999999999999997) * _tmp169 * _tmp24;
  const Scalar _tmp270 =
      _tmp92 * (-Scalar(1.6799999999999999) * _tmp246 - _tmp266 + _tmp267 + _tmp268 + _tmp269) /
      std::pow(_tmp106, Scalar(2));
  const Scalar _tmp271 =
      Scalar(1.6799999999999999) * _tmp167 + _tmp266 - _tmp267 - _tmp268 + _tmp269;
  const Scalar _tmp272 = _tmp102 * _tmp231 - _tmp110 * _tmp228 - _tmp231 * _tmp97 -
                         _tmp255 * _tmp75 + _tmp257 * _tmp75 + _tmp259;
  const Scalar _tmp273 =
      _tmp104 * _tmp270 - _tmp108 * _tmp271 - _tmp109 * _tmp219 + _tmp111 * _tmp238 -
      _tmp111 * _tmp265 -
      _tmp114 * (_tmp103 * _tmp238 - _tmp103 * _tmp265 + _tmp132 * _tmp224 + _tmp235 * _tmp98 -
                 _tmp236 * _tmp98 - _tmp240 * _tmp77 - _tmp258 * _tmp84 - _tmp260 * _tmp89 -
                 _tmp261 * _tmp99 + _tmp262 * _tmp85 + _tmp263 * _tmp99) -
      _tmp224 * _tmp97 + _tmp224 * _tmp99 + _tmp240 + _tmp257 * _tmp84 - _tmp262 * _tmp84 -
      _tmp272 * _tmp89;
  const Scalar _tmp274 = _tmp273 / std::pow(_tmp112, Scalar(2));
  const Scalar _tmp275 = _tmp274 * _tmp84;
  const Scalar _tmp276 = _tmp237 * _tmp75;
  const Scalar _tmp277 = _tmp75 * _tmp89;
  const Scalar _tmp278 = _tmp113 * _tmp264;
  const Scalar _tmp279 = _tmp149 * _tmp88;
  const Scalar _tmp280 = _tmp113 * _tmp239;
  const Scalar _tmp281 = _tmp120 * _tmp273;
  const Scalar _tmp282 = _tmp197 / (_tmp66 * std::sqrt(_tmp66));
  const Scalar _tmp283 =
      _tmp73 * (-_tmp188 * _tmp60 * _tmp68 - _tmp196 * _tmp69 + _tmp196 * _tmp70 +
                _tmp234 * _tmp68 + _tmp282 * _tmp60 * _tmp64 - _tmp282 * _tmp61 * _tmp63);
  const Scalar _tmp284 = _tmp236 * _tmp88;
  const Scalar _tmp285 = _tmp107 * _tmp271;
  const Scalar _tmp286 = _tmp237 * _tmp77;
  const Scalar _tmp287 = _tmp235 * _tmp88;
  const Scalar _tmp288 =
      _tmp111 * _tmp284 - _tmp111 * _tmp286 - _tmp111 * _tmp287 -
      _tmp114 * (_tmp103 * _tmp284 - _tmp103 * _tmp286 - _tmp103 * _tmp287 + _tmp131 * _tmp260 -
                 _tmp235 * _tmp97 + _tmp236 * _tmp97 + _tmp258) +
      _tmp131 * _tmp272 + _tmp133 * _tmp270 - _tmp133 * _tmp285 + _tmp241 + _tmp242 + _tmp243 +
      _tmp244 - _tmp245 - _tmp247 + _tmp254;
  const Scalar _tmp289 = _tmp113 * _tmp90;
  const Scalar _tmp290 = _tmp198 * _tmp71;
  const Scalar _tmp291 = _tmp207 * _tmp71;
  const Scalar _tmp292 = -_tmp227 * _tmp50 + _tmp227 * _tmp54 - _tmp228 * _tmp57 +
                         _tmp228 * _tmp58 - _tmp231 * _tmp52 - _tmp231 * _tmp74 + _tmp232 * _tmp74 +
                         _tmp233 * _tmp50 + _tmp283 * _tmp75 + _tmp290 * _tmp75 - _tmp291 * _tmp75;
  const Scalar _tmp293 = -_tmp219 * _tmp85 - _tmp224 * _tmp74 - _tmp224 * _tmp78 +
                         _tmp238 * _tmp76 + _tmp239 * _tmp74 + _tmp239 * _tmp78 + _tmp261 * _tmp80 -
                         _tmp263 * _tmp80 + _tmp263 * _tmp81 - _tmp265 * _tmp76 + _tmp283 * _tmp84 +
                         _tmp290 * _tmp84 - _tmp291 * _tmp84 - _tmp292 * _tmp89;
  const Scalar _tmp294 = _tmp274 * _tmp90;
  const Scalar _tmp295 = _tmp293 / std::pow(_tmp90, Scalar(2));
  const Scalar _tmp296 = _tmp112 * _tmp295;
  const Scalar _tmp297 = _tmp121 * (_tmp131 * _tmp292 + _tmp134 * _tmp294 - _tmp135 * _tmp293 -
                                    _tmp283 + _tmp284 * _tmp76 - _tmp286 * _tmp76 -
                                    _tmp287 * _tmp76 - _tmp288 * _tmp289 - _tmp290 + _tmp291) +
                         _tmp136 * _tmp281 - _tmp136 * _tmp296 + _tmp288;
  const Scalar _tmp298 = _tmp274 * _tmp86;
  const Scalar _tmp299 =
      -_tmp124 * _tmp297 - _tmp137 * _tmp278 + _tmp137 * _tmp298 + _tmp235 - _tmp236;
  const Scalar _tmp300 = _tmp138 * _tmp88;
  const Scalar _tmp301 = _tmp113 * _tmp137;
  const Scalar _tmp302 = _tmp120 * _tmp75;
  const Scalar _tmp303 = Scalar(1.0) * _tmp237;
  const Scalar _tmp304 = _tmp303 * _tmp86;
  const Scalar _tmp305 = Scalar(1.0) * _tmp295;
  const Scalar _tmp306 = Scalar(0.5) * _tmp120;
  const Scalar _tmp307 = _tmp115 * _tmp264;
  const Scalar _tmp308 = _tmp113 * _tmp122;
  const Scalar _tmp309 = _tmp103 * _tmp115;
  const Scalar _tmp310 = -_tmp103 * _tmp114 * _tmp303 + _tmp111 * _tmp303 - _tmp115 * _tmp272 +
                         _tmp116 * _tmp260 - _tmp270 * _tmp309 + _tmp285 * _tmp309;
  const Scalar _tmp311 = _tmp119 * _tmp281 - _tmp119 * _tmp296 +
                         _tmp121 * (-_tmp115 * _tmp292 + _tmp117 * _tmp294 - _tmp118 * _tmp293 -
                                    _tmp289 * _tmp310 + _tmp303 * _tmp76) +
                         _tmp310;
  const Scalar _tmp312 = -_tmp122 * _tmp278 + _tmp122 * _tmp298 - _tmp124 * _tmp311;
  const Scalar _tmp313 = -_tmp130 * _tmp214 + _tmp204 * _tmp48 - _tmp205 * _tmp35 +
                         _tmp216 * _tmp35 + _tmp217 * _tmp44 - _tmp218 * _tmp44;
  const Scalar _tmp314 = _tmp148 * _tmp151;
  const Scalar _tmp315 = _tmp314 * _tmp88;
  const Scalar _tmp316 = _tmp142 * fh1;
  const Scalar _tmp317 = _tmp145 * _tmp316;
  const Scalar _tmp318 = _tmp205 * fh1;
  const Scalar _tmp319 = _tmp217 * fh1;
  const Scalar _tmp320 = _tmp120 * _tmp208;
  const Scalar _tmp321 = _tmp208 * _tmp305;
  const Scalar _tmp322 = _tmp216 * fh1;
  const Scalar _tmp323 = _tmp218 * fh1;
  const Scalar _tmp324 = _tmp274 * _tmp314;
  const Scalar _tmp325 = _tmp313 * _tmp316;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = 0;
  _res(1, 0) =
      -(-_tmp128 * _tmp130 *
            (_tmp123 * _tmp297 - _tmp137 * _tmp275 + _tmp137 * _tmp280 - _tmp138 * _tmp276 +
             _tmp139 * _tmp299 - _tmp224 * _tmp301 - _tmp231 * _tmp300 + _tmp232 * _tmp300) -
        _tmp128 * _tmp144 * _tmp313 -
        _tmp128 * _tmp48 *
            (-_tmp122 * _tmp275 + _tmp122 * _tmp280 + _tmp123 * _tmp311 - _tmp125 * _tmp276 -
             _tmp126 * _tmp231 + _tmp126 * _tmp232 + _tmp139 * _tmp312 - _tmp224 * _tmp308) -
        _tmp129 * _tmp217 + _tmp129 * _tmp218 - _tmp141 * _tmp205 + _tmp141 * _tmp216 -
        _tmp146 * (_tmp142 * _tmp239 - _tmp143 * _tmp232 - _tmp222 * _tmp306 * _tmp81 +
                   _tmp229 * _tmp306 * _tmp54 * _tmp89 + _tmp277 * _tmp305 + _tmp302 * _tmp304 -
                   _tmp302 * _tmp307 - _tmp305 * _tmp84) -
        _tmp152 * (-_tmp113 * _tmp148 * _tmp224 - _tmp139 * _tmp148 * _tmp278 +
                   _tmp148 * _tmp274 * _tmp277 - _tmp148 * _tmp275 + _tmp148 * _tmp280 +
                   _tmp149 * _tmp276 + _tmp231 * _tmp279 - _tmp232 * _tmp279) -
        _tmp198 * _tmp200 - _tmp198 * _tmp201 - _tmp198 * _tmp209 - _tmp198 * _tmp211 +
        _tmp200 * _tmp207 + _tmp201 * _tmp207 + _tmp207 * _tmp209 + _tmp207 * _tmp211) *
      std::exp(_tmp129 * _tmp48 + _tmp130 * _tmp141 + _tmp144 * _tmp146 + _tmp150 * _tmp152);
  _res(2, 0) =
      -(_tmp124 * _tmp237 * _tmp314 - _tmp125 * _tmp199 * _tmp237 + _tmp126 * _tmp319 -
        _tmp126 * _tmp323 - _tmp138 * _tmp210 * _tmp237 + _tmp199 * _tmp312 * _tmp88 +
        _tmp210 * _tmp299 * _tmp88 - _tmp278 * _tmp315 + _tmp300 * _tmp318 - _tmp300 * _tmp322 +
        _tmp304 * _tmp320 - _tmp307 * _tmp320 + _tmp321 * _tmp89 + _tmp324 * _tmp89 -
        _tmp325 * _tmp89) *
      std::exp(_tmp124 * _tmp315 - _tmp126 * _tmp199 - _tmp210 * _tmp300 + _tmp317 * _tmp89);
  _res(3, 0) =
      -(_tmp113 * _tmp199 * _tmp311 + _tmp113 * _tmp210 * _tmp297 - _tmp122 * _tmp199 * _tmp274 -
        _tmp137 * _tmp210 * _tmp274 + _tmp301 * _tmp318 - _tmp301 * _tmp322 + _tmp308 * _tmp319 -
        _tmp308 * _tmp323 - _tmp321 - _tmp324 + _tmp325) *
      std::exp(-_tmp113 * _tmp314 - _tmp199 * _tmp308 - _tmp210 * _tmp301 - _tmp317);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
