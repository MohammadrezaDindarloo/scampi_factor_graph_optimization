// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: IK_residual_func_cost3_wrt_fh1_Nl13
 *
 * Args:
 *     fh1: Scalar
 *     fv1: Scalar
 *     rx: Scalar
 *     ry: Scalar
 *     rz: Scalar
 *     p_init0: Scalar
 *     p_init1: Scalar
 *     p_init2: Scalar
 *     rot_init_x: Scalar
 *     rot_init_y: Scalar
 *     rot_init_z: Scalar
 *     rot_init_w: Scalar
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix41
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 4, 1> IkResidualFuncCost3WrtFh1Nl13(
    const Scalar fh1, const Scalar fv1, const Scalar rx, const Scalar ry, const Scalar rz,
    const Scalar p_init0, const Scalar p_init1, const Scalar p_init2, const Scalar rot_init_x,
    const Scalar rot_init_y, const Scalar rot_init_z, const Scalar rot_init_w,
    const Scalar epsilon) {
  // Total ops: 317

  // Unused inputs
  (void)p_init2;
  (void)epsilon;

  // Input arrays

  // Intermediate terms (118)
  const Scalar _tmp0 = Scalar(43.164000000000001) - fv1;
  const Scalar _tmp1 = std::sqrt(
      Scalar(std::pow(rx, Scalar(2)) + std::pow(ry, Scalar(2)) + std::pow(rz, Scalar(2))));
  const Scalar _tmp2 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp3 = std::cos(_tmp2);
  const Scalar _tmp4 = std::sin(_tmp2) / _tmp1;
  const Scalar _tmp5 = _tmp4 * ry;
  const Scalar _tmp6 = _tmp4 * rx;
  const Scalar _tmp7 = _tmp4 * rz;
  const Scalar _tmp8 =
      _tmp3 * rot_init_y + _tmp5 * rot_init_w + _tmp6 * rot_init_z - _tmp7 * rot_init_x;
  const Scalar _tmp9 = -2 * std::pow(_tmp8, Scalar(2));
  const Scalar _tmp10 =
      _tmp3 * rot_init_z + _tmp5 * rot_init_x - _tmp6 * rot_init_y + _tmp7 * rot_init_w;
  const Scalar _tmp11 = -2 * std::pow(_tmp10, Scalar(2));
  const Scalar _tmp12 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp9 +
                        Scalar(0.20999999999999999);
  const Scalar _tmp13 =
      _tmp3 * rot_init_x - _tmp5 * rot_init_z + _tmp6 * rot_init_w + _tmp7 * rot_init_y;
  const Scalar _tmp14 = 2 * _tmp13;
  const Scalar _tmp15 = _tmp14 * _tmp8;
  const Scalar _tmp16 =
      _tmp3 * rot_init_w - _tmp5 * rot_init_y - _tmp6 * rot_init_x - _tmp7 * rot_init_z;
  const Scalar _tmp17 = 2 * _tmp10 * _tmp16;
  const Scalar _tmp18 = Scalar(0.20999999999999999) * _tmp15 - Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp19 = _tmp10 * _tmp14;
  const Scalar _tmp20 = 2 * _tmp8;
  const Scalar _tmp21 = _tmp16 * _tmp20;
  const Scalar _tmp22 =
      -Scalar(0.010999999999999999) * _tmp19 - Scalar(0.010999999999999999) * _tmp21;
  const Scalar _tmp23 = -_tmp18 + _tmp22;
  const Scalar _tmp24 = _tmp12 + _tmp23;
  const Scalar _tmp25 = _tmp24 + p_init0 + Scalar(-2.5202214700000001);
  const Scalar _tmp26 = 1 - 2 * std::pow(_tmp13, Scalar(2));
  const Scalar _tmp27 = Scalar(0.20999999999999999) * _tmp11 + Scalar(0.20999999999999999) * _tmp26;
  const Scalar _tmp28 = -_tmp27;
  const Scalar _tmp29 = _tmp10 * _tmp20;
  const Scalar _tmp30 = _tmp14 * _tmp16;
  const Scalar _tmp31 =
      -Scalar(0.010999999999999999) * _tmp29 + Scalar(0.010999999999999999) * _tmp30;
  const Scalar _tmp32 = Scalar(0.20999999999999999) * _tmp15 + Scalar(0.20999999999999999) * _tmp17;
  const Scalar _tmp33 = _tmp31 + _tmp32;
  const Scalar _tmp34 = _tmp28 + _tmp33;
  const Scalar _tmp35 = _tmp34 + p_init1 + Scalar(8.3888750099999996);
  const Scalar _tmp36 = std::pow(Scalar(std::pow(_tmp25, Scalar(2)) + std::pow(_tmp35, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp37 = _tmp25 * _tmp36;
  const Scalar _tmp38 = Scalar(0.20999999999999999) * _tmp19 - Scalar(0.20999999999999999) * _tmp21;
  const Scalar _tmp39 =
      -Scalar(0.010999999999999999) * _tmp26 - Scalar(0.010999999999999999) * _tmp9;
  const Scalar _tmp40 = Scalar(0.20999999999999999) * _tmp29 + Scalar(0.20999999999999999) * _tmp30;
  const Scalar _tmp41 = _tmp39 - _tmp40;
  const Scalar _tmp42 = _tmp38 + _tmp41;
  const Scalar _tmp43 = _tmp35 * _tmp36;
  const Scalar _tmp44 = _tmp31 - _tmp32;
  const Scalar _tmp45 = _tmp28 + _tmp44;
  const Scalar _tmp46 = _tmp45 + p_init1 + Scalar(8.3196563700000006);
  const Scalar _tmp47 = -_tmp12;
  const Scalar _tmp48 = _tmp23 + _tmp47;
  const Scalar _tmp49 = _tmp48 + p_init0 + Scalar(1.9874742000000001);
  const Scalar _tmp50 = Scalar(1.0) / (_tmp49);
  const Scalar _tmp51 = _tmp46 * _tmp50;
  const Scalar _tmp52 = -_tmp38;
  const Scalar _tmp53 = _tmp41 + _tmp52;
  const Scalar _tmp54 = _tmp37 * _tmp53;
  const Scalar _tmp55 = _tmp27 + _tmp44;
  const Scalar _tmp56 = _tmp55 + p_init1 + Scalar(-4.8333311099999996);
  const Scalar _tmp57 = _tmp18 + _tmp22;
  const Scalar _tmp58 = _tmp47 + _tmp57;
  const Scalar _tmp59 = _tmp58 + p_init0 + Scalar(1.79662371);
  const Scalar _tmp60 = std::pow(Scalar(std::pow(_tmp56, Scalar(2)) + std::pow(_tmp59, Scalar(2))),
                                 Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp61 = _tmp59 * _tmp60;
  const Scalar _tmp62 = _tmp53 * _tmp61;
  const Scalar _tmp63 = _tmp39 + _tmp40 + _tmp52;
  const Scalar _tmp64 = _tmp56 * _tmp60;
  const Scalar _tmp65 = -_tmp51 * _tmp62 + _tmp63 * _tmp64;
  const Scalar _tmp66 = _tmp37 * _tmp51 - _tmp43;
  const Scalar _tmp67 = Scalar(1.0) / (_tmp51 * _tmp61 - _tmp64);
  const Scalar _tmp68 = _tmp66 * _tmp67;
  const Scalar _tmp69 = Scalar(1.0) * _tmp45;
  const Scalar _tmp70 = Scalar(1.0) * _tmp48;
  const Scalar _tmp71 = (-_tmp58 + _tmp70) / (_tmp55 - _tmp69);
  const Scalar _tmp72 = _tmp67 * (-_tmp61 * _tmp63 + _tmp62);
  const Scalar _tmp73 = -_tmp37 * _tmp42 + _tmp54 - _tmp66 * _tmp72 -
                        _tmp71 * (_tmp42 * _tmp43 - _tmp51 * _tmp54 - _tmp65 * _tmp68);
  const Scalar _tmp74 = Scalar(1.0) / (_tmp73);
  const Scalar _tmp75 = _tmp69 * _tmp71 + _tmp70;
  const Scalar _tmp76 = 0;
  const Scalar _tmp77 = _tmp74 * _tmp76;
  const Scalar _tmp78 = _tmp61 * _tmp67;
  const Scalar _tmp79 = _tmp66 * _tmp74;
  const Scalar _tmp80 = _tmp76 * _tmp79;
  const Scalar _tmp81 =
      std::sqrt(Scalar(std::pow(_tmp46, Scalar(2)) + std::pow(_tmp49, Scalar(2))));
  const Scalar _tmp82 = _tmp50 * _tmp81;
  const Scalar _tmp83 = Scalar(1.0) / (_tmp81);
  const Scalar _tmp84 = _tmp82 * (-_tmp45 * _tmp49 * _tmp83 + _tmp46 * _tmp48 * _tmp83);
  const Scalar _tmp85 = _tmp65 * _tmp67;
  const Scalar _tmp86 = _tmp51 * _tmp72 - _tmp53 - _tmp71 * (_tmp51 * _tmp53 + _tmp51 * _tmp85);
  const Scalar _tmp87 = _tmp55 * _tmp61 - _tmp58 * _tmp64 + _tmp61 * _tmp84;
  const Scalar _tmp88 = -_tmp24 * _tmp43 + _tmp34 * _tmp37 + _tmp37 * _tmp84 - _tmp68 * _tmp87;
  const Scalar _tmp89 = _tmp74 * _tmp88;
  const Scalar _tmp90 = _tmp67 * _tmp87;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp88);
  const Scalar _tmp92 = _tmp73 * _tmp91;
  const Scalar _tmp93 = _tmp86 + _tmp92 * (_tmp51 * _tmp90 - _tmp84 - _tmp86 * _tmp89);
  const Scalar _tmp94 = -_tmp51 - _tmp79 * _tmp93;
  const Scalar _tmp95 = _tmp74 * _tmp93;
  const Scalar _tmp96 = _tmp12 + _tmp57;
  const Scalar _tmp97 = _tmp96 + p_init0 + Scalar(-2.71799795);
  const Scalar _tmp98 = _tmp27 + _tmp33;
  const Scalar _tmp99 = _tmp98 + p_init1 + Scalar(-4.7752063900000001);
  const Scalar _tmp100 = std::pow(Scalar(std::pow(_tmp97, Scalar(2)) + std::pow(_tmp99, Scalar(2))),
                                  Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp101 = _tmp100 * _tmp97;
  const Scalar _tmp102 = _tmp101 * _tmp82 * (_tmp37 * _tmp95 + _tmp78 * _tmp94 + Scalar(1.0));
  const Scalar _tmp103 = Scalar(1.0) * _tmp71 * _tmp85 - Scalar(1.0) * _tmp72;
  const Scalar _tmp104 = _tmp103 + _tmp92 * (-_tmp103 * _tmp89 - Scalar(1.0) * _tmp90);
  const Scalar _tmp105 = -_tmp104 * _tmp79 + Scalar(1.0);
  const Scalar _tmp106 = _tmp104 * _tmp74;
  const Scalar _tmp107 = _tmp100 * _tmp99;
  const Scalar _tmp108 = _tmp107 * _tmp82 * (_tmp105 * _tmp78 + _tmp106 * _tmp37);
  const Scalar _tmp109 = -_tmp101 * _tmp98 + _tmp107 * _tmp96;
  const Scalar _tmp110 = Scalar(1.0) * _tmp91;
  const Scalar _tmp111 = _tmp109 * _tmp82 * (_tmp110 * _tmp37 - _tmp110 * _tmp61 * _tmp68);
  const Scalar _tmp112 = _tmp109 * _tmp110;
  const Scalar _tmp113 = _tmp112 * fh1;
  const Scalar _tmp114 = _tmp101 * _tmp67 * _tmp94;
  const Scalar _tmp115 = _tmp105 * _tmp107 * _tmp67;
  const Scalar _tmp116 = _tmp101 * _tmp95;
  const Scalar _tmp117 = _tmp106 * _tmp107;

  // Output terms (1)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res(0, 0) = -std::exp(-fh1);
  _res(1, 0) = -(-_tmp102 - _tmp108 - _tmp111) *
               std::exp(_tmp0 * _tmp82 * (_tmp37 * _tmp77 - _tmp78 * _tmp80) + _tmp102 * fh1 +
                        _tmp108 * fh1 + _tmp111 * fh1);
  _res(2, 0) = -(-_tmp112 * _tmp68 + _tmp114 + _tmp115) *
               std::exp(_tmp0 * _tmp67 * _tmp80 + _tmp113 * _tmp68 - _tmp114 * fh1 - _tmp115 * fh1);
  _res(3, 0) = -(_tmp112 + _tmp116 + _tmp117) *
               std::exp(-_tmp0 * _tmp77 - _tmp113 - _tmp116 * fh1 - _tmp117 * fh1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
